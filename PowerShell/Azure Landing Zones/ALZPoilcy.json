{
  "Tenant": {
    "TenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
    "RoleAssignments": {
      "/providers/microsoft.authorization/roleassignments/69314767-93b9-4568-a14a-10a26743da79": [
        {
          "RoleAssignmentId": "/providers/microsoft.authorization/roleassignments/69314767-93b9-4568-a14a-10a26743da79",
          "Scope": "/",
          "DisplayName": "System Administrator",
          "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
          "RoleDefinitionName": "Owner",
          "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
          "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
          "ObjectType": "User",
          "PIM": "false"
        }
      ],
      "/providers/microsoft.authorization/roleassignments/6bbf03b8-3457-43ef-9ef3-d0efe0ba52ec": [
        {
          "RoleAssignmentId": "/providers/microsoft.authorization/roleassignments/6bbf03b8-3457-43ef-9ef3-d0efe0ba52ec",
          "Scope": "/",
          "DisplayName": "Microsoft Demos",
          "SignInName": null,
          "RoleDefinitionName": "User Access Administrator",
          "RoleDefinitionId": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
          "ObjectId": "7abbab28-45a5-4bc7-b759-2270e1608807",
          "ObjectType": "ServicePrincipal",
          "PIM": "false"
        }
      ],
      "/providers/microsoft.authorization/roleassignments/8eddb268-03ce-4cb1-93a4-d5a4463f08c3": [
        {
          "RoleAssignmentId": "/providers/microsoft.authorization/roleassignments/8eddb268-03ce-4cb1-93a4-d5a4463f08c3",
          "Scope": "/",
          "DisplayName": "BicepDeployment",
          "SignInName": null,
          "RoleDefinitionName": "Owner",
          "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
          "ObjectId": "9fb44a16-772c-4734-a4b9-eb6356f4057e",
          "ObjectType": "ServicePrincipal",
          "PIM": "false"
        }
      ],
      "/providers/microsoft.authorization/roleassignments/a8e75a78-9c5f-4657-992d-0952a657bfec": [
        {
          "RoleAssignmentId": "/providers/microsoft.authorization/roleassignments/a8e75a78-9c5f-4657-992d-0952a657bfec",
          "Scope": "/",
          "DisplayName": "github-alz",
          "SignInName": null,
          "RoleDefinitionName": "Owner",
          "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
          "ObjectId": "ee71c4e3-cf84-42bb-a0f1-d0ca9185ca5d",
          "ObjectType": "ServicePrincipal",
          "PIM": "false"
        }
      ],
      "/providers/microsoft.authorization/roleassignments/c1f2bc4e-bb46-4a45-9c03-6ba2696b257f": [
        {
          "RoleAssignmentId": "/providers/microsoft.authorization/roleassignments/c1f2bc4e-bb46-4a45-9c03-6ba2696b257f",
          "Scope": "/",
          "DisplayName": "ALZUserAccessAdmin",
          "SignInName": null,
          "RoleDefinitionName": "Owner",
          "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
          "ObjectId": "213989ff-ae04-4962-b043-6ec7f89f40ef",
          "ObjectType": "ServicePrincipal",
          "PIM": "false"
        }
      ],
      "/providers/microsoft.authorization/roleassignments/eeb0dcd5-2594-4ce4-a845-5d39896eaaf2": [
        {
          "RoleAssignmentId": "/providers/microsoft.authorization/roleassignments/eeb0dcd5-2594-4ce4-a845-5d39896eaaf2",
          "Scope": "/",
          "DisplayName": "System Administrator",
          "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
          "RoleDefinitionName": "User Access Administrator",
          "RoleDefinitionId": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
          "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
          "ObjectType": "User",
          "PIM": "false"
        }
      ]
    },
    "ManagementGroups": {
      "ALZ": {
        "MgId": "ALZ",
        "MgName": "ALZ",
        "mgParentId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
        "mgParentName": "Tenant Root Group",
        "level": "1",
        "PolicyDefinitionsCustom": {
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/append-appservice-httpsonly": {
            "properties": {
              "displayName": "AppService append enable https only setting to enforce https setting.",
              "policyType": "Custom",
              "mode": "All",
              "description": "Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9156777Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Append",
                    "Disabled"
                  ],
                  "defaultValue": "Append"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "Microsoft.Web/sites/httpsOnly",
                      "notequals": true
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": [
                    {
                      "field": "Microsoft.Web/sites/httpsOnly",
                      "value": true
                    }
                  ]
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Append-AppService-httpsonly",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8413186Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8413186Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/append-appservice-latesttls": {
            "properties": {
              "displayName": "AppService append sites with minimum TLS version to enforce.",
              "policyType": "Custom",
              "mode": "All",
              "description": "Append the AppService sites object to ensure that min Tls version is set to required minimum TLS version. Please note Append does not enforce compliance use then deny.",
              "metadata": {
                "version": "1.1.0",
                "category": "App Service",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9015011Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Append",
                    "Disabled"
                  ],
                  "defaultValue": "Append"
                },
                "minTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select version minimum TLS Web App config",
                    "description": "Select version  minimum TLS version for a  Web App config to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.0",
                    "1.1"
                  ],
                  "defaultValue": "1.2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "Microsoft.Web/sites/config/minTlsVersion",
                      "exists": "true"
                    },
                    {
                      "field": "Microsoft.Web/sites/config/minTlsVersion",
                      "notEquals": "[parameters('minTlsVersion')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": [
                    {
                      "field": "Microsoft.Web/sites/config/minTlsVersion",
                      "value": "[parameters('minTlsVersion')]"
                    }
                  ]
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Append-AppService-latestTLS",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8100683Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8100683Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/append-kv-softdelete": {
            "properties": {
              "displayName": "KeyVault SoftDelete should be enabled",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "This policy enables you to ensure when a Key Vault is created with out soft delete enabled it will be added.",
              "metadata": {
                "version": "1.0.0",
                "category": "Key Vault",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1696173Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.KeyVault/vaults"
                        },
                        {
                          "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                          "notEquals": true
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "append",
                  "details": [
                    {
                      "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                      "value": true
                    }
                  ]
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Append-KV-SoftDelete",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1225722Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1225722Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/append-redis-disablenonsslport": {
            "properties": {
              "displayName": "Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled.",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
              "metadata": {
                "version": "1.0.1",
                "category": "Cache",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1347801Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect Azure Cache for Redis",
                    "description": "Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis"
                  },
                  "allowedValues": [
                    "Append",
                    "Disabled"
                  ],
                  "defaultValue": "Append"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Cache/redis"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Cache/Redis/enableNonSslPort",
                          "equals": "true"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": [
                    {
                      "field": "Microsoft.Cache/Redis/enableNonSslPort",
                      "value": false
                    }
                  ]
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Append-Redis-disableNonSslPort",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9975704Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9975704Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/append-redis-sslenforcement": {
            "properties": {
              "displayName": "Azure Cache for Redis Append a specific min TLS version requirement and enforce TLS.",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Append a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cache",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5546598Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect Azure Cache for Redis",
                    "description": "Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis"
                  },
                  "allowedValues": [
                    "Append",
                    "Disabled"
                  ],
                  "defaultValue": "Append"
                },
                "minimumTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select version for Redis server",
                    "description": "Select version minimum TLS version Azure Cache for Redis to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.1",
                    "1.0"
                  ],
                  "defaultValue": "1.2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Cache/redis"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Cache/Redis/minimumTlsVersion",
                          "notequals": "[parameters('minimumTlsVersion')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": [
                    {
                      "field": "Microsoft.Cache/Redis/minimumTlsVersion",
                      "value": "[parameters('minimumTlsVersion')]"
                    }
                  ]
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Append-Redis-sslEnforcement",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.4975739Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.4975739Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/audit-azurehybridbenefit": {
            "properties": {
              "displayName": "Audit AHUB for eligible VMs",
              "policyType": "Custom",
              "mode": "All",
              "description": "Optimize cost by enabling Azure Hybrid Benefit. Leverage this Policy definition as a cost control to reveal Virtual Machines not using AHUB.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cost Optimization",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.615209Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Compute/virtualMachines",
                        "Microsoft.Compute/virtualMachineScaleSets"
                      ]
                    },
                    {
                      "equals": "MicrosoftWindowsServer",
                      "field": "Microsoft.Compute/imagePublisher"
                    },
                    {
                      "equals": "WindowsServer",
                      "field": "Microsoft.Compute/imageOffer"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "like": "2008-R2-SP1*"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "like": "2012-*"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "like": "2016-*"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "like": "2019-*"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "like": "2022-*"
                        }
                      ]
                    },
                    {
                      "field": "Microsoft.Compute/licenseType",
                      "notEquals": "Windows_Server"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-AzureHybridBenefit",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Audit-AzureHybridBenefit",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.5131979Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.5131979Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/audit-disks-unusedresourcescostoptimization": {
            "properties": {
              "displayName": "Unused Disks driving cost should be avoided",
              "policyType": "Custom",
              "mode": "All",
              "description": "Optimize cost by detecting unused but chargeable resources. Leverage this Policy definition as a cost control to reveal orphaned Disks that are driving cost.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cost Optimization",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1853766Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/disks"
                    },
                    {
                      "field": "Microsoft.Compute/disks/diskState",
                      "equals": "Unattached"
                    },
                    {
                      "allof": [
                        {
                          "field": "name",
                          "notlike": "*-ASRReplica"
                        },
                        {
                          "field": "name",
                          "notlike": "ms-asr-*"
                        },
                        {
                          "field": "name",
                          "notlike": "asrseeddisk-*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-Disks-UnusedResourcesCostOptimization",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Audit-Disks-UnusedResourcesCostOptimization",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1225722Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1225722Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/audit-machinelearning-privateendpointid": {
            "properties": {
              "displayName": "Control private endpoint connections to Azure Machine Learning",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Audit private endpoints that are created in other subscriptions and/or tenants for Azure Machine Learning.",
              "metadata": {
                "version": "1.0.0",
                "category": "Machine Learning",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9538637Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections"
                    },
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/privateEndpoint.id",
                          "exists": false
                        },
                        {
                          "value": "[split(concat(field('Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/privateEndpoint.id'), '//'), '/')[2]]",
                          "notEquals": "[subscription().subscriptionId]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Audit-MachineLearning-PrivateEndpointId",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.872569Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.872569Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/audit-privatelinkdnszones": {
            "properties": {
              "displayName": "Audit or Deny the creation of Private Link Private DNS Zones",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "This policy audits or denies, depending on assignment effect, the creation of a Private Link Private DNS Zones in the current scope, used in combination with policies that create centralized private DNS in connectivity subscription",
              "metadata": {
                "version": "1.0.2",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.219383Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "privateLinkDnsZones": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Private Link Private DNS Zones",
                    "description": "An array of Private Link Private DNS Zones to check for the existence of in the assigned scope."
                  },
                  "defaultValue": [
                    "privatelink.adf.azure.com",
                    "privatelink.afs.azure.net",
                    "privatelink.agentsvc.azure-automation.net",
                    "privatelink.analysis.windows.net",
                    "privatelink.api.azureml.ms",
                    "privatelink.azconfig.io",
                    "privatelink.azure-api.net",
                    "privatelink.azure-automation.net",
                    "privatelink.azurecr.io",
                    "privatelink.azure-devices.net",
                    "privatelink.azure-devices-provisioning.net",
                    "privatelink.azuredatabricks.net",
                    "privatelink.azurehdinsight.net",
                    "privatelink.azurehealthcareapis.com",
                    "privatelink.azurestaticapps.net",
                    "privatelink.azuresynapse.net",
                    "privatelink.azurewebsites.net",
                    "privatelink.batch.azure.com",
                    "privatelink.blob.core.windows.net",
                    "privatelink.cassandra.cosmos.azure.com",
                    "privatelink.cognitiveservices.azure.com",
                    "privatelink.database.windows.net",
                    "privatelink.datafactory.azure.net",
                    "privatelink.dev.azuresynapse.net",
                    "privatelink.dfs.core.windows.net",
                    "privatelink.dicom.azurehealthcareapis.com",
                    "privatelink.digitaltwins.azure.net",
                    "privatelink.directline.botframework.com",
                    "privatelink.documents.azure.com",
                    "privatelink.eventgrid.azure.net",
                    "privatelink.file.core.windows.net",
                    "privatelink.gremlin.cosmos.azure.com",
                    "privatelink.guestconfiguration.azure.com",
                    "privatelink.his.arc.azure.com",
                    "privatelink.kubernetesconfiguration.azure.com",
                    "privatelink.managedhsm.azure.net",
                    "privatelink.mariadb.database.azure.com",
                    "privatelink.media.azure.net",
                    "privatelink.mongo.cosmos.azure.com",
                    "privatelink.monitor.azure.com",
                    "privatelink.mysql.database.azure.com",
                    "privatelink.notebooks.azure.net",
                    "privatelink.ods.opinsights.azure.com",
                    "privatelink.oms.opinsights.azure.com",
                    "privatelink.pbidedicated.windows.net",
                    "privatelink.postgres.database.azure.com",
                    "privatelink.prod.migration.windowsazure.com",
                    "privatelink.purview.azure.com",
                    "privatelink.purviewstudio.azure.com",
                    "privatelink.queue.core.windows.net",
                    "privatelink.redis.cache.windows.net",
                    "privatelink.redisenterprise.cache.azure.net",
                    "privatelink.search.windows.net",
                    "privatelink.service.signalr.net",
                    "privatelink.servicebus.windows.net",
                    "privatelink.siterecovery.windowsazure.com",
                    "privatelink.sql.azuresynapse.net",
                    "privatelink.table.core.windows.net",
                    "privatelink.table.cosmos.azure.com",
                    "privatelink.tip1.powerquery.microsoft.com",
                    "privatelink.token.botframework.com",
                    "privatelink.vaultcore.azure.net",
                    "privatelink.web.core.windows.net",
                    "privatelink.webpubsub.azure.com"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/privateDnsZones"
                    },
                    {
                      "field": "name",
                      "in": "[parameters('privateLinkDnsZones')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-PrivateLinkDnsZones",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Audit-PrivateLinkDnsZones",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0756994Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0756994Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/audit-publicipaddresses-unusedresourcescostoptimization": {
            "properties": {
              "displayName": "Unused Public IP addresses driving cost should be avoided",
              "policyType": "Custom",
              "mode": "All",
              "description": "Optimize cost by detecting unused but chargeable resources. Leverage this Policy definition as a cost control to reveal orphaned Public IP addresses that are driving cost.",
              "metadata": {
                "version": "1.1.0",
                "category": "Cost Optimization",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.6198293Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "microsoft.network/publicIpAddresses"
                    },
                    {
                      "field": "Microsoft.Network/publicIPAddresses/publicIPAllocationMethod",
                      "equals": "Static"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Network/publicIPAddresses/natGateway",
                          "exists": false
                        },
                        {
                          "value": "[equals(length(field('Microsoft.Network/publicIPAddresses/natGateway')), 0)]",
                          "equals": true
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Network/publicIPAddresses/ipConfiguration",
                          "exists": false
                        },
                        {
                          "value": "[equals(length(field('Microsoft.Network/publicIPAddresses/ipConfiguration')), 0)]",
                          "equals": true
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Network/publicIPAddresses/publicIPPrefix",
                          "exists": false
                        },
                        {
                          "value": "[equals(length(field('Microsoft.Network/publicIPAddresses/publicIPPrefix')), 0)]",
                          "equals": true
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-PublicIpAddresses-UnusedResourcesCostOptimization",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Audit-PublicIpAddresses-UnusedResourcesCostOptimization",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.5131979Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.5131979Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/audit-serverfarms-unusedresourcescostoptimization": {
            "properties": {
              "displayName": "Unused App Service plans driving cost should be avoided",
              "policyType": "Custom",
              "mode": "All",
              "description": "Optimize cost by detecting unused but chargeable resources. Leverage this Policy definition as a cost control to reveal orphaned App Service plans that are driving cost.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cost Optimization",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9157878Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/serverfarms"
                    },
                    {
                      "field": "Microsoft.Web/serverFarms/sku.tier",
                      "notEquals": "Free"
                    },
                    {
                      "field": "Microsoft.Web/serverFarms/numberOfSites",
                      "equals": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-ServerFarms-UnusedResourcesCostOptimization",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Audit-ServerFarms-UnusedResourcesCostOptimization",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8413186Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8413186Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-aa-child-resources": {
            "properties": {
              "displayName": "No child resources in Automation Account",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "This policy denies the creation of child resources on the Automation Account",
              "metadata": {
                "version": "1.0.0",
                "category": "Automation",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.8969122Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.Automation/automationAccounts/runbooks",
                        "Microsoft.Automation/automationAccounts/variables",
                        "Microsoft.Automation/automationAccounts/modules",
                        "Microsoft.Automation/automationAccounts/credentials",
                        "Microsoft.Automation/automationAccounts/connections",
                        "Microsoft.Automation/automationAccounts/certificates"
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-AA-child-resources",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.7631934Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.7631934Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-apim-tls": {
            "properties": {
              "displayName": "API Management services should use TLS version 1.2",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure API Management service should use TLS version 1.2",
              "metadata": {
                "version": "1.0.0",
                "category": "API Management",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2267662Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.ApiManagement/service"
                    },
                    {
                      "anyOf": [
                        {
                          "value": "[indexof(toLower(string(field('Microsoft.ApiManagement/service/customProperties'))), '\"microsoft.windowsazure.apimanagement.gateway.security.protocols.tls10\":\"true\"')]",
                          "greater": 0
                        },
                        {
                          "value": "[indexof(toLower(string(field('Microsoft.ApiManagement/service/customProperties'))), '\"microsoft.windowsazure.apimanagement.gateway.security.protocols.tls10\":true')]",
                          "greater": 0
                        },
                        {
                          "value": "[indexof(toLower(string(field('Microsoft.ApiManagement/service/customProperties'))), '\"microsoft.windowsazure.apimanagement.gateway.security.protocols.tls11\":\"true\"')]",
                          "greater": 0
                        },
                        {
                          "value": "[indexof(toLower(string(field('Microsoft.ApiManagement/service/customProperties'))), '\"microsoft.windowsazure.apimanagement.gateway.security.protocols.tls11\":true')]",
                          "greater": 0
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-APIM-TLS",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-APIM-TLS",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-appgw-without-tls": {
            "properties": {
              "displayName": "Application Gateway should be deployed with predefined Microsoft policy that is using TLS version 1.2",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy enables you to restrict that Application Gateways is always deployed with predefined Microsoft policy that is using TLS version 1.2",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0414681Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "predefinedPolicyName": {
                  "type": "array",
                  "metadata": {
                    "displayName": "Predefined policy name",
                    "description": "Predefined policy name"
                  },
                  "defaultValue": [
                    "AppGwSslPolicy20220101",
                    "AppGwSslPolicy20170401S",
                    "AppGwSslPolicy20220101S"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/applicationGateways"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Network/applicationGateways/sslPolicy.policyType",
                          "notEquals": "Predefined"
                        },
                        {
                          "field": "Microsoft.Network/applicationGateways/sslPolicy.policyType",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Network/applicationGateways/sslPolicy.policyName",
                          "notIn": "[parameters('predefinedPolicyName')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGw-Without-Tls",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-AppGw-Without-Tls",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9350719Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9350719Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-appgw-without-waf": {
            "properties": {
              "displayName": "Application Gateway should be deployed with WAF enabled",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "This policy enables you to restrict that Application Gateways is always deployed with WAF enabled",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5014613Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/applicationGateways"
                    },
                    {
                      "field": "Microsoft.Network/applicationGateways/sku.name",
                      "notequals": "WAF_v2"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-AppGW-Without-WAF",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.4194497Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.4194497Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-appservice-without-byoc": {
            "properties": {
              "displayName": "App Service certificates must be stored in Key Vault",
              "policyType": "Custom",
              "mode": "All",
              "description": "App Service (including Logic apps and Function apps) must use certificates stored in Key Vault",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9884249Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/certificates"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Web/certificates/keyVaultId",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Web/certificates/keyVaultSecretName",
                          "exists": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppService-without-BYOC",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-AppService-without-BYOC",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9038204Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9038204Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-appserviceapiapp-http": {
            "properties": {
              "displayName": "API App should only be accessible over HTTPS",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4618117Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "*api"
                    },
                    {
                      "field": "Microsoft.Web/sites/httpsOnly",
                      "equals": "false"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-AppServiceApiApp-http",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1381974Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1381974Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-appservicefunctionapp-http": {
            "properties": {
              "displayName": "Function App should only be accessible over HTTPS",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9762527Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "functionapp*"
                    },
                    {
                      "field": "Microsoft.Web/sites/httpsOnly",
                      "equals": "false"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-AppServiceFunctionApp-http",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.872569Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.872569Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-appservicewebapp-http": {
            "properties": {
              "displayName": "Web Application should only be accessible over HTTPS",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1170007Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "like": "app*"
                    },
                    {
                      "field": "Microsoft.Web/sites/httpsOnly",
                      "equals": "false"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-AppServiceWebApp-http",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0756994Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0756994Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-azfw-without-policy": {
            "properties": {
              "displayName": "Azure Firewall should have a default Firewall Policy",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the creation of Azure Firewall without a default Firewall Policy.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2222966Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/azureFirewalls"
                    },
                    {
                      "field": "Microsoft.Network/azureFirewalls/firewallPolicy.id",
                      "exists": "false"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AzFw-Without-Policy",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-AzFw-Without-Policy",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-cognitiveservices-networkacls": {
            "properties": {
              "displayName": "Network ACLs should be restricted for Cognitive Services",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure Cognitive Services should not allow adding individual IPs or virtual network rules to the service-level firewall. Enable this to restrict inbound network access and enforce the usage of private endpoints.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cognitive Services",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0082159Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    {
                      "anyOf": [
                        {
                          "count": {
                            "field": "Microsoft.CognitiveServices/accounts/networkAcls.ipRules[*]"
                          },
                          "greater": 0
                        },
                        {
                          "count": {
                            "field": "Microsoft.CognitiveServices/accounts/networkAcls.virtualNetworkRules[*]"
                          },
                          "greater": 0
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-CognitiveServices-NetworkAcls",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-CognitiveServices-NetworkAcls",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9038204Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9038204Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-cognitiveservices-resource-kinds": {
            "properties": {
              "displayName": "Only explicit kinds for Cognitive Services should be allowed",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure Cognitive Services should only create explicit allowed kinds.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cognitive Services",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5695829Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "allowedKinds": {
                  "type": "array",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Select the allowed resource kinds to be used with Cognitive Services"
                  },
                  "allowedValues": [
                    "AnomalyDetector",
                    "ComputerVision",
                    "CognitiveServices",
                    "ContentModerator",
                    "CustomVision.Training",
                    "CustomVision.Prediction",
                    "Face",
                    "FormRecognizer",
                    "ImmersiveReader",
                    "LUIS",
                    "Personalizer",
                    "SpeechServices",
                    "TextAnalytics",
                    "TextTranslation",
                    "OpenAI"
                  ],
                  "defaultValue": [
                    "AnomalyDetector",
                    "ComputerVision",
                    "CognitiveServices",
                    "ContentModerator",
                    "CustomVision.Training",
                    "CustomVision.Prediction",
                    "Face",
                    "FormRecognizer",
                    "ImmersiveReader",
                    "LUIS",
                    "Personalizer",
                    "SpeechServices",
                    "TextAnalytics",
                    "TextTranslation",
                    "OpenAI"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    {
                      "field": "kind",
                      "notIn": "[parameters('allowedKinds')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-CognitiveServices-Resource-Kinds",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-CognitiveServices-Resource-Kinds",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.5131979Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.5131979Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-cognitiveservices-restrictoutboundnetworkaccess": {
            "properties": {
              "displayName": "Outbound network access should be restricted for Cognitive Services",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure Cognitive Services allow restricting outbound network access. Enable this to limit outbound connectivity for the service.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cognitive Services",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2618475Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.CognitiveServices/accounts/restrictOutboundNetworkAccess",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.CognitiveServices/accounts/restrictOutboundNetworkAccess",
                          "notEquals": true
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-CognitiveServices-RestrictOutboundNetworkAccess",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-CognitiveServices-RestrictOutboundNetworkAccess",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-databricks-nopublicip": {
            "properties": {
              "displayName": "Deny public IPs for Databricks cluster",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Denies the deployment of workspaces that do not use the noPublicIp feature to host Databricks clusters without public IPs.",
              "metadata": {
                "version": "1.0.0",
                "category": "Databricks",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4774737Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Databricks/workspaces"
                    },
                    {
                      "field": "Microsoft.DataBricks/workspaces/parameters.enableNoPublicIp.value",
                      "notEquals": true
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Databricks-NoPublicIp",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.3882506Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.3882506Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-databricks-sku": {
            "properties": {
              "displayName": "Deny non-premium Databricks sku",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Enforces the use of Premium Databricks workspaces to make sure appropriate security features are available including Databricks Access Controls, Credential Passthrough and SCIM provisioning for Microsoft Entra ID.",
              "metadata": {
                "version": "1.0.0",
                "category": "Databricks",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2530771Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Databricks/workspaces"
                    },
                    {
                      "field": "Microsoft.DataBricks/workspaces/sku.name",
                      "notEquals": "premium"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Databricks-Sku",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1694468Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1694468Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-databricks-virtualnetwork": {
            "properties": {
              "displayName": "Deny Databricks workspaces without Vnet injection",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Enforces the use of vnet injection for Databricks workspaces.",
              "metadata": {
                "version": "1.0.0",
                "category": "Databricks",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5395111Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Databricks/workspaces"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.DataBricks/workspaces/parameters.customVirtualNetworkId.value",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.DataBricks/workspaces/parameters.customPublicSubnetName.value",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.DataBricks/workspaces/parameters.customPrivateSubnetName.value",
                          "exists": false
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Databricks-VirtualNetwork",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.4819486Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.4819486Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-eh-mintls": {
            "properties": {
              "displayName": "Event Hub namespaces should use a valid TLS version",
              "policyType": "Custom",
              "mode": "All",
              "description": "Event Hub namespaces should use a valid TLS version.",
              "metadata": {
                "version": "1.0.0",
                "category": "Event Hub",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.696094Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "minTlsVersion": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Minimum TLS Version",
                    "description": "Minimum TLS version to be used by Event Hub"
                  },
                  "defaultValue": "1.2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.EventHub/namespaces"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.EventHub/namespaces/minimumTlsVersion",
                          "notEquals": "[parameters('minTlsVersion')]"
                        },
                        {
                          "field": "Microsoft.EventHub/namespaces/minimumTlsVersion",
                          "exists": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-EH-minTLS",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-EH-minTLS",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.6538168Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.6538168Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-eh-premium-cmk": {
            "properties": {
              "displayName": "Event Hub namespaces (Premium) should use a customer-managed key for encryption",
              "policyType": "Custom",
              "mode": "All",
              "description": "Event Hub namespaces (Premium) should use a customer-managed key for encryption.",
              "metadata": {
                "version": "1.0.0",
                "category": "Event Hub",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0546945Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.EventHub/namespaces"
                    },
                    {
                      "field": "Microsoft.EventHub/namespaces/sku.name",
                      "equals": "Premium"
                    },
                    {
                      "not": {
                        "field": "Microsoft.EventHub/namespaces/encryption.keySource",
                        "equals": "Microsoft.Keyvault"
                      }
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-EH-Premium-CMK",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-EH-Premium-CMK",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0131958Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0131958Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-fileservices-insecureauth": {
            "properties": {
              "displayName": "File Services with insecure authentication methods should be denied",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the use of insecure authentication methods (NTLMv2) when using File Services on a storage account.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5024367Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "notAllowedAuthMethods": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Authentication methods supported by server. Valid values are NTLMv2, Kerberos.",
                    "description": "The list of channelEncryption not allowed."
                  },
                  "allowedValues": [
                    "NTLMv2",
                    "Kerberos"
                  ],
                  "defaultValue": "NTLMv2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.authenticationMethods",
                      "contains": "[parameters('notAllowedAuthMethods')]"
                    },
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts/fileServices"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-FileServices-InsecureAuth",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-FileServices-InsecureAuth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.4350728Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.4350728Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-fileservices-insecurekerberos": {
            "properties": {
              "displayName": "File Services with insecure Kerberos ticket encryption should be denied",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the use of insecure Kerberos ticket encryption (RC4-HMAC) when using File Services on a storage account.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0282598Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "notAllowedKerberosTicketEncryption": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256.",
                    "description": "The list of kerberosTicketEncryption not allowed."
                  },
                  "allowedValues": [
                    "RC4-HMAC",
                    "AES-256"
                  ],
                  "defaultValue": "RC4-HMAC"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts/fileServices"
                    },
                    {
                      "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.kerberosTicketEncryption",
                      "contains": "[parameters('notAllowedKerberosTicketEncryption')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-FileServices-InsecureKerberos",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-FileServices-InsecureKerberos",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9350719Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9350719Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-fileservices-insecuresmbchannel": {
            "properties": {
              "displayName": "File Services with insecure SMB channel encryption should be denied",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the use of insecure channel encryption (AES-128-CCM) when using File Services on a storage account.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2510777Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "notAllowedChannelEncryption": {
                  "type": "String",
                  "metadata": {
                    "displayName": "SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM.",
                    "description": "The list of channelEncryption not allowed."
                  },
                  "allowedValues": [
                    "AES-128-CCM",
                    "AES-128-GCM",
                    "AES-256-GCM"
                  ],
                  "defaultValue": "AES-128-CCM"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts/fileServices"
                    },
                    {
                      "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.channelEncryption",
                      "contains": "[parameters('notAllowedChannelEncryption')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-FileServices-InsecureSmbChannel",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-FileServices-InsecureSmbChannel",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1850707Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1850707Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-fileservices-insecuresmbversions": {
            "properties": {
              "displayName": "File Services with insecure SMB versions should be denied",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the use of insecure versions of SMB (2.1 & 3.0) when using File Services on a storage account.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5197795Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "allowedSmbVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Allowed SMB Version",
                    "description": "The allowed SMB version for maximum security"
                  },
                  "allowedValues": [
                    "SMB2.1",
                    "SMB3.0",
                    "SMB3.1.1"
                  ],
                  "defaultValue": "SMB3.1.1"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts/fileServices"
                    },
                    {
                      "not": {
                        "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.versions",
                        "contains": "[parameters('allowedSmbVersion')]"
                      }
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-FileServices-InsecureSmbVersions",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-FileServices-InsecureSmbVersions",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.4663207Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.4663207Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-logicapp-public-network": {
            "properties": {
              "displayName": "Logic apps should disable public network access",
              "policyType": "Custom",
              "mode": "All",
              "description": "Disabling public network access improves security by ensuring that the Logic App is not exposed on the public internet. Creating private endpoints can limit exposure of a Logic App. Learn more at: https://aka.ms/app-service-private-endpoint.",
              "metadata": {
                "version": "1.0.0",
                "category": "Logic Apps",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2522317Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "contains": "workflowapp"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Web/sites/publicNetworkAccess",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Web/sites/publicNetworkAccess",
                          "notEquals": "Disabled"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-LogicApp-Public-Network",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-LogicApp-Public-Network",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0913208Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0913208Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-logicapps-without-https": {
            "properties": {
              "displayName": "Logic app should only be accessible over HTTPS",
              "policyType": "Custom",
              "mode": "All",
              "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
              "metadata": {
                "version": "1.0.0",
                "category": "Logic Apps",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:28.5422699Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "contains": "workflowapp"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Web/sites/httpsOnly",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Web/sites/httpsOnly",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-LogicApps-Without-Https",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-LogicApps-Without-Https",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:28.4819041Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:28.4819041Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-machinelearning-aks": {
            "properties": {
              "displayName": "Deny AKS cluster creation in Azure Machine Learning",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deny AKS cluster creation in Azure Machine Learning and enforce connecting to existing clusters.",
              "metadata": {
                "version": "1.0.0",
                "category": "Machine Learning",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2714914Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces/computes"
                    },
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/computes/computeType",
                      "equals": "AKS"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/computes/resourceId",
                          "exists": false
                        },
                        {
                          "value": "[empty(field('Microsoft.MachineLearningServices/workspaces/computes/resourceId'))]",
                          "equals": true
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-MachineLearning-Aks",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-machinelearning-compute-subnetid": {
            "properties": {
              "displayName": "Enforce subnet connectivity for Azure Machine Learning compute clusters and compute instances",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Enforce subnet connectivity for Azure Machine Learning compute clusters and compute instances.",
              "metadata": {
                "version": "1.0.0",
                "category": "Machine Learning",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2722518Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces/computes"
                    },
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/computes/computeType",
                      "in": [
                        "AmlCompute",
                        "ComputeInstance"
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/computes/subnet.id",
                          "exists": false
                        },
                        {
                          "value": "[empty(field('Microsoft.MachineLearningServices/workspaces/computes/subnet.id'))]",
                          "equals": true
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-MachineLearning-Compute-SubnetId",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-machinelearning-compute-vmsize": {
            "properties": {
              "displayName": "Limit allowed vm sizes for Azure Machine Learning compute clusters and compute instances",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Limit allowed vm sizes for Azure Machine Learning compute clusters and compute instances.",
              "metadata": {
                "version": "1.0.0",
                "category": "Budget",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5280057Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                },
                "allowedVmSizes": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Allowed VM Sizes for Aml Compute Clusters and Instances",
                    "description": "Specifies the allowed VM Sizes for Aml Compute Clusters and Instances"
                  },
                  "defaultValue": [
                    "Standard_D1_v2",
                    "Standard_D2_v2",
                    "Standard_D3_v2",
                    "Standard_D4_v2",
                    "Standard_D11_v2",
                    "Standard_D12_v2",
                    "Standard_D13_v2",
                    "Standard_D14_v2",
                    "Standard_DS1_v2",
                    "Standard_DS2_v2",
                    "Standard_DS3_v2",
                    "Standard_DS4_v2",
                    "Standard_DS5_v2",
                    "Standard_DS11_v2",
                    "Standard_DS12_v2",
                    "Standard_DS13_v2",
                    "Standard_DS14_v2",
                    "Standard_M8-2ms",
                    "Standard_M8-4ms",
                    "Standard_M8ms",
                    "Standard_M16-4ms",
                    "Standard_M16-8ms",
                    "Standard_M16ms",
                    "Standard_M32-8ms",
                    "Standard_M32-16ms",
                    "Standard_M32ls",
                    "Standard_M32ms",
                    "Standard_M32ts",
                    "Standard_M64-16ms",
                    "Standard_M64-32ms",
                    "Standard_M64ls",
                    "Standard_M64ms",
                    "Standard_M64s",
                    "Standard_M128-32ms",
                    "Standard_M128-64ms",
                    "Standard_M128ms",
                    "Standard_M128s",
                    "Standard_M64",
                    "Standard_M64m",
                    "Standard_M128",
                    "Standard_M128m",
                    "Standard_D1",
                    "Standard_D2",
                    "Standard_D3",
                    "Standard_D4",
                    "Standard_D11",
                    "Standard_D12",
                    "Standard_D13",
                    "Standard_D14",
                    "Standard_DS15_v2",
                    "Standard_NV6",
                    "Standard_NV12",
                    "Standard_NV24",
                    "Standard_F2s_v2",
                    "Standard_F4s_v2",
                    "Standard_F8s_v2",
                    "Standard_F16s_v2",
                    "Standard_F32s_v2",
                    "Standard_F64s_v2",
                    "Standard_F72s_v2",
                    "Standard_NC6s_v3",
                    "Standard_NC12s_v3",
                    "Standard_NC24rs_v3",
                    "Standard_NC24s_v3",
                    "Standard_NC6",
                    "Standard_NC12",
                    "Standard_NC24",
                    "Standard_NC24r",
                    "Standard_ND6s",
                    "Standard_ND12s",
                    "Standard_ND24rs",
                    "Standard_ND24s",
                    "Standard_NC6s_v2",
                    "Standard_NC12s_v2",
                    "Standard_NC24rs_v2",
                    "Standard_NC24s_v2",
                    "Standard_ND40rs_v2",
                    "Standard_NV12s_v3",
                    "Standard_NV24s_v3",
                    "Standard_NV48s_v3"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces/computes"
                    },
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/computes/computeType",
                      "in": [
                        "AmlCompute",
                        "ComputeInstance"
                      ]
                    },
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/computes/vmSize",
                      "notIn": "[parameters('allowedVmSizes')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-MachineLearning-Compute-VmSize",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1538247Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1538247Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-machinelearning-computecluster-remoteloginportpublicaccess": {
            "properties": {
              "displayName": "Deny public access of Azure Machine Learning clusters via SSH",
              "policyType": "Custom",
              "mode": "All",
              "description": "Deny public access of Azure Machine Learning clusters via SSH.",
              "metadata": {
                "version": "1.1.0",
                "category": "Machine Learning",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5273568Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces/computes"
                    },
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/computes/computeType",
                      "equals": "AmlCompute"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/computes/remoteLoginPortPublicAccess",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/computes/remoteLoginPortPublicAccess",
                          "notEquals": "Disabled"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1850707Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1850707Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-machinelearning-computecluster-scale": {
            "properties": {
              "displayName": "Enforce scale settings for Azure Machine Learning compute clusters",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Enforce scale settings for Azure Machine Learning compute clusters.",
              "metadata": {
                "version": "1.0.0",
                "category": "Budget",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9188962Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                },
                "maxNodeCount": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "Maximum Node Count",
                    "description": "Specifies the maximum node count of AML Clusters"
                  },
                  "defaultValue": 10
                },
                "minNodeCount": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "Minimum Node Count",
                    "description": "Specifies the minimum node count of AML Clusters"
                  },
                  "defaultValue": 0
                },
                "maxNodeIdleTimeInSecondsBeforeScaleDown": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "Maximum Node Idle Time in Seconds Before Scaledown",
                    "description": "Specifies the maximum node idle time in seconds before scaledown"
                  },
                  "defaultValue": 900
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces/computes"
                    },
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/computes/computeType",
                      "equals": "AmlCompute"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/computes/scaleSettings.maxNodeCount",
                          "greater": "[parameters('maxNodeCount')]"
                        },
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/computes/scaleSettings.minNodeCount",
                          "greater": "[parameters('minNodeCount')]"
                        },
                        {
                          "value": "[int(last(split(replace(replace(replace(replace(replace(replace(replace(field('Microsoft.MachineLearningServices/workspaces/computes/scaleSettings.nodeIdleTimeBeforeScaleDown'), 'P', '/'), 'Y', '/'), 'M', '/'), 'D', '/'), 'T', '/'), 'H', '/'), 'S', ''), '/')))]",
                          "greater": "[parameters('maxNodeIdleTimeInSecondsBeforeScaleDown')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-MachineLearning-ComputeCluster-Scale",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8256934Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8256934Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-machinelearning-hbiworkspace": {
            "properties": {
              "displayName": "Enforces high business impact Azure Machine Learning Workspaces",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Enforces high business impact Azure Machine Learning workspaces.",
              "metadata": {
                "version": "1.0.0",
                "category": "Machine Learning",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0151065Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/hbiWorkspace",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/hbiWorkspace",
                          "notEquals": true
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-MachineLearning-HbiWorkspace",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.919446Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.919446Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-machinelearning-publicaccesswhenbehindvnet": {
            "properties": {
              "displayName": "Deny public access behind vnet to Azure Machine Learning workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deny public access behind vnet to Azure Machine Learning workspaces.",
              "metadata": {
                "version": "1.0.1",
                "category": "Machine Learning",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4597235Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/allowPublicAccessWhenBehindVnet",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.MachineLearningServices/workspaces/allowPublicAccessWhenBehindVnet",
                          "notEquals": false
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-MachineLearning-PublicAccessWhenBehindVnet",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.2006937Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.2006937Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-machinelearning-publicnetworkaccess": {
            "properties": {
              "displayName": "[Deprecated] Azure Machine Learning should have disabled public network access",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Denies public network access for Azure Machine Learning workspaces. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/438c38d2-3772-465a-a9cc-7a6666a275ce.html",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Machine Learning",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "438c38d2-3772-465a-a9cc-7a6666a275ce",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0262287Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces"
                    },
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-MachineLearning-PublicNetworkAccess",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.919446Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.919446Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-mgmtports-from-internet": {
            "properties": {
              "displayName": "Management port access from the Internet should be blocked",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies any network security rule that allows management port access from the Internet, by default blocking SSH/RDP ports.",
              "metadata": {
                "version": "2.1.1",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "replacesPolicy": "Deny-RDP-From-Internet",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2554256Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "ports": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Ports",
                    "description": "Ports to be blocked"
                  },
                  "defaultValue": [
                    "22",
                    "3389"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/networkSecurityGroups/securityRules"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/access",
                              "equals": "Allow"
                            },
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction",
                              "equals": "Inbound"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                                  "equals": "*"
                                },
                                {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                                  "in": "[parameters('ports')]"
                                },
                                {
                                  "count": {
                                    "value": "[parameters('ports')]",
                                    "where": {
                                      "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'))), contains(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'),'-')), and(lessOrEquals(int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),int(current())),greaterOrEquals(int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),int(current()))), 'false')]",
                                      "equals": "true"
                                    }
                                  },
                                  "greater": 0
                                },
                                {
                                  "count": {
                                    "value": "[parameters('ports')]",
                                    "name": "ports",
                                    "where": {
                                      "count": {
                                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                        "where": {
                                          "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'))), contains(current('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'),'-')), and(lessOrEquals(int(first(split(current('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'), '-'))),int(current('ports'))),greaterOrEquals(int(last(split(current('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'), '-'))),int(current('ports')))) , 'false')]",
                                          "equals": "true"
                                        }
                                      },
                                      "greater": 0
                                    }
                                  },
                                  "greater": 0
                                },
                                {
                                  "not": {
                                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                    "notEquals": "*"
                                  }
                                },
                                {
                                  "not": {
                                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                    "notIn": "[parameters('ports')]"
                                  }
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                                  "equals": "*"
                                },
                                {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                                  "equals": "Internet"
                                },
                                {
                                  "not": {
                                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                    "notEquals": "*"
                                  }
                                },
                                {
                                  "not": {
                                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                    "notEquals": "Internet"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/networkSecurityGroups"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
                            "where": {
                              "allOf": [
                                {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].access",
                                  "equals": "Allow"
                                },
                                {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].direction",
                                  "equals": "Inbound"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange",
                                      "equals": "*"
                                    },
                                    {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange",
                                      "in": "[parameters('ports')]"
                                    },
                                    {
                                      "count": {
                                        "value": "[parameters('ports')]",
                                        "name": "ports",
                                        "where": {
                                          "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'))), contains(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'),'-')), and(lessOrEquals(int(first(split(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'), '-'))),int(current('ports'))),greaterOrEquals(int(last(split(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'), '-'))),int(current('ports')))), 'false')]",
                                          "equals": "true"
                                        }
                                      },
                                      "greater": 0
                                    },
                                    {
                                      "count": {
                                        "value": "[parameters('ports')]",
                                        "name": "ports",
                                        "where": {
                                          "count": {
                                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]",
                                            "where": {
                                              "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'))), contains(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'),'-')), and(lessOrEquals(int(first(split(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'), '-'))),int(current('ports'))),greaterOrEquals(int(last(split(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'), '-'))),int(current('ports')))) , 'false')]",
                                              "equals": "true"
                                            }
                                          },
                                          "greater": 0
                                        }
                                      },
                                      "greater": 0
                                    },
                                    {
                                      "not": {
                                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]",
                                        "notEquals": "*"
                                      }
                                    },
                                    {
                                      "not": {
                                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]",
                                        "notIn": "[parameters('ports')]"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "anyOf": [
                                    {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix",
                                      "equals": "*"
                                    },
                                    {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix",
                                      "equals": "Internet"
                                    },
                                    {
                                      "not": {
                                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]",
                                        "notEquals": "*"
                                      }
                                    },
                                    {
                                      "not": {
                                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]",
                                        "notEquals": "Internet"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          "greater": 0
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MgmtPorts-From-Internet",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-MgmtPorts-From-Internet",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1538247Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1538247Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-mysql-http": {
            "properties": {
              "displayName": "MySQL database servers enforce SSL connections.",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
              "metadata": {
                "version": "1.0.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0053793Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                },
                "minimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select version minimum TLS for MySQL server",
                    "description": "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_0",
                    "TLS1_1",
                    "TLSEnforcementDisabled"
                  ],
                  "defaultValue": "TLS1_2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DBforMySQL/servers"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                          "notEquals": "Enabled"
                        },
                        {
                          "field": "Microsoft.DBforMySQL/servers/minimalTlsVersion",
                          "notequals": "[parameters('minimalTlsVersion')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-MySql-http",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.919446Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.919446Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-postgresql-http": {
            "properties": {
              "displayName": "PostgreSQL database servers enforce SSL connection.",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
              "metadata": {
                "version": "1.0.1",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9805734Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                },
                "minimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select version minimum TLS for PostgreSQL server",
                    "description": "Select version  minimum TLS version Azure Database for PostgreSQL server to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_0",
                    "TLS1_1",
                    "TLSEnforcementDisabled"
                  ],
                  "defaultValue": "TLS1_2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DBforPostgreSQL/servers"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                          "notEquals": "Enabled"
                        },
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
                          "notequals": "[parameters('minimalTlsVersion')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-PostgreSql-http",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-private-dns-zones": {
            "properties": {
              "displayName": "Deny the creation of private DNS",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "This policy denies the creation of a private DNS in the current scope, used in combination with policies that create centralized private DNS in connectivity subscription",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.7666099Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/privateDnsZones"
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Private-DNS-Zones",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.7319556Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.7319556Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-publicendpoint-mariadb": {
            "properties": {
              "displayName": "[Deprecated] Public network access should be disabled for MariaDB",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "This policy denies the creation of Maria DB accounts with exposed public endpoints. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/fdccbe47-f3e3-4213-ad5d-ea459b2fa077.html",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "fdccbe47-f3e3-4213-ad5d-ea459b2fa077",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:28.6255303Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DBforMariaDB/servers"
                    },
                    {
                      "field": "Microsoft.DBforMariaDB/servers/publicNetworkAccess",
                      "notequals": "Disabled"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-PublicEndpoint-MariaDB",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:28.5443991Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:28.5443991Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-publicip": {
            "properties": {
              "displayName": "[Deprecated] Deny the creation of public IP",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "[Deprecated] This policy denies creation of Public IPs under the assigned scope. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/6c112d4e-5bc7-47ae-a041-ea2d9dccd749.html using appropriate assignment parameters.",
              "metadata": {
                "deprecated": true,
                "supersededBy": "6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
                "version": "1.0.0-deprecated",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.8896211Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/publicIPAddresses"
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-PublicIP",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.7788197Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.7788197Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-rdp-from-internet": {
            "properties": {
              "displayName": "[Deprecated] RDP access from the Internet should be blocked",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies any network security rule that allows RDP access from Internet. This policy is superseded by https://www.azadvertizer.net/azpolicyadvertizer/Deny-MgmtPorts-From-Internet.html",
              "metadata": {
                "deprecated": true,
                "supersededBy": "Deny-MgmtPorts-From-Internet",
                "version": "1.0.1-deprecated",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.037971Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/networkSecurityGroups/securityRules"
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Network/networkSecurityGroups/securityRules/access",
                          "equals": "Allow"
                        },
                        {
                          "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction",
                          "equals": "Inbound"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                              "equals": "*"
                            },
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                              "equals": "3389"
                            },
                            {
                              "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'))), contains(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'),'-')), and(lessOrEquals(int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),3389),greaterOrEquals(int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),3389)), 'false')]",
                              "equals": "true"
                            },
                            {
                              "count": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                "where": {
                                  "value": "[if(and(not(empty(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')))), contains(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')),'-')), and(lessOrEquals(int(first(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),3389),greaterOrEquals(int(last(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),3389)) , 'false')]",
                                  "equals": "true"
                                }
                              },
                              "greater": 0
                            },
                            {
                              "not": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                "notEquals": "*"
                              }
                            },
                            {
                              "not": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                "notEquals": "3389"
                              }
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                              "equals": "*"
                            },
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                              "equals": "Internet"
                            },
                            {
                              "not": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                "notEquals": "*"
                              }
                            },
                            {
                              "not": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                "notEquals": "Internet"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-RDP-From-Internet",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.919446Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.919446Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-redis-http": {
            "properties": {
              "displayName": "Azure Cache for Redis only secure connections should be enabled",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Audit enabling of only connections via SSL to Azure Cache for Redis. Validate both minimum TLS version and enableNonSslPort is disabled. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking",
              "metadata": {
                "version": "1.0.0",
                "category": "Cache",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1933072Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "minimumTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select minumum TLS version for Azure Cache for Redis.",
                    "description": "Select minimum TLS version for Azure Cache for Redis."
                  },
                  "allowedValues": [
                    "1.2",
                    "1.1",
                    "1.0"
                  ],
                  "defaultValue": "1.2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Cache/redis"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Cache/Redis/enableNonSslPort",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Cache/Redis/minimumTlsVersion",
                          "notequals": "[parameters('minimumTlsVersion')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Redis-http",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0600734Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0600734Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-service-endpoints": {
            "properties": {
              "displayName": "Deny or Audit service endpoints on subnets",
              "policyType": "Custom",
              "mode": "All",
              "description": "This Policy will deny/audit Service Endpoints on subnets. Service Endpoints allows the network traffic to bypass Network appliances, such as the Azure Firewall.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0097494Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpoints[*]",
                        "where": {
                          "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpoints[*].service",
                          "exists": true
                        }
                      },
                      "greater": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Service-Endpoints",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Service-Endpoints",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9038204Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9038204Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-sql-mintls": {
            "properties": {
              "displayName": "Azure SQL Database should have the minimal TLS version set to the highest version",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities.",
              "metadata": {
                "version": "1.0.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2505175Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "minimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select version for SQL server",
                    "description": "Select version minimum TLS version SQL servers to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.1",
                    "1.0"
                  ],
                  "defaultValue": "1.2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/servers/minimalTlsVersion",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Sql/servers/minimalTlsVersion",
                          "notequals": "[parameters('minimalTlsVersion')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Sql-minTLS",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1694468Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1694468Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-sqlmi-mintls": {
            "properties": {
              "displayName": "SQL Managed Instance should have the minimal TLS version set to the highest version",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities.",
              "metadata": {
                "version": "1.0.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4241352Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "minimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select version for SQL server",
                    "description": "Select version minimum TLS version SQL servers to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.1",
                    "1.0"
                  ],
                  "defaultValue": "1.2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/managedInstances"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/managedInstances/minimalTlsVersion",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Sql/managedInstances/minimalTlsVersion",
                          "notequals": "[parameters('minimalTlsVersion')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-SqlMi-minTLS",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1225722Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1225722Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-containerdeleteretentionpolicy": {
            "properties": {
              "displayName": "Storage Accounts should use a container delete retention policy",
              "policyType": "Custom",
              "mode": "All",
              "description": "Enforce container delete retention policies larger than seven days for storage account. Enable this for increased data loss protection.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0560704Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "minContainerDeleteRetentionInDays": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "Minimum Container Delete Retention in Days",
                    "description": "Specifies the minimum number of days for the container delete retention policy"
                  },
                  "defaultValue": 7
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts/blobServices"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Storage/storageAccounts/blobServices/containerDeleteRetentionPolicy.enabled",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/blobServices/containerDeleteRetentionPolicy.enabled",
                          "notEquals": true
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/blobServices/containerDeleteRetentionPolicy.days",
                          "less": "[parameters('minContainerDeleteRetentionInDays')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-ContainerDeleteRetentionPolicy",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-ContainerDeleteRetentionPolicy",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9663203Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9663203Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-copyscope": {
            "properties": {
              "displayName": "Allowed Copy scope should be restricted for Storage Accounts",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure Storage accounts should restrict the allowed copy scope. Enforce this for increased data exfiltration protection.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0034167Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "allowedCopyScope": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Allowed Copy Scope",
                    "description": "Specify the allowed copy scope."
                  },
                  "allowedValues": [
                    "AAD",
                    "PrivateLink"
                  ],
                  "defaultValue": "AAD"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Storage/storageAccounts/allowedCopyScope",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/allowedCopyScope",
                          "notEquals": "[parameters('allowedCopyScope')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-CopyScope",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-CopyScope",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9038204Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9038204Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-corsrules": {
            "properties": {
              "displayName": "Storage Accounts should restrict CORS rules",
              "policyType": "Custom",
              "mode": "All",
              "description": "Deny CORS rules for storage account for increased data exfiltration protection and endpoint protection.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2624871Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Storage/storageAccounts/blobServices"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Storage/storageAccounts/blobServices/cors.corsRules[*]"
                          },
                          "greater": 0
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Storage/storageAccounts/fileServices"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Storage/storageAccounts/fileServices/cors.corsRules[*]"
                          },
                          "greater": 0
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Storage/storageAccounts/tableServices"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Storage/storageAccounts/tableServices/cors.corsRules[*]"
                          },
                          "greater": 0
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Storage/storageAccounts/queueServices"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Storage/storageAccounts/queueServices/cors.corsRules[*]"
                          },
                          "greater": 0
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-CorsRules",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-CorsRules",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0913208Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0913208Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-localuser": {
            "properties": {
              "displayName": "Local users should be restricted for Storage Accounts",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure Storage accounts should disable local users for features like SFTP. Enforce this for increased data exfiltration protection.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5821391Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Storage/storageAccounts/isLocalUserEnabled",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/isLocalUserEnabled",
                          "notEquals": false
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-LocalUser",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-LocalUser",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.5131979Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.5131979Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-mintls": {
            "properties": {
              "displayName": "[Deprecated] Storage Account set to minimum TLS and Secure transfer should be enabled",
              "policyType": "Custom",
              "mode": "All",
              "description": "Audit requirement of Secure transfer in your storage account. This policy is superseded by https://www.azadvertizer.net/azpolicyadvertizer/fe83a0eb-a853-422d-aac2-1bffd182c5d0.html and https://www.azadvertizer.net/azpolicyadvertizer/404c3081-a854-4457-ae30-26a93ef643f9.html",
              "metadata": {
                "deprecated": true,
                "supersededBy": "fe83a0eb-a853-422d-aac2-1bffd182c5d0,404c3081-a854-4457-ae30-26a93ef643f9",
                "version": "1.0.0-deprecated",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2681363Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "minimumTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Storage Account select minimum TLS version",
                    "description": "Select version  minimum TLS version on Azure Storage Account to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_1",
                    "TLS1_0"
                  ],
                  "defaultValue": "TLS1_2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "value": "[requestContext().apiVersion]",
                              "less": "2019-04-01"
                            },
                            {
                              "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                              "exists": "false"
                            }
                          ]
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                          "equals": "false"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
                          "notequals": "[parameters('minimumTlsVersion')]"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
                          "exists": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-minTLS",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0756994Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0756994Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-networkaclsbypass": {
            "properties": {
              "displayName": "Network ACL bypass option should be restricted for Storage Accounts",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure Storage accounts should restrict the bypass option for service-level network ACLs. Enforce this for increased data exfiltration protection.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0451254Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "allowedBypassOptions": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Allowed Bypass Options",
                    "description": "Specifies which options are allowed to bypass the vnet configuration"
                  },
                  "allowedValues": [
                    "None",
                    "Logging",
                    "Metrics",
                    "AzureServices",
                    "Logging, Metrics",
                    "Logging, AzureServices",
                    "Metrics, AzureServices",
                    "Logging, Metrics, AzureServices",
                    "Logging, Metrics, AzureServices"
                  ],
                  "defaultValue": [
                    "Logging",
                    "Metrics",
                    "AzureServices",
                    "Logging, Metrics",
                    "Logging, AzureServices",
                    "Metrics, AzureServices",
                    "Logging, Metrics, AzureServices",
                    "Logging, Metrics, AzureServices"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Storage/storageAccounts/networkAcls.bypass",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/networkAcls.bypass",
                          "notIn": "[parameters('allowedBypassOptions')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-NetworkAclsBypass",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-NetworkAclsBypass",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9506969Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9506969Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-networkaclsvirtualnetworkrules": {
            "properties": {
              "displayName": "Virtual network rules should be restricted for Storage Accounts",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure Storage accounts should restrict the virtual network service-level network ACLs. Enforce this for increased data exfiltration protection.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:32.1465032Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*]"
                      },
                      "greater": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-NetworkAclsVirtualNetworkRules",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-NetworkAclsVirtualNetworkRules",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:32.1069185Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:32.1069185Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-resourceaccessrulesresourceid": {
            "properties": {
              "displayName": "Resource Access Rules resource IDs should be restricted for Storage Accounts",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure Storage accounts should restrict the resource access rule for service-level network ACLs to services from a specific Azure subscription. Enforce this for increased data exfiltration protection.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0164274Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Storage/storageAccounts/networkAcls.resourceAccessRules[*]"
                      },
                      "greater": 0
                    },
                    {
                      "count": {
                        "field": "Microsoft.Storage/storageAccounts/networkAcls.resourceAccessRules[*]",
                        "where": {
                          "value": "[split(current('Microsoft.Storage/storageAccounts/networkAcls.resourceAccessRules[*].resourceId'), '/')[2]]",
                          "equals": "*"
                        }
                      },
                      "greater": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-ResourceAccessRulesResourceId",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-ResourceAccessRulesResourceId",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.919446Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.919446Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-resourceaccessrulestenantid": {
            "properties": {
              "displayName": "Resource Access Rules Tenants should be restricted for Storage Accounts",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure Storage accounts should restrict the resource access rule for service-level network ACLs to service from the same AAD tenant. Enforce this for increased data exfiltration protection.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2262474Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Storage/storageAccounts/networkAcls.resourceAccessRules[*]"
                      },
                      "greater": 0
                    },
                    {
                      "field": "Microsoft.Storage/storageAccounts/networkAcls.resourceAccessRules[*].tenantId",
                      "notEquals": "[subscription().tenantId]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-ResourceAccessRulesTenantId",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-ResourceAccessRulesTenantId",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0756994Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0756994Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-servicesencryption": {
            "properties": {
              "displayName": "Encryption for storage services should be enforced for Storage Accounts",
              "policyType": "Custom",
              "mode": "All",
              "description": "Azure Storage accounts should enforce encryption for all storage services. Enforce this for increased encryption scope.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5677514Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "anyOf": [
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Storage/storageAccounts/encryption.services.blob.enabled",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Storage/storageAccounts/encryption.services.blob.enabled",
                              "notEquals": true
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Storage/storageAccounts/encryption.services.file.enabled",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Storage/storageAccounts/encryption.services.file.enabled",
                              "notEquals": true
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Storage/storageAccounts/encryption.services.queue.keyType",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Storage/storageAccounts/encryption.services.queue.keyType",
                              "notEquals": "Account"
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Storage/storageAccounts/encryption.services.table.keyType",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Storage/storageAccounts/encryption.services.table.keyType",
                              "notEquals": "Account"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-ServicesEncryption",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-ServicesEncryption",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.5131979Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.5131979Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storage-sftp": {
            "properties": {
              "displayName": "Storage Accounts with SFTP enabled should be denied",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "This policy denies the creation of Storage Accounts with SFTP enabled for Blob Storage.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5119855Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "field": "Microsoft.Storage/storageAccounts/isSftpEnabled",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-SFTP",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Storage-SFTP",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.4663207Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.4663207Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-storageaccount-customdomain": {
            "properties": {
              "displayName": "Storage Accounts with custom domains assigned should be denied",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the creation of Storage Accounts with custom domains assigned as communication cannot be encrypted, and always uses HTTP.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2293575Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Storage/storageAccounts/customDomain",
                          "exists": "true"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/customDomain.useSubDomainName",
                          "equals": "true"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-StorageAccount-CustomDomain",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-StorageAccount-CustomDomain",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0600734Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0600734Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-subnet-without-nsg": {
            "properties": {
              "displayName": "Subnets should have a Network Security Group",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the creation of a subnet without a Network Security Group. NSG help to protect traffic across subnet-level.",
              "metadata": {
                "version": "2.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0669463Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "excludedSubnets": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Excluded Subnets",
                    "description": "Array of subnet names that are excluded from this policy"
                  },
                  "defaultValue": [
                    "GatewaySubnet",
                    "AzureFirewallSubnet",
                    "AzureFirewallManagementSubnet"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "equals": "Microsoft.Network/virtualNetworks",
                          "field": "type"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/virtualNetworks/subnets[*]",
                            "where": {
                              "allOf": [
                                {
                                  "exists": "false",
                                  "field": "Microsoft.Network/virtualNetworks/subnets[*].networkSecurityGroup.id"
                                },
                                {
                                  "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                                  "notIn": "[parameters('excludedSubnets')]"
                                }
                              ]
                            }
                          },
                          "notEquals": 0
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/virtualNetworks/subnets"
                        },
                        {
                          "field": "name",
                          "notIn": "[parameters('excludedSubnets')]"
                        },
                        {
                          "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id",
                          "exists": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Subnet-Without-Nsg",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9506969Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9506969Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-subnet-without-penp": {
            "properties": {
              "displayName": "Subnets without Private Endpoint Network Policies enabled should be denied",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the creation of a subnet without Private Endpoint Netwotk Policies enabled. This policy is intended for 'workload' subnets, not 'central infrastructure' (aka, 'hub') subnets.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2530266Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "excludedSubnets": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Excluded Subnets",
                    "description": "Array of subnet names that are excluded from this policy"
                  },
                  "defaultValue": [
                    "GatewaySubnet",
                    "AzureFirewallSubnet",
                    "AzureFirewallManagementSubnet",
                    "AzureBastionSubnet"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "equals": "Microsoft.Network/virtualNetworks",
                          "field": "type"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/virtualNetworks/subnets[*]",
                            "where": {
                              "allOf": [
                                {
                                  "field": "Microsoft.Network/virtualNetworks/subnets[*].privateEndpointNetworkPolicies",
                                  "notEquals": "Enabled"
                                },
                                {
                                  "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                                  "notIn": "[parameters('excludedSubnets')]"
                                }
                              ]
                            }
                          },
                          "notEquals": 0
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/virtualNetworks/subnets"
                        },
                        {
                          "field": "name",
                          "notIn": "[parameters('excludedSubnets')]"
                        },
                        {
                          "field": "Microsoft.Network/virtualNetworks/subnets/privateEndpointNetworkPolicies",
                          "notEquals": "Enabled"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Penp",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Subnet-Without-Penp",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1069443Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1069443Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-subnet-without-udr": {
            "properties": {
              "displayName": "Subnets should have a User Defined Route",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the creation of a subnet without a User Defined Route (UDR).",
              "metadata": {
                "version": "2.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1403881Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "excludedSubnets": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Excluded Subnets",
                    "description": "Array of subnet names that are excluded from this policy"
                  },
                  "defaultValue": [
                    "AzureBastionSubnet"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "equals": "Microsoft.Network/virtualNetworks",
                          "field": "type"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/virtualNetworks/subnets[*]",
                            "where": {
                              "allOf": [
                                {
                                  "exists": "false",
                                  "field": "Microsoft.Network/virtualNetworks/subnets[*].routeTable.id"
                                },
                                {
                                  "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                                  "notIn": "[parameters('excludedSubnets')]"
                                }
                              ]
                            }
                          },
                          "notEquals": 0
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/virtualNetworks/subnets"
                        },
                        {
                          "field": "name",
                          "notIn": "[parameters('excludedSubnets')]"
                        },
                        {
                          "field": "Microsoft.Network/virtualNetworks/subnets/routeTable.id",
                          "exists": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-Subnet-Without-Udr",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9975704Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9975704Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-udr-with-specific-nexthop": {
            "properties": {
              "displayName": "User Defined Routes with 'Next Hop Type' set to 'Internet' or 'VirtualNetworkGateway' should be denied",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the creation of a User Defined Route with 'Next Hop Type' set to 'Internet' or 'VirtualNetworkGateway'.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5299815Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "excludedDestinations": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Excluded Destinations",
                    "description": "Array of route destinations that are to be denied"
                  },
                  "defaultValue": [
                    "Internet",
                    "VirtualNetworkGateway"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "equals": "Microsoft.Network/routeTables",
                          "field": "type"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/routeTables/routes[*]",
                            "where": {
                              "field": "Microsoft.Network/routeTables/routes[*].nextHopType",
                              "in": "[parameters('excludedDestinations')]"
                            }
                          },
                          "notEquals": 0
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/routeTables/routes"
                        },
                        {
                          "field": "Microsoft.Network/routeTables/routes/nextHopType",
                          "in": "[parameters('excludedDestinations')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-UDR-With-Specific-NextHop",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-UDR-With-Specific-NextHop",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.3882506Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.3882506Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-vnet-peer-cross-sub": {
            "properties": {
              "displayName": "Deny vNet peering cross subscription.",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the creation of vNet Peerings outside of the same subscriptions under the assigned scope.",
              "metadata": {
                "version": "1.0.1",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.522418Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    },
                    {
                      "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
                      "notcontains": "[subscription().id]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-VNET-Peer-Cross-Sub",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1850707Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1850707Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-vnet-peering": {
            "properties": {
              "displayName": "Deny vNet peering ",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the creation of vNet Peerings under the assigned scope.",
              "metadata": {
                "version": "1.0.1",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.5984389Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-VNet-Peering",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.5600681Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.5600681Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deny-vnet-peering-to-non-approved-vnets": {
            "properties": {
              "displayName": "Deny vNet peering to non-approved vNets",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy denies the creation of vNet Peerings to non-approved vNets under the assigned scope.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1731885Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "allowedVnets": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Allowed vNets to peer with",
                    "description": "Array of allowed vNets that can be peered with. Must be entered using their resource ID. Example: /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}"
                  },
                  "defaultValue": []
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                        },
                        {
                          "not": {
                            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
                            "in": "[parameters('allowedVnets')]"
                          }
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/virtualNetworks"
                        },
                        {
                          "not": {
                            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings[*].remoteVirtualNetwork.id",
                            "in": "[parameters('allowedVnets')]"
                          }
                        },
                        {
                          "not": {
                            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings[*].remoteVirtualNetwork.id",
                            "exists": false
                          }
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]"
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deny-VNET-Peering-To-Non-Approved-VNETs",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9819456Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9819456Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/denyaction-activitylogs": {
            "properties": {
              "displayName": "DenyAction implementation on Activity Logs",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "This is a DenyAction implementation policy on Activity Logs.",
              "metadata": {
                "deprecated": false,
                "version": "1.0.0",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0231419Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions/providers/diagnosticSettings"
                },
                "then": {
                  "effect": "denyAction",
                  "details": {
                    "actionNames": [
                      "delete"
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/DenyAction-ActivityLogs",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "DenyAction-ActivityLogs",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.919446Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.919446Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/denyaction-deleteresources": {
            "properties": {
              "displayName": "Do not allow deletion of specified resource and resource type",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy enables you to specify the resource and resource type that your organization can protect from accidentals deletion by blocking delete calls using the deny action effect.",
              "metadata": {
                "version": "1.0.0",
                "category": "General",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1136723Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "resourceName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Resource Name",
                    "description": "Provide the name of the resource that you want to protect from accidental deletion."
                  }
                },
                "resourceType": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Resource Type",
                    "description": "Provide the resource type that you want to protect from accidental deletion."
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DenyAction",
                    "Disabled"
                  ],
                  "defaultValue": "DenyAction"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "[parameters('resourceType')]"
                    },
                    {
                      "field": "name",
                      "like": "[parameters('resourceName')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "actionNames": [
                      "delete"
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/DenyAction-DeleteResources",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "DenyAction-DeleteResources",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9663203Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9663203Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/denyaction-diagnosticlogs": {
            "properties": {
              "displayName": "DenyAction implementation on Diagnostic Logs.",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "DenyAction implementation on Diagnostic Logs.",
              "metadata": {
                "deprecated": false,
                "version": "1.0.0",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2253991Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Insights/diagnosticSettings"
                },
                "then": {
                  "effect": "denyAction",
                  "details": {
                    "actionNames": [
                      "delete"
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/DenyAction-DiagnosticLogs",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "DenyAction-DiagnosticLogs",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1069443Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1069443Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-asc-securitycontacts": {
            "properties": {
              "displayName": "Deploy Microsoft Defender for Cloud Security Contacts",
              "policyType": "Custom",
              "mode": "All",
              "description": "Deploy Microsoft Defender for Cloud Security Contacts",
              "metadata": {
                "version": "1.1.0",
                "category": "Security Center",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0450316Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "emailSecurityContact": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Security contacts email address",
                    "description": "Provide email address for Azure Security Center contact details"
                  }
                },
                "effect": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "minimalSeverity": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Minimal severity",
                    "description": "Defines the minimal alert severity which will be sent as email notifications"
                  },
                  "allowedValues": [
                    "High",
                    "Medium",
                    "Low"
                  ],
                  "defaultValue": "High"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Resources/subscriptions"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Security/securityContacts",
                    "deploymentScope": "subscription",
                    "existenceScope": "subscription",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Security/securityContacts/email",
                          "contains": "[parameters('emailSecurityContact')]"
                        },
                        {
                          "field": "Microsoft.Security/securityContacts/alertNotifications.minimalSeverity",
                          "contains": "[parameters('minimalSeverity')]"
                        },
                        {
                          "field": "type",
                          "equals": "Microsoft.Security/securityContacts"
                        },
                        {
                          "field": "Microsoft.Security/securityContacts/alertNotifications",
                          "equals": "On"
                        },
                        {
                          "field": "Microsoft.Security/securityContacts/alertsToAdmins",
                          "equals": "On"
                        }
                      ]
                    },
                    "deployment": {
                      "location": "uksouth",
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "emailSecurityContact": {
                            "value": "[parameters('emailSecurityContact')]"
                          },
                          "minimalSeverity": {
                            "value": "[parameters('minimalSeverity')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "emailSecurityContact": {
                              "type": "string",
                              "metadata": {
                                "description": "Security contacts email address"
                              }
                            },
                            "minimalSeverity": {
                              "type": "string",
                              "metadata": {
                                "description": "Minimal severity level reported"
                              }
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Security/securityContacts",
                              "name": "default",
                              "apiVersion": "2020-01-01-preview",
                              "properties": {
                                "emails": "[parameters('emailSecurityContact')]",
                                "notificationsByRole": {
                                  "state": "On",
                                  "roles": [
                                    "Owner"
                                  ]
                                },
                                "alertNotifications": {
                                  "state": "On",
                                  "minimalSeverity": "[parameters('minimalSeverity')]"
                                }
                              }
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-ASC-SecurityContacts",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9506969Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9506969Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-budget": {
            "properties": {
              "displayName": "Deploy a default budget on all subscriptions under the assigned scope",
              "policyType": "Custom",
              "mode": "All",
              "description": "Deploy a default budget on all subscriptions under the assigned scope",
              "metadata": {
                "version": "1.1.0",
                "category": "Budget",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2288699Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "budgetName": {
                  "type": "String",
                  "metadata": {
                    "description": "The name for the budget to be created"
                  },
                  "defaultValue": "budget-set-by-policy"
                },
                "amount": {
                  "type": "String",
                  "metadata": {
                    "description": "The total amount of cost or usage to track with the budget"
                  },
                  "defaultValue": "1000"
                },
                "timeGrain": {
                  "type": "String",
                  "metadata": {
                    "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain."
                  },
                  "allowedValues": [
                    "Monthly",
                    "Quarterly",
                    "Annually",
                    "BillingMonth",
                    "BillingQuarter",
                    "BillingAnnual"
                  ],
                  "defaultValue": "Monthly"
                },
                "firstThreshold": {
                  "type": "String",
                  "metadata": {
                    "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
                  },
                  "defaultValue": "90"
                },
                "secondThreshold": {
                  "type": "String",
                  "metadata": {
                    "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
                  },
                  "defaultValue": "100"
                },
                "contactRoles": {
                  "type": "Array",
                  "metadata": {
                    "description": "The list of contact RBAC roles, in an array, to send the budget notification to when the threshold is exceeded."
                  },
                  "defaultValue": [
                    "Owner",
                    "Contributor"
                  ]
                },
                "contactEmails": {
                  "type": "Array",
                  "metadata": {
                    "description": "The list of email addresses, in an array, to send the budget notification to when the threshold is exceeded."
                  },
                  "defaultValue": []
                },
                "contactGroups": {
                  "type": "Array",
                  "metadata": {
                    "description": "The list of action groups, in an array, to send the budget notification to when the threshold is exceeded. It accepts array of strings."
                  },
                  "defaultValue": []
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Resources/subscriptions"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Consumption/budgets",
                    "deploymentScope": "subscription",
                    "existenceScope": "subscription",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Consumption/budgets/amount",
                          "equals": "[parameters('amount')]"
                        },
                        {
                          "field": "Microsoft.Consumption/budgets/timeGrain",
                          "equals": "[parameters('timeGrain')]"
                        },
                        {
                          "field": "Microsoft.Consumption/budgets/category",
                          "equals": "Cost"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "location": "uksouth",
                      "properties": {
                        "mode": "Incremental",
                        "parameters": {
                          "budgetName": {
                            "value": "[parameters('budgetName')]"
                          },
                          "amount": {
                            "value": "[parameters('amount')]"
                          },
                          "timeGrain": {
                            "value": "[parameters('timeGrain')]"
                          },
                          "firstThreshold": {
                            "value": "[parameters('firstThreshold')]"
                          },
                          "secondThreshold": {
                            "value": "[parameters('secondThreshold')]"
                          },
                          "contactEmails": {
                            "value": "[parameters('contactEmails')]"
                          },
                          "contactRoles": {
                            "value": "[parameters('contactRoles')]"
                          },
                          "contactGroups": {
                            "value": "[parameters('contactGroups')]"
                          }
                        },
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "budgetName": {
                              "type": "String"
                            },
                            "amount": {
                              "type": "String"
                            },
                            "timeGrain": {
                              "type": "String"
                            },
                            "firstThreshold": {
                              "type": "String"
                            },
                            "secondThreshold": {
                              "type": "String"
                            },
                            "contactEmails": {
                              "type": "Array"
                            },
                            "contactRoles": {
                              "type": "Array"
                            },
                            "contactGroups": {
                              "type": "Array"
                            },
                            "startDate": {
                              "type": "String",
                              "defaultValue": "[concat(utcNow('MM'), '/01/', utcNow('yyyy'))]"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Consumption/budgets",
                              "apiVersion": "2019-10-01",
                              "name": "[parameters('budgetName')]",
                              "properties": {
                                "timePeriod": {
                                  "startDate": "[parameters('startDate')]"
                                },
                                "timeGrain": "[parameters('timeGrain')]",
                                "amount": "[parameters('amount')]",
                                "category": "Cost",
                                "notifications": {
                                  "NotificationForExceededBudget1": {
                                    "enabled": true,
                                    "operator": "GreaterThan",
                                    "threshold": "[parameters('firstThreshold')]",
                                    "contactEmails": "[parameters('contactEmails')]",
                                    "contactRoles": "[parameters('contactRoles')]",
                                    "contactGroups": "[parameters('contactGroups')]"
                                  },
                                  "NotificationForExceededBudget2": {
                                    "enabled": true,
                                    "operator": "GreaterThan",
                                    "threshold": "[parameters('secondThreshold')]",
                                    "contactEmails": "[parameters('contactEmails')]",
                                    "contactRoles": "[parameters('contactRoles')]",
                                    "contactGroups": "[parameters('contactGroups')]"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Budget",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1538247Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1538247Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-custom-route-table": {
            "properties": {
              "displayName": "Deploy a route table with specific user defined routes",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys a route table with specific user defined routes when one does not exist. The route table deployed by the policy must be manually associated to subnet(s)",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9653906Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "requiredRoutes": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "requiredRoutes",
                    "description": "Routes that must exist in compliant route tables deployed by this policy"
                  }
                },
                "vnetRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "vnetRegion",
                    "description": "Only VNets in this region will be evaluated against this policy"
                  }
                },
                "routeTableName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "routeTableName",
                    "description": "Name of the route table automatically deployed by this policy"
                  }
                },
                "disableBgpPropagation": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "DisableBgpPropagation",
                    "description": "Disable BGP Propagation"
                  },
                  "defaultValue": false
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/virtualNetworks"
                    },
                    {
                      "field": "location",
                      "equals": "[parameters('vnetRegion')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Network/routeTables",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "name",
                          "equals": "[parameters('routeTableName')]"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/routeTables/routes[*]",
                            "where": {
                              "value": "[concat(current('Microsoft.Network/routeTables/routes[*].addressPrefix'), ';', current('Microsoft.Network/routeTables/routes[*].nextHopType'), if(equals(toLower(current('Microsoft.Network/routeTables/routes[*].nextHopType')),'virtualappliance'), concat(';', current('Microsoft.Network/routeTables/routes[*].nextHopIpAddress')), ''))]",
                              "in": "[parameters('requiredRoutes')]"
                            }
                          },
                          "equals": "[length(parameters('requiredRoutes'))]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/subscriptions/e867a45d-e513-44ac-931e-4741cef80b24/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "routeTableName": {
                              "type": "string"
                            },
                            "vnetRegion": {
                              "type": "string"
                            },
                            "requiredRoutes": {
                              "type": "array"
                            },
                            "disableBgpPropagation": {
                              "type": "bool"
                            }
                          },
                          "variables": {
                            "copyLoop": [
                              {
                                "name": "routes",
                                "count": "[[length(parameters('requiredRoutes'))]",
                                "input": {
                                  "name": "[[concat('route-',copyIndex('routes'))]",
                                  "properties": {
                                    "addressPrefix": "[[split(parameters('requiredRoutes')[copyIndex('routes')], ';')[0]]",
                                    "nextHopType": "[[split(parameters('requiredRoutes')[copyIndex('routes')], ';')[1]]",
                                    "nextHopIpAddress": "[[if(equals(toLower(split(parameters('requiredRoutes')[copyIndex('routes')], ';')[1]),'virtualappliance'),split(parameters('requiredRoutes')[copyIndex('routes')], ';')[2], null())]"
                                  }
                                }
                              }
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2021-04-01",
                              "name": "routeTableDepl",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "routeTableName": {
                                      "type": "string"
                                    },
                                    "vnetRegion": {
                                      "type": "string"
                                    },
                                    "requiredRoutes": {
                                      "type": "array"
                                    },
                                    "disableBgpPropagation": {
                                      "type": "bool"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/routeTables",
                                      "apiVersion": "2021-02-01",
                                      "name": "[[parameters('routeTableName')]",
                                      "location": "[[parameters('vnetRegion')]",
                                      "properties": {
                                        "disableBgpRoutePropagation": "[[parameters('disableBgpPropagation')]",
                                        "copy": "[variables('copyLoop')]"
                                      }
                                    }
                                  ]
                                },
                                "parameters": {
                                  "routeTableName": {
                                    "value": "[parameters('routeTableName')]"
                                  },
                                  "vnetRegion": {
                                    "value": "[parameters('vnetRegion')]"
                                  },
                                  "requiredRoutes": {
                                    "value": "[parameters('requiredRoutes')]"
                                  },
                                  "disableBgpPropagation": {
                                    "value": "[parameters('disableBgpPropagation')]"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "routeTableName": {
                            "value": "[parameters('routeTableName')]"
                          },
                          "vnetRegion": {
                            "value": "[parameters('vnetRegion')]"
                          },
                          "requiredRoutes": {
                            "value": "[parameters('requiredRoutes')]"
                          },
                          "disableBgpPropagation": {
                            "value": "[parameters('disableBgpPropagation')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Custom-Route-Table",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.872569Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.872569Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-ddosprotection": {
            "properties": {
              "displayName": "Deploy an Azure DDoS Network Protection",
              "policyType": "Custom",
              "mode": "All",
              "description": "Deploys an Azure DDoS Network Protection",
              "metadata": {
                "version": "1.0.1",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1173224Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "ddosName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "ddosName",
                    "description": "DDoSVnet"
                  }
                },
                "ddosRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "ddosRegion",
                    "description": "DDoSVnet location",
                    "strongType": "location"
                  }
                },
                "rgName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "rgName",
                    "description": "Provide name for resource group."
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Resources/subscriptions"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Network/ddosProtectionPlans",
                    "deploymentScope": "subscription",
                    "existenceScope": "resourceGroup",
                    "resourceGroupName": "[parameters('rgName')]",
                    "name": "[parameters('ddosName')]",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "deployment": {
                      "location": "uksouth",
                      "properties": {
                        "mode": "Incremental",
                        "parameters": {
                          "rgName": {
                            "value": "[parameters('rgName')]"
                          },
                          "ddosname": {
                            "value": "[parameters('ddosname')]"
                          },
                          "ddosregion": {
                            "value": "[parameters('ddosRegion')]"
                          }
                        },
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "rgName": {
                              "type": "String"
                            },
                            "ddosname": {
                              "type": "String"
                            },
                            "ddosRegion": {
                              "type": "String"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/resourceGroups",
                              "apiVersion": "2018-05-01",
                              "name": "[parameters('rgName')]",
                              "location": "[deployment().location]",
                              "properties": {}
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2018-05-01",
                              "name": "ddosprotection",
                              "resourceGroup": "[parameters('rgName')]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/ddosProtectionPlans",
                                      "apiVersion": "2019-12-01",
                                      "name": "[parameters('ddosName')]",
                                      "location": "[parameters('ddosRegion')]",
                                      "properties": {}
                                    }
                                  ],
                                  "outputs": {}
                                }
                              }
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-DDoSProtection",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9819456Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9819456Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-aa": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Automation to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9407398Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Automation/automationAccounts"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Automation/automationAccounts/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "timeGrain": null,
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "JobLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "JobStreams",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DscNodeStatus",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AuditEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-AA",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8569417Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8569417Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-aci": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Container Instances to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9397006Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.ContainerInstance/containerGroups"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.ContainerInstance/containerGroups/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": []
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-ACI",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.872569Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.872569Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-acr": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Container Registry to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4252781Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.ContainerRegistry/registries"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.ContainerRegistry/registries/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "ContainerRegistryLoginEvents",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "ContainerRegistryRepositoryEvents",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-ACR",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1850707Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1850707Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-analysisservice": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0342179Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.AnalysisServices/servers"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.AnalysisServices/servers/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "Engine",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Service",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-AnalysisService",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9506969Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9506969Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-apiforfhir": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Azure API for FHIR to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Azure API for FHIR to stream to a Log Analytics workspace when any Azure API for FHIR which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4877894Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.HealthcareApis/services"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.HealthcareApis/services/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "AuditLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-ApiForFHIR",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1381974Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1381974Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-apimgmt": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for API Management to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.2.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9830287Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "logAnalyticsDestinationType": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics destination type",
                    "description": "Select destination type for Log Analytics. Allowed values are 'Dedicated' (resource specific) and 'AzureDiagnostics'. Default is 'AzureDiagnostics'"
                  },
                  "allowedValues": [
                    "AzureDiagnostics",
                    "Dedicated"
                  ],
                  "defaultValue": "AzureDiagnostics"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "logAnalyticsDestinationType": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.ApiManagement/service/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "GatewayLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "WebSocketConnectionLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ],
                                "logAnalyticsDestinationType": "[parameters('logAnalyticsDestinationType')]"
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "logAnalyticsDestinationType": {
                            "value": "[parameters('logAnalyticsDestinationType')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-APIMgmt",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9038204Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9038204Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-applicationgateway": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0039559Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/applicationGateways"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/applicationGateways/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "ApplicationGatewayAccessLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "ApplicationGatewayPerformanceLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "ApplicationGatewayFirewallLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-ApplicationGateway",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9038204Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9038204Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-avdscalingplans": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for AVD Scaling Plans to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for AVD Scaling Plans to stream to a Log Analytics workspace when any Scaling Plan which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1000296Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DesktopVirtualization/scalingplans"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DesktopVirtualization/scalingplans/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "logs": [
                                  {
                                    "category": "Autoscale",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-AVDScalingPlans",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0444449Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0444449Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-bastion": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Azure Bastion to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Azure Bastion to stream to a Log Analytics workspace when any Azure Bastion which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.6125525Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/bastionHosts"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/bastionHosts/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "BastionAuditLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-Bastion",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.5131979Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.5131979Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-cdnendpoints": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:31.7763518Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Cdn/profiles/endpoints"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Cdn/profiles/endpoints/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [],
                                "logs": [
                                  {
                                    "category": "CoreAnalytics",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('fullName')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-CDNEndpoints",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:31.7475418Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:31.7475418Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-cognitiveservices": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2665983Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.CognitiveServices/accounts"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.CognitiveServices/accounts/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "Audit",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "RequestResponse",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Trace",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-CognitiveServices",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0756994Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0756994Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-cosmosdb": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.2.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.8878274Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DocumentDB/databaseAccounts"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DocumentDB/databaseAccounts/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "Requests",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "DataPlaneRequests",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "MongoRequests",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "QueryRuntimeStatistics",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "PartitionKeyStatistics",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "PartitionKeyRUConsumption",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "ControlPlaneRequests",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "CassandraRequests",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "GremlinRequests",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "TableApiRequests",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-CosmosDB",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.7475676Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.7475676Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-databricks": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Databricks to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.3.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9857791Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Databricks/workspaces"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Databricks/workspaces/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "logs": [
                                  {
                                    "category": "dbfs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "clusters",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "accounts",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "jobs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "notebook",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "ssh",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "workspace",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "secrets",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "sqlPermissions",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "instancePools",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "sqlanalytics",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "genie",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "globalInitScripts",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "iamRole",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "mlflowExperiment",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "featureStore",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "RemoteHistoryService",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "mlflowAcledArtifact",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "databrickssql",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "deltaPipelines",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "modelRegistry",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "repos",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "unityCatalog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "gitCredentials",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "webTerminal",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "serverlessRealTimeInference",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "clusterLibraries",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "partnerHub",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "clamAVScan",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "capsule8Dataplane",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-Databricks",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-dataexplorercluster": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Azure Data Explorer Cluster to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Azure Data Explorer Cluster to stream to a Log Analytics workspace when any Azure Data Explorer Cluster which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1893911Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Kusto/Clusters"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Kusto/Clusters/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "SucceededIngestion",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "FailedIngestion",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "IngestionBatching",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Command",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Query",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "TableUsageStatistics",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "TableDetails",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-DataExplorerCluster",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-datafactory": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Data Factory to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.2.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9017123Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DataFactory/factories"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DataFactory/factories/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "ActivityRuns",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "PipelineRuns",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "TriggerRuns",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "SSISPackageEventMessages",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "SSISPackageExecutableStatistics",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "SSISPackageEventMessageContext",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "SSISPackageExecutionComponentPhases",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "SSISPackageExecutionDataStatistics",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "SSISIntegrationRuntimeLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "SandboxPipelineRuns",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "SandboxActivityRuns",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-DataFactory",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8100683Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8100683Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-dlanalytics": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0565856Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DataLakeAnalytics/accounts"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DataLakeAnalytics/accounts/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "Audit",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Requests",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-DLAnalytics",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9663203Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9663203Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-eventgridsub": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0111235Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.EventGrid/eventSubscriptions"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.EventGrid/eventSubscriptions/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": []
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-EventGridSub",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-eventgridsystemtopic": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9310867Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.EventGrid/systemTopics"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.EventGrid/systemTopics/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "DeliveryFailures",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-EventGridSystemTopic",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8569417Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8569417Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-eventgridtopic": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.2.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2207618Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.EventGrid/topics"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.EventGrid/topics/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "DeliveryFailures",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "PublishFailures",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DataPlaneRequests",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-EventGridTopic",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1694468Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1694468Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-expressroute": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2035147Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/expressRouteCircuits"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/expressRouteCircuits/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "PeeringRouteLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-ExpressRoute",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-firewall": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Firewall to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.2.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4527021Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "logAnalyticsDestinationType": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics destination type",
                    "description": "Select destination type for Log Analytics. Allowed values are 'Dedicated' (resource specific) and 'AzureDiagnostics'. Default is 'AzureDiagnostics'"
                  },
                  "allowedValues": [
                    "AzureDiagnostics",
                    "Dedicated"
                  ],
                  "defaultValue": "AzureDiagnostics"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/azureFirewalls"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "logAnalyticsDestinationType": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "logAnalyticsDestinationType": "[parameters('logAnalyticsDestinationType')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "AzureFirewallApplicationRule",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AzureFirewallNetworkRule",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AzureFirewallDnsProxy",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWNetworkRule",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWApplicationRule",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWNatRule",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWThreatIntel",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWIdpsSignature",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWDnsQuery",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWFqdnResolveFailure",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWApplicationRuleAggregation",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWNetworkRuleAggregation",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWNatRuleAggregation",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWFatFlow",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AZFWFlowTrace",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "logAnalyticsDestinationType": {
                            "value": "[parameters('logAnalyticsDestinationType')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-Firewall",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.2006937Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.2006937Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-frontdoor": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Front Door to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9256191Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/frontDoors"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/frontDoors/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "FrontdoorAccessLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "FrontdoorWebApplicationFirewallLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-FrontDoor",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8569417Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8569417Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-function": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2038216Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "value": "[field('kind')]",
                      "contains": "functionapp"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "FunctionAppLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-Function",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-hdinsight": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for HDInsight to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.572498Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.HDInsight/clusters"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.HDInsight/clusters/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": []
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-HDInsight",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.5131979Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.5131979Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-iothub": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2028284Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Devices/IotHubs"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Devices/IotHubs/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "Connections",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DeviceTelemetry",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "C2DCommands",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DeviceIdentityOperations",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "FileUploadOperations",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Routes",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "D2CTwinOperations",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "C2DTwinOperations",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "TwinQueries",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "JobsOperations",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DirectMethods",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DistributedTracing",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Configurations",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DeviceStreams",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-iotHub",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-loadbalancer": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9857553Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/loadBalancers"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/loadBalancers/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "timeGrain": null,
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "LoadBalancerAlertEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "LoadBalancerProbeHealthStatus",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-LoadBalancer",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-loganalytics": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Log Analytics to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Log Analytics workspaces to stream to a Log Analytics workspace when any Log Analytics workspace which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0144961Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "microsoft.operationalinsights/workspaces"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "microsoft.operationalinsights/workspaces/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "Audit",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-LogAnalytics",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-logicappsise": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1972233Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Logic/integrationAccounts"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Logic/integrationAccounts/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [],
                                "logs": [
                                  {
                                    "category": "IntegrationAccountTrackingEvents",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-LogicAppsISE",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-mariadb": {
            "properties": {
              "displayName": "[Deprecated] Diagnostic Settings for MariaDB to Log Analytics Workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled. Deprecating due to service retirement, https://learn.microsoft.com/en-us/azure/mariadb/whats-happening-to-mariadb",
              "metadata": {
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:31.5086625Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DBforMariaDB/servers"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DBforMariaDB/servers/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "MySqlSlowLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "MySqlAuditLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-MariaDB",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:31.4819157Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:31.4819157Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-mediaservice": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Azure Media Service to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Azure Media Service to stream to a Log Analytics workspace when any Azure Media Service which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1593264Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Media/mediaServices"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Media/mediaServices/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "KeyDeliveryRequests",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-MediaService",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0913208Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0913208Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-mlworkspace": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.2.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5154693Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.MachineLearningServices/workspaces"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.MachineLearningServices/workspaces/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "AmlComputeClusterEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AmlComputeClusterNodeEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AmlComputeJobEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AmlComputeCpuGpuUtilization",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AmlRunStatusChangedEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "ModelsChangeEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "ModelsReadEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "ModelsActionEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DeploymentReadEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DeploymentEventACI",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DeploymentEventAKS",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "InferencingOperationAKS",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "InferencingOperationACI",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DataLabelChangeEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DataLabelReadEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "ComputeInstanceEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DataStoreChangeEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DataStoreReadEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DataSetChangeEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DataSetReadEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "PipelineChangeEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "PipelineReadEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "RunEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "RunReadEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "EnvironmentChangeEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "EnvironmentReadEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-MlWorkspace",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1694468Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1694468Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-mysql": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:33.2579718Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DBforMySQL/servers"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DBforMySQL/servers/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "MySqlSlowLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "MySqlAuditLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-MySQL",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:32.6694207Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:32.6694207Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-networksecuritygroups": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5338916Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/networkSecurityGroups"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [],
                                "logs": [
                                  {
                                    "category": "NetworkSecurityGroupEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "NetworkSecurityGroupRuleCounter",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-NetworkSecurityGroups",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.4819486Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.4819486Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-nic": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0285356Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/networkInterfaces"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkInterfaces/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "timeGrain": null,
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-NIC",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.919446Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.919446Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-postgresql": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "2.0.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1486166Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DBforPostgreSQL/flexibleServers"
                    },
                    {
                      "field": "type",
                      "equals": "Microsoft.DBforPostgreSQL/servers"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "resourceType": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "condition": "[startsWith(parameters('resourceType'),'Microsoft.DBforPostgreSQL/flexibleServers')]",
                              "type": "Microsoft.DBforPostgreSQL/flexibleServers/providers/diagnosticSettings",
                              "apiVersion": "2021-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "PostgreSQLLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": "[startsWith(parameters('resourceType'),'Microsoft.DBforPostgreSQL/servers')]",
                              "type": "Microsoft.DBforPostgreSQL/servers/providers/diagnosticSettings",
                              "apiVersion": "2021-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "PostgreSQLLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "QueryStoreRuntimeStatistics",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "QueryStoreWaitStatistics",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "resourceType": {
                            "value": "[field('type')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-PostgreSQL",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0913208Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0913208Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-powerbiembedded": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5118019Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.PowerBIDedicated/capacities"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.PowerBIDedicated/capacities/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "Engine",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-PowerBIEmbedded",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1381974Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1381974Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-rediscache": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9327271Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Cache/redis"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Cache/redis/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": []
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-RedisCache",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8569417Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8569417Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-relay": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Relay to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9279148Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Relay/namespaces"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Relay/namespaces/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "HybridConnectionsEvent",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-Relay",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8569417Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8569417Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-signalr": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for SignalR to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0594099Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.SignalRService/SignalR"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.SignalRService/SignalR/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "AllLogs",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-SignalR",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9819456Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9819456Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-sqlelasticpools": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0408836Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers/elasticPools"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Sql/servers/elasticPools/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": []
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('fullName')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-SQLElasticPools",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9038204Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9038204Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-sqlmi": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9447012Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/managedInstances"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Sql/managedInstances/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "logs": [
                                  {
                                    "category": "ResourceUsageStats",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "SQLSecurityAuditEvents",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "DevOpsOperationsAudit",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-SQLMI",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.872569Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.872569Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-timeseriesinsights": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9827386Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.TimeSeriesInsights/environments"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.TimeSeriesInsights/environments/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "Ingress",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Management",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-TimeSeriesInsights",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-trafficmanager": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0482023Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/trafficManagerProfiles"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/trafficManagerProfiles/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "ProbeHealthStatusEvents",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-TrafficManager",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9663203Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9663203Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-virtualnetwork": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1814286Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/virtualNetworks"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "VMProtectionAlerts",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-VirtualNetwork",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0131958Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0131958Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-vm": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5302226Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": []
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-VM",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.4819486Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.4819486Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-vmss": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9866933Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachineScaleSets"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachineScaleSets/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "enabled": false,
                                      "days": 0
                                    }
                                  }
                                ],
                                "logs": []
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-VMSS",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9506969Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9506969Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-vnetgw": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.1-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0259255Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/virtualNetworkGateways"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworkGateways/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "GatewayDiagnosticLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "IKEDiagnosticLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "P2SDiagnosticLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "RouteDiagnosticLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "TunnelDiagnosticLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-VNetGW",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9350719Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9350719Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-vwans2svpngw": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for VWAN S2S VPN Gateway to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for VWAN S2S VPN Gateway to stream to a Log Analytics workspace when any VWAN S2S VPN Gateway which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.0.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4188987Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/vpnGateways"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/vpnGateways/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": [
                                  {
                                    "category": "GatewayDiagnosticLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "IKEDiagnosticLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "RouteDiagnosticLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "TunnelDiagnosticLog",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VWanS2SVPNGW",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-VWanS2SVPNGW",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1850707Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1850707Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-webserverfarm": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9359726Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Web/serverfarms"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Web/serverfarms/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": []
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-WebServerFarm",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8569417Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8569417Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-website": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for App Service to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.2.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2267889Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "metricsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable metrics",
                    "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "value": "[field('kind')]",
                      "notContains": "functionapp"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "[parameters('logsEnabled')]"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                          "equals": "[parameters('metricsEnabled')]"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "metricsEnabled": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            },
                            "serverFarmId": {
                              "type": "String"
                            }
                          },
                          "variables": {
                            "logs": {
                              "premiumTierLogs": [
                                {
                                  "category": "AppServiceAntivirusScanAuditLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceHTTPLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceConsoleLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceAppLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceFileAuditLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceAuditLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceIPSecAuditLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServicePlatformLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                }
                              ],
                              "otherTierLogs": [
                                {
                                  "category": "AppServiceHTTPLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceConsoleLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceAppLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceAuditLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceIPSecAuditLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServicePlatformLogs",
                                  "enabled": "[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": "[parameters('metricsEnabled')]",
                                    "retentionPolicy": {
                                      "days": 0,
                                      "enabled": false
                                    },
                                    "timeGrain": null
                                  }
                                ],
                                "logs": "[if(startsWith(reference(parameters('serverFarmId'), '2021-03-01', 'Full').sku.tier, 'Premium'), variables('logs').premiumTierLogs, variables('logs').otherTierLogs)]"
                              }
                            }
                          ],
                          "outputs": {
                            "policy": {
                              "type": "string",
                              "value": "[concat(parameters('logAnalytics'), 'configured for diagnostic logs for ', ': ', parameters('resourceName'))]"
                            }
                          }
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "metricsEnabled": {
                            "value": "[parameters('metricsEnabled')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          },
                          "serverFarmId": {
                            "value": "[field('Microsoft.Web/sites/serverFarmId')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-Website",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1225722Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1225722Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-wvdappgroup": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for AVD Application group to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for AVD Application group to stream to a Log Analytics workspace when any application group which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.1-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9813918Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DesktopVirtualization/applicationGroups"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DesktopVirtualization/applicationGroups/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "logs": [
                                  {
                                    "category": "Checkpoint",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Error",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Management",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-WVDAppGroup",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-wvdhostpools": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for AVD Host Pools to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for AVD Host Pools to stream to a Log Analytics workspace when any Host Pools which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.3.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4808606Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DesktopVirtualization/hostpools"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DesktopVirtualization/hostpools/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "logs": [
                                  {
                                    "category": "Checkpoint",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Error",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Management",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Connection",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "HostRegistration",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "AgentHealthStatus",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "NetworkData",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "SessionHostManagement",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "ConnectionGraphicsData",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-WVDHostPools",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.3882506Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.3882506Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-wvdworkspace": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings for AVD Workspace to Log Analytics workspace",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys the diagnostic settings for AVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. This policy is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "1.1.1-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.977026Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "logsEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Enable logs",
                    "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                  },
                  "allowedValues": [
                    "True",
                    "False"
                  ],
                  "defaultValue": "True"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.DesktopVirtualization/workspaces"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/diagnosticSettings",
                    "name": "[parameters('profileName')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                          "equals": "[parameters('logAnalytics')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "logAnalytics": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "profileName": {
                              "type": "String"
                            },
                            "logsEnabled": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DesktopVirtualization/workspaces/providers/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                              "location": "[parameters('location')]",
                              "dependsOn": [],
                              "properties": {
                                "workspaceId": "[parameters('logAnalytics')]",
                                "logs": [
                                  {
                                    "category": "Checkpoint",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Error",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Management",
                                    "enabled": "[parameters('logsEnabled')]"
                                  },
                                  {
                                    "category": "Feed",
                                    "enabled": "[parameters('logsEnabled')]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "profileName": {
                            "value": "[parameters('profileName')]"
                          },
                          "logsEnabled": {
                            "value": "[parameters('logsEnabled')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Diagnostics-WVDWorkspace",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.872569Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.872569Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-firewallpolicy": {
            "properties": {
              "displayName": "Deploy Azure Firewall Manager policy in the subscription",
              "policyType": "Custom",
              "mode": "All",
              "description": "Deploys Azure Firewall Manager policy in subscription where the policy is assigned.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.001798Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "fwpolicy": {
                  "type": "Object",
                  "metadata": {
                    "displayName": "fwpolicy",
                    "description": "Object describing Azure Firewall Policy"
                  },
                  "defaultValue": {}
                },
                "fwPolicyRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "fwPolicyRegion",
                    "description": "Select Azure region for Azure Firewall Policy",
                    "strongType": "location"
                  }
                },
                "rgName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "rgName",
                    "description": "Provide name for resource group."
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Resources/subscriptions"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Network/firewallPolicies",
                    "deploymentScope": "subscription",
                    "existenceScope": "resourceGroup",
                    "resourceGroupName": "[parameters('rgName')]",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "location": "uksouth",
                      "properties": {
                        "mode": "Incremental",
                        "parameters": {
                          "rgName": {
                            "value": "[parameters('rgName')]"
                          },
                          "fwPolicy": {
                            "value": "[parameters('fwPolicy')]"
                          },
                          "fwPolicyRegion": {
                            "value": "[parameters('fwPolicyRegion')]"
                          }
                        },
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "rgName": {
                              "type": "String"
                            },
                            "fwPolicy": {
                              "type": "object"
                            },
                            "fwPolicyRegion": {
                              "type": "String"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/resourceGroups",
                              "apiVersion": "2018-05-01",
                              "name": "[parameters('rgName')]",
                              "location": "[deployment().location]",
                              "properties": {}
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2018-05-01",
                              "name": "fwpolicies",
                              "resourceGroup": "[parameters('rgName')]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {},
                                  "variables": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/firewallPolicies",
                                      "apiVersion": "2019-09-01",
                                      "name": "[parameters('fwpolicy').firewallPolicyName]",
                                      "location": "[parameters('fwpolicy').location]",
                                      "dependsOn": [],
                                      "tags": {},
                                      "properties": {},
                                      "resources": [
                                        {
                                          "type": "ruleGroups",
                                          "apiVersion": "2019-09-01",
                                          "name": "[parameters('fwpolicy').ruleGroups.name]",
                                          "dependsOn": [
                                            "[resourceId('Microsoft.Network/firewallPolicies',parameters('fwpolicy').firewallPolicyName)]"
                                          ],
                                          "properties": {
                                            "priority": "[parameters('fwpolicy').ruleGroups.properties.priority]",
                                            "rules": "[parameters('fwpolicy').ruleGroups.properties.rules]"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "outputs": {}
                                }
                              }
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-FirewallPolicy",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.919446Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.919446Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-logicapp-tls": {
            "properties": {
              "displayName": "Configure Logic apps to use the latest TLS version",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Periodically, newer versions are released for TLS either due to security flaws, include additional functionality, and enhance speed. Upgrade to the latest TLS version for Function apps to take advantage of security fixes, if any, and/or new functionalities of the latest version.",
              "metadata": {
                "version": "1.0.0",
                "category": "Logic Apps",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.8834426Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Web/sites"
                    },
                    {
                      "field": "kind",
                      "contains": "workflowapp"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Web/sites/config",
                    "name": "web",
                    "existenceCondition": {
                      "field": "Microsoft.Web/sites/config/minTlsVersion",
                      "equals": "1.2"
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/de139f84-1756-47ae-9be6-808fbbe84772"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "siteName": {
                            "value": "[field('name')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "siteName": {
                              "type": "string"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2021-02-01",
                              "name": "[concat(parameters('siteName'), '/web')]",
                              "properties": {
                                "minTlsVersion": "1.2"
                              }
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-LogicApp-TLS",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-LogicApp-TLS",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8569417Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8569417Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-mdfc-arc-sql-dcr-association": {
            "properties": {
              "displayName": "[Deprecated]: Configure Arc-enabled SQL Servers with DCR Association to Microsoft Defender for SQL user-defined DCR",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Policy is deprecated as the built-in policy now supports bringing your own UAMI and DCR. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/2227e1f1-23dd-4c3a-85a9-7024a401d8b2.html",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "2227e1f1-23dd-4c3a-85a9-7024a401d8b2",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9915991Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "workspaceRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Workspace region",
                    "description": "Region of the Log Analytics workspace destination for the Data Collection Rule.",
                    "strongType": "location"
                  }
                },
                "dcrName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Name",
                    "description": "Name of the Data Collection Rule."
                  }
                },
                "dcrResourceGroup": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Resource Group",
                    "description": "Resource Group of the Data Collection Rule."
                  }
                },
                "dcrId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Id",
                    "description": "Id of the Data Collection Rule."
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HybridCompute/machines"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/osName",
                      "equals": "Windows"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/mssqlDiscovered",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                    "name": "MicrosoftDefenderForSQL-RulesAssociation",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceGroup": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "workspaceRegion": {
                              "type": "string"
                            },
                            "dcrName": {
                              "type": "string"
                            },
                            "dcrResourceGroup": {
                              "type": "string"
                            },
                            "dcrId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "locationLongNameToShortMap": {
                              "australiacentral": "CAU",
                              "australiaeast": "EAU",
                              "australiasoutheast": "SEAU",
                              "brazilsouth": "CQ",
                              "canadacentral": "CCA",
                              "canadaeast": "CCA",
                              "centralindia": "CIN",
                              "centralus": "CUS",
                              "eastasia": "EA",
                              "eastus2euap": "eus2p",
                              "eastus": "EUS",
                              "eastus2": "EUS2",
                              "francecentral": "PAR",
                              "germanywestcentral": "DEWC",
                              "japaneast": "EJP",
                              "jioindiawest": "CIN",
                              "koreacentral": "SE",
                              "koreasouth": "SE",
                              "northcentralus": "NCUS",
                              "northeurope": "NEU",
                              "norwayeast": "NOE",
                              "southafricanorth": "JNB",
                              "southcentralus": "SCUS",
                              "southeastasia": "SEA",
                              "southindia": "CIN",
                              "swedencentral": "SEC",
                              "switzerlandnorth": "CHN",
                              "switzerlandwest": "CHW",
                              "uaenorth": "DXB",
                              "uksouth": "SUK",
                              "ukwest": "WUK",
                              "westcentralus": "WCUS",
                              "westeurope": "WEU",
                              "westindia": "CIN",
                              "westus": "WUS",
                              "westus2": "WUS2"
                            },
                            "locationCode": "[if(contains(variables('locationLongNameToShortMap'), parameters('workspaceRegion')), variables('locationLongNameToShortMap')[parameters('workspaceRegion')], parameters('workspaceRegion'))]",
                            "subscriptionId": "[subscription().subscriptionId]",
                            "defaultRGName": "[parameters('resourceGroup')]",
                            "dcrName": "[parameters('dcrName')]",
                            "dcrId": "[parameters('dcrId')]",
                            "dcraName": "[concat(parameters('vmName'),'/Microsoft.Insights/MicrosoftDefenderForSQL-RulesAssociation')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.HybridCompute/machines/providers/dataCollectionRuleAssociations",
                              "name": "[variables('dcraName')]",
                              "apiVersion": "2021-04-01",
                              "properties": {
                                "description": "Configure association between Arc-enabled SQL Server and the Microsoft Defender for SQL user-defined DCR. Deleting this association will break the detection of security vulnerabilities for this Arc-enabled SQL Server.",
                                "dataCollectionRuleId": "[variables('dcrId')]"
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "resourceGroup": {
                            "value": "[parameters('dcrResourceGroup')]"
                          },
                          "vmName": {
                            "value": "[field('name')]"
                          },
                          "workspaceRegion": {
                            "value": "[parameters('workspaceRegion')]"
                          },
                          "dcrName": {
                            "value": "[parameters('dcrName')]"
                          },
                          "dcrResourceGroup": {
                            "value": "[parameters('dcrResourceGroup')]"
                          },
                          "dcrId": {
                            "value": "[parameters('dcrId')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MDFC-Arc-SQL-DCR-Association",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-MDFC-Arc-SQL-DCR-Association",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9038204Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9038204Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-mdfc-arc-sql-defendersql-dcr": {
            "properties": {
              "displayName": "[Deprecated]: Configure Arc-enabled SQL Servers to auto install Microsoft Defender for SQL and DCR with a user-defined LAW",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Policy is deprecated as the built-in policy now supports bringing your own UAMI and DCR. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/63d03cbd-47fd-4ee1-8a1c-9ddf07303de0.html",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "63d03cbd-47fd-4ee1-8a1c-9ddf07303de0",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9856776Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "userWorkspaceResourceId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Workspace Resource Id",
                    "description": "Workspace resource Id of the Log Analytics workspace destination for the Data Collection Rule.",
                    "strongType": "omsWorkspace"
                  }
                },
                "workspaceRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Workspace region",
                    "description": "Region of the Log Analytics workspace destination for the Data Collection Rule.",
                    "strongType": "location"
                  }
                },
                "enableCollectionOfSqlQueriesForSecurityResearch": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "Enable collection of SQL queries for security research",
                    "description": "Enable or disable the collection of SQL queries for security research."
                  },
                  "allowedValues": [
                    true,
                    false
                  ],
                  "defaultValue": false
                },
                "dcrName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Name",
                    "description": "Name of the Data Collection Rule."
                  }
                },
                "dcrResourceGroup": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Resource Group",
                    "description": "Resource Group of the Data Collection Rule."
                  }
                },
                "dcrId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Id",
                    "description": "Id of the Data Collection Rule."
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.HybridCompute/machines"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/osName",
                      "equals": "Windows"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/mssqlDiscovered",
                      "equals": "true"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/dataCollectionRules",
                    "deploymentScope": "subscription",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "existenceScope": "subscription",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "location",
                          "equals": "[parameters('workspaceRegion')]"
                        },
                        {
                          "field": "name",
                          "equals": "[parameters('dcrName')]"
                        }
                      ]
                    },
                    "deployment": {
                      "location": "eastus",
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceGroup": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "userWorkspaceResourceId": {
                              "type": "string"
                            },
                            "workspaceRegion": {
                              "type": "string"
                            },
                            "enableCollectionOfSqlQueriesForSecurityResearch": {
                              "type": "bool"
                            },
                            "dcrName": {
                              "type": "string"
                            },
                            "dcrResourceGroup": {
                              "type": "string"
                            },
                            "dcrId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "locationLongNameToShortMap": {
                              "australiacentral": "CAU",
                              "australiaeast": "EAU",
                              "australiasoutheast": "SEAU",
                              "brazilsouth": "CQ",
                              "canadacentral": "CCA",
                              "canadaeast": "CCA",
                              "centralindia": "CIN",
                              "centralus": "CUS",
                              "eastasia": "EA",
                              "eastus2euap": "eus2p",
                              "eastus": "EUS",
                              "eastus2": "EUS2",
                              "francecentral": "PAR",
                              "germanywestcentral": "DEWC",
                              "japaneast": "EJP",
                              "jioindiawest": "CIN",
                              "koreacentral": "SE",
                              "koreasouth": "SE",
                              "northcentralus": "NCUS",
                              "northeurope": "NEU",
                              "norwayeast": "NOE",
                              "southafricanorth": "JNB",
                              "southcentralus": "SCUS",
                              "southeastasia": "SEA",
                              "southindia": "CIN",
                              "swedencentral": "SEC",
                              "switzerlandnorth": "CHN",
                              "switzerlandwest": "CHW",
                              "uaenorth": "DXB",
                              "uksouth": "SUK",
                              "ukwest": "WUK",
                              "westcentralus": "WCUS",
                              "westeurope": "WEU",
                              "westindia": "CIN",
                              "westus": "WUS",
                              "westus2": "WUS2"
                            },
                            "locationCode": "[if(contains(variables('locationLongNameToShortMap'), parameters('workspaceRegion')), variables('locationLongNameToShortMap')[parameters('workspaceRegion')], parameters('workspaceRegion'))]",
                            "subscriptionId": "[subscription().subscriptionId]",
                            "defaultRGName": "[parameters('resourceGroup')]",
                            "defaultRGLocation": "[parameters('workspaceRegion')]",
                            "dcrName": "[parameters('dcrName')]",
                            "dcrId": "[parameters('dcrId')]",
                            "dcraName": "[concat(parameters('vmName'),'/Microsoft.Insights/MicrosoftDefenderForSQL-RulesAssociation')]",
                            "deployDataCollectionRules": "[concat('deployDataCollectionRules-', uniqueString(deployment().name))]",
                            "deployDataCollectionRulesAssociation": "[concat('deployDataCollectionRulesAssociation-', uniqueString(deployment().name))]"
                          },
                          "resources": [
                            {
                              "condition": "[empty(parameters('dcrResourceGroup'))]",
                              "type": "Microsoft.Resources/resourceGroups",
                              "name": "[variables('defaultRGName')]",
                              "apiVersion": "2022-09-01",
                              "location": "[variables('defaultRGLocation')]",
                              "tags": {
                                "createdBy": "MicrosoftDefenderForSQL"
                              }
                            },
                            {
                              "condition": "[empty(parameters('dcrId'))]",
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables('deployDataCollectionRules')]",
                              "apiVersion": "2022-09-01",
                              "resourceGroup": "[variables('defaultRGName')]",
                              "dependsOn": [
                                "[variables('defaultRGName')]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "parameters": {
                                  "defaultRGLocation": {
                                    "value": "[variables('defaultRGLocation')]"
                                  },
                                  "workspaceResourceId": {
                                    "value": "[parameters('userWorkspaceResourceId')]"
                                  },
                                  "dcrName": {
                                    "value": "[variables('dcrName')]"
                                  },
                                  "dcrId": {
                                    "value": "[variables('dcrId')]"
                                  },
                                  "enableCollectionOfSqlQueriesForSecurityResearch": {
                                    "value": "[parameters('enableCollectionOfSqlQueriesForSecurityResearch')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "defaultRGLocation": {
                                      "type": "string"
                                    },
                                    "workspaceResourceId": {
                                      "type": "string"
                                    },
                                    "dcrName": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "enableCollectionOfSqlQueriesForSecurityResearch": {
                                      "type": "bool"
                                    }
                                  },
                                  "variables": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "name": "[parameters('dcrName')]",
                                      "apiVersion": "2021-04-01",
                                      "location": "[parameters('defaultRGLocation')]",
                                      "tags": {
                                        "createdBy": "MicrosoftDefenderForSQL"
                                      },
                                      "properties": {
                                        "description": "Data collection rule for Microsoft Defender for SQL. Deleting this rule will break the detection of security vulnerabilities.",
                                        "dataSources": {
                                          "extensions": [
                                            {
                                              "extensionName": "MicrosoftDefenderForSQL",
                                              "name": "MicrosoftDefenderForSQL",
                                              "streams": [
                                                "Microsoft-DefenderForSqlAlerts",
                                                "Microsoft-DefenderForSqlLogins",
                                                "Microsoft-DefenderForSqlTelemetry",
                                                "Microsoft-DefenderForSqlScanEvents",
                                                "Microsoft-DefenderForSqlScanResults"
                                              ],
                                              "extensionSettings": {
                                                "enableCollectionOfSqlQueriesForSecurityResearch": "[parameters('enableCollectionOfSqlQueriesForSecurityResearch')]"
                                              }
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                                              "name": "LogAnalyticsDest"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-DefenderForSqlAlerts",
                                              "Microsoft-DefenderForSqlLogins",
                                              "Microsoft-DefenderForSqlTelemetry",
                                              "Microsoft-DefenderForSqlScanEvents",
                                              "Microsoft-DefenderForSqlScanResults"
                                            ],
                                            "destinations": [
                                              "LogAnalyticsDest"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables('deployDataCollectionRulesAssociation')]",
                              "apiVersion": "2022-09-01",
                              "resourceGroup": "[parameters('resourceGroup')]",
                              "dependsOn": [
                                "[variables('deployDataCollectionRules')]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "parameters": {
                                  "dcrId": {
                                    "value": "[variables('dcrId')]"
                                  },
                                  "dcraName": {
                                    "value": "[variables('dcraName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "dcraName": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.HybridCompute/machines/providers/dataCollectionRuleAssociations",
                                      "name": "[parameters('dcraName')]",
                                      "apiVersion": "2021-04-01",
                                      "properties": {
                                        "description": "Configure association between Arc-enabled SQL Server and the Microsoft Defender for SQL user-defined DCR. Deleting this association will break the detection of security vulnerabilities for this Arc-enabled SQL Server.",
                                        "dataCollectionRuleId": "[parameters('dcrId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "resourceGroup": {
                            "value": "[parameters('dcrResourceGroup')]"
                          },
                          "vmName": {
                            "value": "[field('name')]"
                          },
                          "userWorkspaceResourceId": {
                            "value": "[parameters('userWorkspaceResourceId')]"
                          },
                          "workspaceRegion": {
                            "value": "[parameters('workspaceRegion')]"
                          },
                          "enableCollectionOfSqlQueriesForSecurityResearch": {
                            "value": "[parameters('enableCollectionOfSqlQueriesForSecurityResearch')]"
                          },
                          "dcrName": {
                            "value": "[parameters('dcrName')]"
                          },
                          "dcrResourceGroup": {
                            "value": "[parameters('dcrResourceGroup')]"
                          },
                          "dcrId": {
                            "value": "[parameters('dcrId')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MDFC-Arc-Sql-DefenderSQL-DCR",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-MDFC-Arc-Sql-DefenderSQL-DCR",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-mdfc-sql-ama": {
            "properties": {
              "displayName": "[Deprecated]: Configure SQL Virtual Machines to automatically install Azure Monitor Agent",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Policy is deprecated as the built-in policy now supports bringing your own UAMI and DCR. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/f91991d1-5383-4c95-8ee5-5ac423dd8bb1.html",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "f91991d1-5383-4c95-8ee5-5ac423dd8bb1",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9751321Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "identityResourceGroup": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Identity Resource Group",
                    "description": "The name of the resource group created by the policy."
                  },
                  "defaultValue": ""
                },
                "userAssignedIdentityName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "User Assigned Managed Identity Name",
                    "description": "The name of the user assigned managed identity."
                  },
                  "defaultValue": ""
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                      "like": "Windows*"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "equals": "microsoftsqlserver"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "evaluationDelay": "AfterProvisioning",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                    ],
                    "name": "[concat(field('fullName'), '/AzureMonitorWindowsAgent')]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "AzureMonitorWindowsAgent"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.Monitor"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "in": [
                            "Succeeded",
                            "Provisioning succeeded"
                          ]
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "userAssignedManagedIdentity": {
                              "type": "string"
                            },
                            "userAssignedIdentityName": {
                              "type": "string"
                            },
                            "identityResourceGroup": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "extensionName": "AzureMonitorWindowsAgent",
                            "extensionPublisher": "Microsoft.Azure.Monitor",
                            "extensionType": "AzureMonitorWindowsAgent",
                            "extensionTypeHandlerVersion": "1.2"
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters('vmName'), '/', variables('extensionName'))]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters('location')]",
                              "tags": {
                                "createdBy": "MicrosoftDefenderForSQL"
                              },
                              "apiVersion": "2023-03-01",
                              "properties": {
                                "publisher": "[variables('extensionPublisher')]",
                                "type": "[variables('extensionType')]",
                                "typeHandlerVersion": "[variables('extensionTypeHandlerVersion')]",
                                "autoUpgradeMinorVersion": true,
                                "enableAutomaticUpgrade": true,
                                "settings": {
                                  "authentication": {
                                    "managedIdentity": {
                                      "identifier-name": "mi_res_id",
                                      "identifier-value": "[parameters('userAssignedManagedIdentity')]"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field('name')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "userAssignedManagedIdentity": {
                            "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', trim(parameters('identityResourceGroup')), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', trim(parameters('userAssignedIdentityName')))]"
                          },
                          "userAssignedIdentityName": {
                            "value": "[parameters('userAssignedIdentityName')]"
                          },
                          "identityResourceGroup": {
                            "value": "[parameters('identityResourceGroup')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MDFC-SQL-AMA",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-MDFC-SQL-AMA",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-mdfc-sql-defendersql": {
            "properties": {
              "displayName": "[Deprecated]: Configure SQL Virtual Machines to automatically install Microsoft Defender for SQL",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Policy is deprecated as the built-in policy now supports bringing your own UAMI and DCR. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/ddca0ddc-4e9d-4bbb-92a1-f7c4dd7ef7ce.html",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Security Center",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "ddca0ddc-4e9d-4bbb-92a1-f7c4dd7ef7ce",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:31.1245188Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "workspaceRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Workspace region",
                    "description": "Region of the Log Analytics workspace destination for the Data Collection Rule.",
                    "strongType": "location"
                  }
                },
                "dcrName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Name",
                    "description": "Name of the Data Collection Rule."
                  }
                },
                "dcrResourceGroup": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Resource Group",
                    "description": "Resource Group of the Data Collection Rule."
                  }
                },
                "dcrId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Id",
                    "description": "Id of the Data Collection Rule."
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                      "like": "Windows*"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "equals": "microsoftsqlserver"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(field('fullName'), '/MicrosoftDefenderForSQL')]",
                    "evaluationDelay": "AfterProvisioning",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "AdvancedThreatProtection.Windows"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.AzureDefenderForSQL"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                          "in": [
                            "Succeeded",
                            "Provisioning succeeded"
                          ]
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "workspaceRegion": {
                              "type": "string"
                            },
                            "dcrResourceGroup": {
                              "type": "string"
                            },
                            "dcrName": {
                              "type": "string"
                            },
                            "dcrId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "locationLongNameToShortMap": {
                              "australiacentral": "CAU",
                              "australiaeast": "EAU",
                              "australiasoutheast": "SEAU",
                              "brazilsouth": "CQ",
                              "canadacentral": "CCA",
                              "canadaeast": "CCA",
                              "centralindia": "CIN",
                              "centralus": "CUS",
                              "eastasia": "EA",
                              "eastus2euap": "eus2p",
                              "eastus": "EUS",
                              "eastus2": "EUS2",
                              "francecentral": "PAR",
                              "germanywestcentral": "DEWC",
                              "japaneast": "EJP",
                              "jioindiawest": "CIN",
                              "koreacentral": "SE",
                              "koreasouth": "SE",
                              "northcentralus": "NCUS",
                              "northeurope": "NEU",
                              "norwayeast": "NOE",
                              "southafricanorth": "JNB",
                              "southcentralus": "SCUS",
                              "southeastasia": "SEA",
                              "southindia": "CIN",
                              "swedencentral": "SEC",
                              "switzerlandnorth": "CHN",
                              "switzerlandwest": "CHW",
                              "uaenorth": "DXB",
                              "uksouth": "SUK",
                              "ukwest": "WUK",
                              "westcentralus": "WCUS",
                              "westeurope": "WEU",
                              "westindia": "CIN",
                              "westus": "WUS",
                              "westus2": "WUS2"
                            },
                            "actualLocation": "[if(empty(parameters('workspaceRegion')), parameters('location'), parameters('workspaceRegion'))]",
                            "locationCode": "[if(contains(variables('locationLongNameToShortMap'), variables('actualLocation')), variables('locationLongNameToShortMap')[variables('actualLocation')], variables('actualLocation'))]",
                            "subscriptionId": "[subscription().subscriptionId]",
                            "defaultRGName": "[parameters('dcrResourceGroup')]",
                            "dcrName": "[parameters('dcrName')]",
                            "dcrId": "[parameters('dcrId')]",
                            "dcraName": "[concat(parameters('vmName'),'/Microsoft.Insights/MicrosoftDefenderForSQL-RulesAssociation')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "name": "[concat(parameters('vmName'), '/', 'MicrosoftDefenderForSQL')]",
                              "apiVersion": "2023-03-01",
                              "location": "[parameters('location')]",
                              "tags": {
                                "createdBy": "MicrosoftDefenderForSQL"
                              },
                              "properties": {
                                "publisher": "Microsoft.Azure.AzureDefenderForSQL",
                                "type": "AdvancedThreatProtection.Windows",
                                "typeHandlerVersion": "2.0",
                                "autoUpgradeMinorVersion": true,
                                "enableAutomaticUpgrade": true
                              },
                              "dependsOn": [
                                "[extensionResourceId(concat('/subscriptions/', variables('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Compute/virtualMachines/', parameters('vmName')), 'Microsoft.Insights/dataCollectionRuleAssociations','MicrosoftDefenderForSQL-RulesAssociation')]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                              "name": "[variables('dcraName')]",
                              "apiVersion": "2021-04-01",
                              "properties": {
                                "description": "Configure association between SQL Virtual Machine and the Microsoft Defender for SQL DCR. Deleting this association will break the detection of security vulnerabilities for this SQL Virtual Machine.",
                                "dataCollectionRuleId": "[variables('dcrId')]"
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "location": {
                            "value": "[field('location')]"
                          },
                          "vmName": {
                            "value": "[field('name')]"
                          },
                          "workspaceRegion": {
                            "value": "[parameters('workspaceRegion')]"
                          },
                          "dcrResourceGroup": {
                            "value": "[parameters('dcrResourceGroup')]"
                          },
                          "dcrName": {
                            "value": "[parameters('dcrName')]"
                          },
                          "dcrId": {
                            "value": "[parameters('dcrId')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MDFC-SQL-DefenderSQL",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-MDFC-SQL-DefenderSQL",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:31.0912897Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:31.0912897Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-mdfc-sql-defendersql-dcr": {
            "properties": {
              "displayName": "[Deprecated]: Configure SQL Virtual Machines to auto install Microsoft Defender for SQL and DCR with a user-defined LAW",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Policy is deprecated as the built-in policy now supports bringing your own UAMI and DCR. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/04754ef9-9ae3-4477-bf17-86ef50026304.html",
              "metadata": {
                "version": "1.0.1-deprecated",
                "category": "Security Center",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "04754ef9-9ae3-4477-bf17-86ef50026304",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.055623Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "userWorkspaceResourceId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Workspace Resource Id",
                    "description": "Workspace resource Id of the Log Analytics workspace destination for the Data Collection Rule.",
                    "strongType": "omsWorkspace"
                  }
                },
                "workspaceRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Workspace region",
                    "description": "Region of the Log Analytics workspace destination for the Data Collection Rule.",
                    "strongType": "location"
                  }
                },
                "enableCollectionOfSqlQueriesForSecurityResearch": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "Enable collection of SQL queries for security research",
                    "description": "Enable or disable the collection of SQL queries for security research."
                  },
                  "allowedValues": [
                    true,
                    false
                  ],
                  "defaultValue": false
                },
                "dcrName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Name",
                    "description": "Name of the Data Collection Rule."
                  }
                },
                "dcrResourceGroup": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Resource Group",
                    "description": "Resource Group of the Data Collection Rule."
                  }
                },
                "dcrId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Id",
                    "description": "Id of the Data Collection Rule."
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                      "like": "Windows*"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "equals": "microsoftsqlserver"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Insights/dataCollectionRules",
                    "evaluationDelay": "AfterProvisioning",
                    "deploymentScope": "subscription",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "existenceScope": "subscription",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "location",
                          "equals": "[parameters('workspaceRegion')]"
                        },
                        {
                          "field": "name",
                          "equals": "[parameters('dcrName')]"
                        }
                      ]
                    },
                    "deployment": {
                      "location": "eastus",
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceGroup": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "userWorkspaceResourceId": {
                              "type": "string"
                            },
                            "workspaceRegion": {
                              "type": "string"
                            },
                            "enableCollectionOfSqlQueriesForSecurityResearch": {
                              "type": "bool"
                            },
                            "dcrName": {
                              "type": "string"
                            },
                            "dcrResourceGroup": {
                              "type": "string"
                            },
                            "dcrId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "locationLongNameToShortMap": {
                              "australiacentral": "CAU",
                              "australiaeast": "EAU",
                              "australiasoutheast": "SEAU",
                              "brazilsouth": "CQ",
                              "canadacentral": "CCA",
                              "canadaeast": "CCA",
                              "centralindia": "CIN",
                              "centralus": "CUS",
                              "eastasia": "EA",
                              "eastus2euap": "eus2p",
                              "eastus": "EUS",
                              "eastus2": "EUS2",
                              "francecentral": "PAR",
                              "germanywestcentral": "DEWC",
                              "japaneast": "EJP",
                              "jioindiawest": "CIN",
                              "koreacentral": "SE",
                              "koreasouth": "SE",
                              "northcentralus": "NCUS",
                              "northeurope": "NEU",
                              "norwayeast": "NOE",
                              "southafricanorth": "JNB",
                              "southcentralus": "SCUS",
                              "southeastasia": "SEA",
                              "southindia": "CIN",
                              "swedencentral": "SEC",
                              "switzerlandnorth": "CHN",
                              "switzerlandwest": "CHW",
                              "uaenorth": "DXB",
                              "uksouth": "SUK",
                              "ukwest": "WUK",
                              "westcentralus": "WCUS",
                              "westeurope": "WEU",
                              "westindia": "CIN",
                              "westus": "WUS",
                              "westus2": "WUS2"
                            },
                            "locationCode": "[if(contains(variables('locationLongNameToShortMap'), parameters('workspaceRegion')), variables('locationLongNameToShortMap')[parameters('workspaceRegion')], parameters('workspaceRegion'))]",
                            "subscriptionId": "[subscription().subscriptionId]",
                            "defaultRGName": "[parameters('dcrResourceGroup')]",
                            "defaultRGLocation": "[parameters('workspaceRegion')]",
                            "dcrName": "[parameters('dcrName')]",
                            "dcrId": "[parameters('dcrId')]",
                            "dcraName": "[concat(parameters('vmName'),'/Microsoft.Insights/MicrosoftDefenderForSQL-RulesAssociation')]",
                            "deployDataCollectionRules": "[concat('deployDataCollectionRules-', uniqueString(deployment().name))]",
                            "deployDataCollectionRulesAssociation": "[concat('deployDataCollectionRulesAssociation-', uniqueString(deployment().name))]",
                            "deployDefenderForSQL": "[concat('deployDefenderForSQL-', uniqueString(deployment().name))]"
                          },
                          "resources": [
                            {
                              "condition": "[empty(parameters('dcrResourceGroup'))]",
                              "type": "Microsoft.Resources/resourceGroups",
                              "name": "[variables('defaultRGName')]",
                              "apiVersion": "2022-09-01",
                              "location": "[variables('defaultRGLocation')]",
                              "tags": {
                                "createdBy": "MicrosoftDefenderForSQL"
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables('deployDefenderForSQL')]",
                              "apiVersion": "2022-09-01",
                              "resourceGroup": "[parameters('resourceGroup')]",
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "vmName": {
                                    "value": "[parameters('vmName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "vmName": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.Compute/virtualMachines/extensions",
                                      "name": "[concat(parameters('vmName'), '/', 'MicrosoftDefenderForSQL')]",
                                      "apiVersion": "2023-03-01",
                                      "location": "[parameters('location')]",
                                      "tags": {
                                        "createdBy": "MicrosoftDefenderForSQL"
                                      },
                                      "properties": {
                                        "publisher": "Microsoft.Azure.AzureDefenderForSQL",
                                        "type": "AdvancedThreatProtection.Windows",
                                        "typeHandlerVersion": "2.0",
                                        "autoUpgradeMinorVersion": true,
                                        "enableAutomaticUpgrade": true
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[empty(parameters('dcrId'))]",
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables('deployDataCollectionRules')]",
                              "apiVersion": "2022-09-01",
                              "resourceGroup": "[variables('defaultRGName')]",
                              "dependsOn": [
                                "[variables('defaultRGName')]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "parameters": {
                                  "defaultRGLocation": {
                                    "value": "[variables('defaultRGLocation')]"
                                  },
                                  "workspaceResourceId": {
                                    "value": "[parameters('userWorkspaceResourceId')]"
                                  },
                                  "dcrName": {
                                    "value": "[variables('dcrName')]"
                                  },
                                  "dcrId": {
                                    "value": "[variables('dcrId')]"
                                  },
                                  "enableCollectionOfSqlQueriesForSecurityResearch": {
                                    "value": "[parameters('enableCollectionOfSqlQueriesForSecurityResearch')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "defaultRGLocation": {
                                      "type": "string"
                                    },
                                    "workspaceResourceId": {
                                      "type": "string"
                                    },
                                    "dcrName": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "enableCollectionOfSqlQueriesForSecurityResearch": {
                                      "type": "bool"
                                    }
                                  },
                                  "variables": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "name": "[parameters('dcrName')]",
                                      "apiVersion": "2021-04-01",
                                      "location": "[parameters('defaultRGLocation')]",
                                      "tags": {
                                        "createdBy": "MicrosoftDefenderForSQL"
                                      },
                                      "properties": {
                                        "description": "Data collection rule for Microsoft Defender for SQL. Deleting this rule will break the detection of security vulnerabilities.",
                                        "dataSources": {
                                          "extensions": [
                                            {
                                              "extensionName": "MicrosoftDefenderForSQL",
                                              "name": "MicrosoftDefenderForSQL",
                                              "streams": [
                                                "Microsoft-DefenderForSqlAlerts",
                                                "Microsoft-DefenderForSqlLogins",
                                                "Microsoft-DefenderForSqlTelemetry",
                                                "Microsoft-DefenderForSqlScanEvents",
                                                "Microsoft-DefenderForSqlScanResults"
                                              ],
                                              "extensionSettings": {
                                                "enableCollectionOfSqlQueriesForSecurityResearch": "[parameters('enableCollectionOfSqlQueriesForSecurityResearch')]"
                                              }
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                                              "name": "LogAnalyticsDest"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-DefenderForSqlAlerts",
                                              "Microsoft-DefenderForSqlLogins",
                                              "Microsoft-DefenderForSqlTelemetry",
                                              "Microsoft-DefenderForSqlScanEvents",
                                              "Microsoft-DefenderForSqlScanResults"
                                            ],
                                            "destinations": [
                                              "LogAnalyticsDest"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "name": "[variables('deployDataCollectionRulesAssociation')]",
                              "apiVersion": "2022-09-01",
                              "resourceGroup": "[parameters('resourceGroup')]",
                              "dependsOn": [
                                "[variables('deployDataCollectionRules')]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "parameters": {
                                  "dcrId": {
                                    "value": "[variables('dcrId')]"
                                  },
                                  "dcraName": {
                                    "value": "[variables('dcraName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "dcraName": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                      "name": "[parameters('dcraName')]",
                                      "apiVersion": "2021-04-01",
                                      "properties": {
                                        "description": "Configure association between SQL Virtual Machine and the Microsoft Defender for SQL user-defined DCR. Deleting this association will break the detection of security vulnerabilities for this SQL Virtual Machine.",
                                        "dataCollectionRuleId": "[parameters('dcrId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "resourceGroup": {
                            "value": "[resourceGroup().name]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "vmName": {
                            "value": "[field('name')]"
                          },
                          "userWorkspaceResourceId": {
                            "value": "[parameters('userWorkspaceResourceId')]"
                          },
                          "workspaceRegion": {
                            "value": "[parameters('workspaceRegion')]"
                          },
                          "enableCollectionOfSqlQueriesForSecurityResearch": {
                            "value": "[parameters('enableCollectionOfSqlQueriesForSecurityResearch')]"
                          },
                          "dcrName": {
                            "value": "[parameters('dcrName')]"
                          },
                          "dcrResourceGroup": {
                            "value": "[parameters('dcrResourceGroup')]"
                          },
                          "dcrId": {
                            "value": "[parameters('dcrId')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MDFC-SQL-DefenderSQL-DCR",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-MDFC-SQL-DefenderSQL-DCR",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9663203Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9663203Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-mysql-sslenforcement": {
            "properties": {
              "displayName": "Azure Database for MySQL server deploy a specific min TLS version and enforce SSL.",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
              "metadata": {
                "version": "1.1.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9334905Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect minimum TLS version Azure Database for MySQL server",
                    "description": "Enable or disable the execution of the policy minimum TLS version Azure Database for MySQL server"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "minimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select version minimum TLS for MySQL server",
                    "description": "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_0",
                    "TLS1_1",
                    "TLSEnforcementDisabled"
                  ],
                  "defaultValue": "TLS1_2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DBforMySQL/servers"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                          "notEquals": "Enabled"
                        },
                        {
                          "field": "Microsoft.DBforMySQL/servers/minimalTlsVersion",
                          "notequals": "[parameters('minimalTlsVersion')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.DBforMySQL/servers",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                          "equals": "Enabled"
                        },
                        {
                          "field": "Microsoft.DBforMySQL/servers/minimalTlsVersion",
                          "equals": "[parameters('minimalTlsVersion')]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "minimalTlsVersion": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DBforMySQL/servers",
                              "apiVersion": "2017-12-01",
                              "name": "[concat(parameters('resourceName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "sslEnforcement": "[if(equals(parameters('minimalTlsVersion'), 'TLSEnforcementDisabled'),'Disabled', 'Enabled')]",
                                "minimalTlsVersion": "[parameters('minimalTlsVersion')]"
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "minimalTlsVersion": {
                            "value": "[parameters('minimalTlsVersion')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-MySQL-sslEnforcement",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8100683Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8100683Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-nsg-flowlogs": {
            "properties": {
              "displayName": "[Deprecated] Deploys NSG flow logs and traffic analytics",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "[Deprecated] Deprecated by built-in policy. Deploys NSG flow logs and traffic analytics to a storageaccountid with a specified retention period. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/e920df7f-9a64-4066-9b58-52684c02a091.html",
              "metadata": {
                "deprecated": true,
                "supersededBy": "e920df7f-9a64-4066-9b58-52684c02a091",
                "version": "1.0.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4499807Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "retention": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "Retention"
                  },
                  "defaultValue": 5
                },
                "storageAccountResourceId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Storage Account Resource Id",
                    "strongType": "Microsoft.Storage/storageAccounts"
                  }
                },
                "trafficAnalyticsInterval": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "Traffic Analytics processing interval mins (10/60)"
                  },
                  "defaultValue": 60
                },
                "flowAnalyticsEnabled": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "Enable Traffic Analytics"
                  },
                  "defaultValue": false
                },
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "strongType": "omsWorkspace",
                    "displayName": "Resource ID of Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                  },
                  "defaultValue": ""
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Network/networkSecurityGroups"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Network/networkWatchers/flowLogs",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "resourceGroupName": "NetworkWatcherRG",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
                          "equals": "[parameters('flowAnalyticsEnabled')]"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "parameters": {
                          "networkSecurityGroupName": {
                            "value": "[field('name')]"
                          },
                          "resourceGroupName": {
                            "value": "[resourceGroup().name]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "storageAccountResourceId": {
                            "value": "[parameters('storageAccountResourceId')]"
                          },
                          "retention": {
                            "value": "[parameters('retention')]"
                          },
                          "flowAnalyticsEnabled": {
                            "value": "[parameters('flowAnalyticsEnabled')]"
                          },
                          "trafficAnalyticsInterval": {
                            "value": "[parameters('trafficAnalyticsInterval')]"
                          },
                          "logAnalytics": {
                            "value": "[parameters('logAnalytics')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "networkSecurityGroupName": {
                              "type": "String"
                            },
                            "resourceGroupName": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "storageAccountResourceId": {
                              "type": "String"
                            },
                            "retention": {
                              "type": "int"
                            },
                            "flowAnalyticsEnabled": {
                              "type": "bool"
                            },
                            "trafficAnalyticsInterval": {
                              "type": "int"
                            },
                            "logAnalytics": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkWatchers/flowLogs",
                              "apiVersion": "2020-05-01",
                              "name": "[take(concat('NetworkWatcher_', toLower(parameters('location')),  '/', parameters('networkSecurityGroupName'), '-', parameters('resourceGroupName'), '-flowlog' ), 80)]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "targetResourceId": "[resourceId(parameters('resourceGroupName'), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
                                "storageId": "[parameters('storageAccountResourceId')]",
                                "enabled": true,
                                "retentionPolicy": {
                                  "enabled": true,
                                  "days": "[parameters('retention')]"
                                },
                                "format": {
                                  "type": "JSON",
                                  "version": 2
                                },
                                "flowAnalyticsConfiguration": {
                                  "networkWatcherFlowAnalyticsConfiguration": {
                                    "enabled": "[bool(parameters('flowAnalyticsEnabled'))]",
                                    "trafficAnalyticsInterval": "[parameters('trafficAnalyticsInterval')]",
                                    "workspaceId": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').properties.customerId, json('null')) ]",
                                    "workspaceRegion": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').location, json('null')) ]",
                                    "workspaceResourceId": "[if(not(empty(parameters('logAnalytics'))), parameters('logAnalytics'), json('null'))]"
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Nsg-FlowLogs",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1381974Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1381974Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-nsg-flowlogs-to-la": {
            "properties": {
              "displayName": "[Deprecated] Deploys NSG flow logs and traffic analytics to Log Analytics",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "[Deprecated] Deprecated by built-in policy. Deploys NSG flow logs and traffic analytics to Log Analytics with a specified retention period. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/e920df7f-9a64-4066-9b58-52684c02a091.html",
              "metadata": {
                "deprecated": true,
                "supersededBy": "e920df7f-9a64-4066-9b58-52684c02a091",
                "version": "1.1.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.8261249Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "retention": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "Retention"
                  },
                  "defaultValue": 5
                },
                "interval": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "Traffic Analytics processing interval mins (10/60)"
                  },
                  "defaultValue": 60
                },
                "workspace": {
                  "type": "String",
                  "metadata": {
                    "strongType": "omsWorkspace",
                    "displayName": "Resource ID of Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                  },
                  "defaultValue": "<workspace resource ID>"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/networkSecurityGroups"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Network/networkWatchers/flowlogs",
                    "name": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id'))), 'null/null', concat(split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8], '/', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10]))]",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                          "equals": "true"
                        }
                      ]
                    },
                    "existenceScope": "resourceGroup",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7",
                      "/providers/Microsoft.Authorization/roleDefinitions/81a9662b-bebf-436f-a333-f67b29880f12",
                      "/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                      "/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab",
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "resourceGroupName": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), 'NetworkWatcherRG', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]",
                    "deploymentScope": "subscription",
                    "deployment": {
                      "location": "uksouth",
                      "properties": {
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[field('location')]"
                          },
                          "networkSecurityGroup": {
                            "value": "[field('id')]"
                          },
                          "workspace": {
                            "value": "[parameters('workspace')]"
                          },
                          "retention": {
                            "value": "[parameters('retention')]"
                          },
                          "interval": {
                            "value": "[parameters('interval')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "location": {
                              "type": "String"
                            },
                            "networkSecurityGroup": {
                              "type": "String"
                            },
                            "workspace": {
                              "type": "String"
                            },
                            "retention": {
                              "type": "int"
                            },
                            "interval": {
                              "type": "int"
                            },
                            "time": {
                              "type": "String",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "resourceGroupName": "[split(parameters('networkSecurityGroup'), '/')[4]]",
                            "securityGroupName": "[split(parameters('networkSecurityGroup'), '/')[8]]",
                            "storageAccountName": "[concat('es', uniqueString(variables('securityGroupName'), parameters('time')))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2019-10-01",
                              "name": "[concat(variables('resourceGroupName'), '.', variables('securityGroupName'))]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "resources": [
                                    {
                                      "type": "Microsoft.Storage/storageAccounts",
                                      "apiVersion": "2019-06-01",
                                      "name": "[variables('storageAccountName')]",
                                      "location": "[parameters('location')]",
                                      "properties": {},
                                      "kind": "StorageV2",
                                      "sku": {
                                        "name": "Standard_LRS",
                                        "tier": "Standard"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2019-10-01",
                              "name": "[concat('NetworkWatcherRG', '.', variables('securityGroupName'))]",
                              "resourceGroup": "NetworkWatcherRG",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/networkWatchers",
                                      "apiVersion": "2020-05-01",
                                      "name": "[concat('NetworkWatcher_', toLower(parameters('location')))]",
                                      "location": "[parameters('location')]",
                                      "properties": {},
                                      "resources": [
                                        {
                                          "type": "flowLogs",
                                          "apiVersion": "2019-11-01",
                                          "name": "[concat(variables('securityGroupName'), '-Network-flowlog')]",
                                          "location": "[parameters('location')]",
                                          "properties": {
                                            "enabled": true,
                                            "format": {
                                              "type": "JSON",
                                              "version": 2
                                            },
                                            "retentionPolicy": {
                                              "days": "[parameters('retention')]",
                                              "enabled": true
                                            },
                                            "flowAnalyticsConfiguration": {
                                              "networkWatcherFlowAnalyticsConfiguration": {
                                                "enabled": true,
                                                "trafficAnalyticsInterval": "[parameters('interval')]",
                                                "workspaceResourceId": "[parameters('workspace')]"
                                              }
                                            },
                                            "storageId": "[concat(subscription().id, '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                                            "targetResourceId": "[parameters('networkSecurityGroup')]"
                                          },
                                          "dependsOn": [
                                            "[concat('NetworkWatcher_', toLower(parameters('location')))]"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[concat(variables('resourceGroupName'), '.', variables('securityGroupName'))]"
                              ]
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Nsg-FlowLogs-to-LA",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.7788197Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.7788197Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-postgresql-sslenforcement": {
            "properties": {
              "displayName": "Azure Database for PostgreSQL server deploy a specific min TLS version requirement and enforce SSL ",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
              "metadata": {
                "version": "1.1.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0772536Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect Azure Database for PostgreSQL server",
                    "description": "Enable or disable the execution of the policy minimum TLS version Azure Database for PostgreSQL server"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "minimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select version for PostgreSQL server",
                    "description": "Select version minimum TLS version Azure Database for PostgreSQL server to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_0",
                    "TLS1_1",
                    "TLSEnforcementDisabled"
                  ],
                  "defaultValue": "TLS1_2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.DBforPostgreSQL/servers"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                          "notEquals": "Enabled"
                        },
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
                          "notEquals": "[parameters('minimalTlsVersion')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.DBforPostgreSQL/servers",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                          "equals": "Enabled"
                        },
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
                          "equals": "[parameters('minimalTlsVersion')]"
                        }
                      ]
                    },
                    "name": "current",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "minimalTlsVersion": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.DBforPostgreSQL/servers",
                              "apiVersion": "2017-12-01",
                              "name": "[concat(parameters('resourceName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "sslEnforcement": "[if(equals(parameters('minimalTlsVersion'), 'TLSEnforcementDisabled'),'Disabled', 'Enabled')]",
                                "minimalTlsVersion": "[parameters('minimalTlsVersion')]"
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "minimalTlsVersion": {
                            "value": "[parameters('minimalTlsVersion')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-PostgreSQL-sslEnforcement",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9663203Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9663203Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-private-dns-generic": {
            "properties": {
              "displayName": "Deploy-Private-DNS-Generic",
              "policyType": "Custom",
              "mode": "All",
              "description": "Configure private DNS zone group to override the DNS resolution for PaaS services private endpoint. See https://aka.ms/pepdnszones for information on values to provide to parameters in this policy.",
              "metadata": {
                "version": "1.0.0",
                "category": "Networking",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9993161Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "privateDnsZoneId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private DNS Zone ID for Paas services",
                    "description": "The private DNS zone name required for specific Paas Services to resolve a private DNS Zone.",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "assignPermissions": true
                  }
                },
                "resourceType": {
                  "type": "String",
                  "metadata": {
                    "displayName": "PaaS private endpoint resource type",
                    "description": "The PaaS endpoint resource type."
                  }
                },
                "groupId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "PaaS Private endpoint group ID (subresource)",
                    "description": "The group ID of the PaaS private endpoint. Also referred to as subresource."
                  }
                },
                "evaluationDelay": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Evaluation Delay",
                    "description": "The delay in evaluation of the policy. Review delay options at https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effect-deploy-if-not-exists"
                  },
                  "defaultValue": "PT10M"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/privateEndpoints"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
                        "where": {
                          "allOf": [
                            {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId",
                              "contains": "[parameters('resourceType')]"
                            },
                            {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                              "equals": "[parameters('groupId')]"
                            }
                          ]
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                    "evaluationDelay": "[parameters('evaluationDelay')]",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "privateDnsZoneId": {
                              "type": "string"
                            },
                            "privateEndpointName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-03-01",
                              "location": "[parameters('location')]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "PaaS-Service-Private-DNS-Zone-Config",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "privateDnsZoneId": {
                            "value": "[parameters('privateDnsZoneId')]"
                          },
                          "privateEndpointName": {
                            "value": "[field('name')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Private-DNS-Generic",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Private-DNS-Generic",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-sql-auditingsettings": {
            "properties": {
              "displayName": "Deploy SQL database auditing settings",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploy auditing settings to SQL Database when it not exist in the deployment",
              "metadata": {
                "version": "1.0.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.0111024Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers/databases"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Sql/servers/databases/auditingSettings",
                    "name": "default",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/servers/databases/auditingSettings/state",
                          "equals": "enabled"
                        },
                        {
                          "field": "Microsoft.Sql/servers/databases/auditingSettings/isAzureMonitorTargetEnabled",
                          "equals": "true"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "location": {
                              "type": "String"
                            },
                            "sqlServerName": {
                              "type": "String"
                            },
                            "sqlServerDataBaseName": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "name": "[concat( parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                              "type": "Microsoft.Sql/servers/databases/auditingSettings",
                              "apiVersion": "2017-03-01-preview",
                              "properties": {
                                "state": "enabled",
                                "auditActionsAndGroups": [
                                  "BATCH_COMPLETED_GROUP",
                                  "DATABASE_OBJECT_CHANGE_GROUP",
                                  "SCHEMA_OBJECT_CHANGE_GROUP",
                                  "BACKUP_RESTORE_GROUP",
                                  "APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
                                  "DATABASE_PRINCIPAL_CHANGE_GROUP",
                                  "DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
                                  "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
                                  "USER_CHANGE_PASSWORD_GROUP",
                                  "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
                                  "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
                                  "DATABASE_PERMISSION_CHANGE_GROUP",
                                  "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
                                  "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
                                  "FAILED_DATABASE_AUTHENTICATION_GROUP"
                                ],
                                "isAzureMonitorTargetEnabled": true
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field('location')]"
                          },
                          "sqlServerName": {
                            "value": "[first(split(field('fullname'),'/'))]"
                          },
                          "sqlServerDataBaseName": {
                            "value": "[field('name')]"
                          }
                        }
                      }
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Sql-AuditingSettings",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.9038204Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.9038204Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-sql-mintls": {
            "properties": {
              "displayName": "SQL servers deploys a specific min TLS version requirement.",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
              "metadata": {
                "version": "1.1.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9542049Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect SQL servers",
                    "description": "Enable or disable the execution of the policy minimum TLS version SQL servers"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "minimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select version for SQL server",
                    "description": "Select version minimum TLS version SQL servers to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.1",
                    "1.0"
                  ],
                  "defaultValue": "1.2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "field": "Microsoft.Sql/servers/minimalTlsVersion",
                      "notequals": "[parameters('minimalTlsVersion')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Sql/servers",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/servers/minimalTlsVersion",
                          "equals": "[parameters('minimalTlsVersion')]"
                        }
                      ]
                    },
                    "name": "current",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "minimalTlsVersion": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Sql/servers",
                              "apiVersion": "2019-06-01-preview",
                              "name": "[concat(parameters('resourceName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "minimalTlsVersion": "[parameters('minimalTlsVersion')]"
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "minimalTlsVersion": {
                            "value": "[parameters('minimalTlsVersion')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-SQL-minTLS",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.872569Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.872569Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-sql-securityalertpolicies": {
            "properties": {
              "displayName": "Deploy SQL Database security Alert Policies configuration with email admin accounts",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration",
              "metadata": {
                "version": "1.1.1",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4951469Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "emailAddresses": {
                  "type": "Array",
                  "defaultValue": [
                    "admin@contoso.com",
                    "admin@fabrikam.com"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers/databases"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/servers/databases/securityAlertPolicies/state",
                          "equals": "Enabled"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "location": {
                              "type": "String"
                            },
                            "sqlServerName": {
                              "type": "String"
                            },
                            "sqlServerDataBaseName": {
                              "type": "String"
                            },
                            "emailAddresses": {
                              "type": "Array"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "name": "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                              "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
                              "apiVersion": "2018-06-01-preview",
                              "properties": {
                                "state": "Enabled",
                                "disabledAlerts": [
                                  ""
                                ],
                                "emailAddresses": "[parameters('emailAddresses')]",
                                "emailAccountAdmins": true,
                                "storageEndpoint": null,
                                "storageAccountAccessKey": "",
                                "retentionDays": 0
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field('location')]"
                          },
                          "sqlServerName": {
                            "value": "[first(split(field('fullname'),'/'))]"
                          },
                          "sqlServerDataBaseName": {
                            "value": "[field('name')]"
                          },
                          "emailAddresses": {
                            "value": "[parameters('emailAddresses')]"
                          }
                        }
                      }
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Sql-SecurityAlertPolicies",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.4194497Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.4194497Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-sql-tde": {
            "properties": {
              "displayName": "[Deprecated] Deploy SQL Database Transparent Data Encryption",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploy the Transparent Data Encryption when it is not enabled in the deployment. Please use this policy instead https://www.azadvertizer.net/azpolicyadvertizer/86a912f6-9a06-4e26-b447-11b16ba8659f.html",
              "metadata": {
                "deprecated": true,
                "supersededBy": "86a912f6-9a06-4e26-b447-11b16ba8659f",
                "version": "1.1.1-deprecated",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.221666Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "excludedDatabases": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Excluded Databases",
                    "description": "Array of databases that are excluded from this policy"
                  },
                  "defaultValue": [
                    "master",
                    "model",
                    "tempdb",
                    "msdb",
                    "resource"
                  ]
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/databases"
                    },
                    {
                      "field": "name",
                      "notIn": "[parameters('excludedDatabases')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/transparentDataEncryption.status",
                          "equals": "Enabled"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "location": {
                              "type": "String"
                            },
                            "sqlServerName": {
                              "type": "String"
                            },
                            "sqlServerDataBaseName": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "name": "[concat( parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/current')]",
                              "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                              "apiVersion": "2014-04-01",
                              "properties": {
                                "status": "Enabled"
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field('location')]"
                          },
                          "sqlServerName": {
                            "value": "[first(split(field('fullname'),'/'))]"
                          },
                          "sqlServerDataBaseName": {
                            "value": "[field('name')]"
                          }
                        }
                      }
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Sql-Tde",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.1538247Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.1538247Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-sql-vulnerabilityassessments": {
            "properties": {
              "displayName": "[Deprecated]: Deploy SQL Database vulnerability Assessments",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/Deploy-Sql-vulnerabilityAssessments_20230706.html",
              "metadata": {
                "version": "1.0.1-deprecated",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "Deploy-Sql-vulnerabilityAssessments_20230706",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:36.9643175Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "vulnerabilityAssessmentsEmail": {
                  "type": "String",
                  "metadata": {
                    "description": "The email address to send alerts. For multiple emails, format in the following 'email1@contoso.com;email2@contoso.com'",
                    "displayName": "The email address to send alerts. For multiple emails, format in the following 'email1@contoso.com;email2@contoso.com'"
                  }
                },
                "vulnerabilityAssessmentsStorageID": {
                  "type": "String",
                  "metadata": {
                    "description": "The storage account ID to store assessments",
                    "displayName": "The storage account ID to store assessments"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers/databases"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails",
                          "equals": "[parameters('vulnerabilityAssessmentsEmail')]"
                        },
                        {
                          "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled",
                          "equals": true
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "location": {
                              "type": "String"
                            },
                            "sqlServerName": {
                              "type": "String"
                            },
                            "sqlServerDataBaseName": {
                              "type": "String"
                            },
                            "vulnerabilityAssessmentsEmail": {
                              "type": "String"
                            },
                            "vulnerabilityAssessmentsStorageID": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "name": "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                              "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                              "apiVersion": "2017-03-01-preview",
                              "properties": {
                                "storageContainerPath": "[concat('https://', last( split(parameters('vulnerabilityAssessmentsStorageID') ,  '/') ) , '.blob.core.windows.net/vulneraabilitylogs')]",
                                "storageAccountAccessKey": "[listkeys(parameters('vulnerabilityAssessmentsStorageID'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                                "recurringScans": {
                                  "isEnabled": true,
                                  "emailSubscriptionAdmins": false,
                                  "emails": [
                                    "[parameters('vulnerabilityAssessmentsEmail')]"
                                  ]
                                }
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field('location')]"
                          },
                          "sqlServerName": {
                            "value": "[first(split(field('fullname'),'/'))]"
                          },
                          "sqlServerDataBaseName": {
                            "value": "[field('name')]"
                          },
                          "vulnerabilityAssessmentsEmail": {
                            "value": "[parameters('vulnerabilityAssessmentsEmail')]"
                          },
                          "vulnerabilityAssessmentsStorageID": {
                            "value": "[parameters('vulnerabilityAssessmentsStorageID')]"
                          }
                        }
                      }
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                      "/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab"
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Sql-vulnerabilityAssessments",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:36.8881955Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:36.8881955Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-sql-vulnerabilityassessments_20230706": {
            "properties": {
              "displayName": "Deploy SQL Database Vulnerability Assessments",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploy SQL Database Vulnerability Assessments when it does not exist in the deployment, and save results to the storage account specified in the parameters.",
              "metadata": {
                "version": "1.0.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "replacesPolicy": "Deploy-Sql-vulnerabilityAssessments",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1866221Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "vulnerabilityAssessmentsEmail": {
                  "type": "Array",
                  "metadata": {
                    "description": "The email address(es) to send alerts.",
                    "displayName": "The email address(es) to send alerts."
                  }
                },
                "vulnerabilityAssessmentsStorageID": {
                  "type": "String",
                  "metadata": {
                    "description": "The storage account ID to store assessments",
                    "displayName": "The storage account ID to store assessments"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers/databases"
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "count": {
                            "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails[*]",
                            "where": {
                              "value": "current(Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails[*])",
                              "notIn": "[parameters('vulnerabilityAssessmentsEmail')]"
                            }
                          },
                          "greater": 0
                        },
                        {
                          "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled",
                          "equals": true
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "location": {
                              "type": "String"
                            },
                            "sqlServerName": {
                              "type": "String"
                            },
                            "sqlServerDataBaseName": {
                              "type": "String"
                            },
                            "vulnerabilityAssessmentsEmail": {
                              "type": "Array"
                            },
                            "vulnerabilityAssessmentsStorageID": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "name": "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                              "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                              "apiVersion": "2017-03-01-preview",
                              "properties": {
                                "storageContainerPath": "[concat('https://', last( split(parameters('vulnerabilityAssessmentsStorageID') ,  '/') ) , '.blob.core.windows.net/vulneraabilitylogs')]",
                                "storageAccountAccessKey": "[listkeys(parameters('vulnerabilityAssessmentsStorageID'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                                "recurringScans": {
                                  "isEnabled": true,
                                  "emailSubscriptionAdmins": false,
                                  "emails": "[parameters('vulnerabilityAssessmentsEmail')]"
                                }
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "location": {
                            "value": "[field('location')]"
                          },
                          "sqlServerName": {
                            "value": "[first(split(field('fullname'),'/'))]"
                          },
                          "sqlServerDataBaseName": {
                            "value": "[field('name')]"
                          },
                          "vulnerabilityAssessmentsEmail": {
                            "value": "[parameters('vulnerabilityAssessmentsEmail')]"
                          },
                          "vulnerabilityAssessmentsStorageID": {
                            "value": "[parameters('vulnerabilityAssessmentsStorageID')]"
                          }
                        }
                      }
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                      "/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab"
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments_20230706",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Sql-vulnerabilityAssessments_20230706",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0131958Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0131958Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-sqlmi-mintls": {
            "properties": {
              "displayName": "SQL managed instances deploy a specific min TLS version requirement.",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploy a specific min TLS version requirement and enforce SSL on SQL managed instances. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
              "metadata": {
                "version": "1.2.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2296004Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect SQL servers",
                    "description": "Enable or disable the execution of the policy minimum TLS version SQL servers"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "minimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select version for SQL server",
                    "description": "Select version minimum TLS version SQL servers to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.1",
                    "1.0"
                  ],
                  "defaultValue": "1.2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/managedInstances"
                    },
                    {
                      "field": "Microsoft.Sql/managedInstances/minimalTlsVersion",
                      "notequals": "[parameters('minimalTlsVersion')]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Sql/managedInstances",
                    "evaluationDelay": "AfterProvisioningSuccess",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/managedInstances/minimalTlsVersion",
                          "equals": "[parameters('minimalTlsVersion')]"
                        }
                      ]
                    },
                    "name": "current",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/4939a1f6-9ae0-4e48-a1e0-f2cbe897382d"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "minimalTlsVersion": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Sql/managedInstances",
                              "apiVersion": "2020-02-02-preview",
                              "name": "[concat(parameters('resourceName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "minimalTlsVersion": "[parameters('minimalTlsVersion')]"
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "minimalTlsVersion": {
                            "value": "[parameters('minimalTlsVersion')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-SqlMi-minTLS",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-storage-sslenforcement": {
            "properties": {
              "displayName": "Azure Storage deploy a specific min TLS version requirement and enforce SSL/HTTPS ",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Storage. Enables secure server to client by enforce minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your Azure Storage.",
              "metadata": {
                "version": "1.2.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.184173Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect Azure Storage",
                    "description": "Enable or disable the execution of the policy minimum TLS version Azure STorage"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "minimumTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Select TLS version for Azure Storage server",
                    "description": "Select version minimum TLS version Azure STorage to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_1",
                    "TLS1_0"
                  ],
                  "defaultValue": "TLS1_2"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                          "notEquals": "true"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
                          "notEquals": "[parameters('minimumTlsVersion')]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Storage/storageAccounts",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                          "equals": "true"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
                          "equals": "[parameters('minimumTlsVersion')]"
                        }
                      ]
                    },
                    "name": "current",
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "resourceName": {
                              "type": "String"
                            },
                            "minimumTlsVersion": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Storage/storageAccounts",
                              "apiVersion": "2019-06-01",
                              "name": "[concat(parameters('resourceName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "supportsHttpsTrafficOnly": true,
                                "minimumTlsVersion": "[parameters('minimumTlsVersion')]"
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "resourceName": {
                            "value": "[field('name')]"
                          },
                          "minimumTlsVersion": {
                            "value": "[parameters('minimumTlsVersion')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Storage-sslEnforcement",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-userassignedmanagedidentity-vminsights": {
            "properties": {
              "displayName": "[Deprecated]: Deploy User Assigned Managed Identity for VM Insights",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Policy is deprecated as it's no longer required. User-Assigned Management Identity is now centralized and deployed by Azure Landing Zones to the Management Subscription.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Managed Identity",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.2080293Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "bringYourOwnUserAssignedManagedIdentity": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "Bring Your Own User-Assigned Identity",
                    "description": "Enable this to use your pre-created user-assigned managed identity. The pre-created identity MUST exist within the subscription otherwise the policy deployment will fail. If enabled, ensure that the User-Assigned Identity Name and Identity Resource Group Name parameters match the pre-created identity. If not enabled, the policy will create per subscription, per resource user-assigned managed identities in a new resource group named 'Built-In-Identity-RG'."
                  },
                  "allowedValues": [
                    true,
                    false
                  ]
                },
                "userAssignedIdentityName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "User-Assigned Managed Identity Name",
                    "description": "The name of the pre-created user-assigned managed identity."
                  },
                  "defaultValue": ""
                },
                "identityResourceGroup": {
                  "type": "String",
                  "metadata": {
                    "displayName": "User-Assigned Managed Identity Resource Group Name",
                    "description": "The resource group in which the pre-created user-assigned managed identity resides."
                  },
                  "defaultValue": ""
                },
                "builtInIdentityResourceGroupLocation": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Built-In-Identity-RG Location",
                    "description": "The location of the resource group 'Built-In-Identity-RG' created by the policy. This parameter is only used when 'Bring Your Own User Assigned Identity' parameter is false."
                  },
                  "defaultValue": "eastus"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Policy Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "value": "[requestContext().apiVersion]",
                      "greaterOrEquals": "2018-10-01"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines",
                    "name": "[field('name')]",
                    "evaluationDelay": "AfterProvisioning",
                    "deploymentScope": "subscription",
                    "existenceCondition": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "identity.type",
                              "contains": "UserAssigned"
                            },
                            {
                              "field": "identity.userAssignedIdentities",
                              "containsKey": "[if(parameters('bringYourOwnUserAssignedManagedIdentity'), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', trim(parameters('identityResourceGroup')), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', trim(parameters('userAssignedIdentityName'))), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/Built-In-Identity-RG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/Built-In-Identity-', field('location')))]"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "identity.type",
                              "equals": "UserAssigned"
                            },
                            {
                              "value": "[string(length(field('identity.userAssignedIdentities')))]",
                              "equals": "1"
                            }
                          ]
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "location": "eastus",
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "bringYourOwnUserAssignedManagedIdentity": {
                            "value": "[parameters('bringYourOwnUserAssignedManagedIdentity')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "uaName": {
                            "value": "[if(parameters('bringYourOwnUserAssignedManagedIdentity'), parameters('userAssignedIdentityName'), 'Built-In-Identity')]"
                          },
                          "identityResourceGroup": {
                            "value": "[if(parameters('bringYourOwnUserAssignedManagedIdentity'), parameters('identityResourceGroup'), 'Built-In-Identity-RG')]"
                          },
                          "builtInIdentityResourceGroupLocation": {
                            "value": "[parameters('builtInIdentityResourceGroupLocation')]"
                          },
                          "vmName": {
                            "value": "[field('name')]"
                          },
                          "vmResourceGroup": {
                            "value": "[resourceGroup().name]"
                          },
                          "resourceId": {
                            "value": "[field('id')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.1",
                          "parameters": {
                            "bringYourOwnUserAssignedManagedIdentity": {
                              "type": "bool"
                            },
                            "location": {
                              "type": "string"
                            },
                            "uaName": {
                              "type": "string"
                            },
                            "identityResourceGroup": {
                              "type": "string"
                            },
                            "builtInIdentityResourceGroupLocation": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "vmResourceGroup": {
                              "type": "string"
                            },
                            "resourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "uaNameWithLocation": "[concat(parameters('uaName'),'-', parameters('location'))]",
                            "precreatedUaId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', trim(parameters('identityResourceGroup')), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', trim(parameters('uaName')))]",
                            "autocreatedUaId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', trim(parameters('identityResourceGroup')), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', trim(parameters('uaName')), '-', parameters('location'))]",
                            "deployUALockName": "[concat('deployUALock-', uniqueString(deployment().name))]",
                            "deployUAName": "[concat('deployUA-', uniqueString(deployment().name))]",
                            "deployGetResourceProperties": "[concat('deployGetResourceProperties-', uniqueString(deployment().name))]",
                            "deployAssignUAName": "[concat('deployAssignUA-', uniqueString(deployment().name))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/resourceGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('identityResourceGroup')]",
                              "location": "[parameters('builtInIdentityResourceGroupLocation')]"
                            },
                            {
                              "condition": "[parameters('bringYourOwnUserAssignedManagedIdentity')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-06-01",
                              "name": "[variables('deployUALockName')]",
                              "resourceGroup": "[parameters('identityResourceGroup')]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/resourceGroups', parameters('identityResourceGroup'))]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "parameters": {
                                  "uaName": {
                                    "value": "[parameters('uaName')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "uaName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                                      "name": "[parameters('uaName')]",
                                      "apiVersion": "2018-11-30",
                                      "location": "[parameters('location')]"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[not(parameters('bringYourOwnUserAssignedManagedIdentity'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-06-01",
                              "name": "[variables('deployUAName')]",
                              "resourceGroup": "[parameters('identityResourceGroup')]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/resourceGroups', parameters('identityResourceGroup'))]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "parameters": {
                                  "uaName": {
                                    "value": "[variables('uaNameWithLocation')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "uaName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                                      "name": "[parameters('uaName')]",
                                      "apiVersion": "2018-11-30",
                                      "location": "[parameters('location')]"
                                    },
                                    {
                                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities/providers/locks",
                                      "apiVersion": "2016-09-01",
                                      "name": "[concat(parameters('uaName'), '/Microsoft.Authorization/', 'CanNotDeleteLock-', parameters('uaName'))]",
                                      "dependsOn": [
                                        "[parameters('uaName')]"
                                      ],
                                      "properties": {
                                        "level": "CanNotDelete",
                                        "notes": "Please do not delete this User-Assigned Identity since extensions enabled by Azure Policy are relying on their existence."
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-06-01",
                              "name": "[variables('deployGetResourceProperties')]",
                              "location": "[parameters('location')]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/resourceGroups', parameters('identityResourceGroup'))]",
                                "[variables('deployUAName')]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "resources": [],
                                  "outputs": {
                                    "resource": {
                                      "type": "object",
                                      "value": "[reference(parameters('resourceId'), '2019-07-01', 'Full')]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-06-01",
                              "name": "[concat(variables('deployAssignUAName'))]",
                              "resourceGroup": "[parameters('vmResourceGroup')]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/resourceGroups', parameters('identityResourceGroup'))]",
                                "[variables('deployUAName')]",
                                "[variables('deployGetResourceProperties')]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "parameters": {
                                  "uaId": {
                                    "value": "[if(parameters('bringYourOwnUserAssignedManagedIdentity'), variables('precreatedUaId'), variables('autocreatedUaId'))]"
                                  },
                                  "vmName": {
                                    "value": "[parameters('vmName')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "identityType": {
                                    "value": "[if(contains(reference(variables('deployGetResourceProperties')).outputs.resource.value, 'identity'), reference(variables('deployGetResourceProperties')).outputs.resource.value.identity.type, '')]"
                                  },
                                  "userAssignedIdentities": {
                                    "value": "[if(and(contains(reference(variables('deployGetResourceProperties')).outputs.resource.value, 'identity'), contains(reference(variables('deployGetResourceProperties')).outputs.resource.value.identity, 'userAssignedIdentities')), reference(variables('deployGetResourceProperties')).outputs.resource.value.identity.userAssignedIdentities, createObject())]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {
                                    "uaId": {
                                      "type": "string"
                                    },
                                    "vmName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "identityType": {
                                      "type": "string"
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object"
                                    }
                                  },
                                  "variables": {
                                    "identityTypeValue": "[if(contains(parameters('identityType'), 'SystemAssigned'), 'SystemAssigned,UserAssigned', 'UserAssigned')]",
                                    "userAssignedIdentitiesValue": "[union(parameters('userAssignedIdentities'), createObject(parameters('uaId'), createObject()))]",
                                    "resourceWithSingleUAI": "[and(equals(parameters('identityType'), 'UserAssigned'), equals(string(length(parameters('userAssignedIdentities'))), '1'))]"
                                  },
                                  "resources": [
                                    {
                                      "condition": "[not(variables('resourceWithSingleUAI'))]",
                                      "apiVersion": "2019-07-01",
                                      "type": "Microsoft.Compute/virtualMachines",
                                      "name": "[parameters('vmName')]",
                                      "location": "[parameters('location')]",
                                      "identity": {
                                        "type": "[variables('identityTypeValue')]",
                                        "userAssignedIdentities": "[variables('userAssignedIdentitiesValue')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-UserAssignedManagedIdentity-VMInsights",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-UserAssignedManagedIdentity-VMInsights",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0288187Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0288187Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-vm-autoshutdown": {
            "properties": {
              "displayName": "Deploy Virtual Machine Auto Shutdown Schedule",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploys an auto shutdown schedule to a virtual machine",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.1252217Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "time": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Scheduled Shutdown Time",
                    "description": "Daily Scheduled shutdown time. i.e. 2300 = 11:00 PM"
                  },
                  "defaultValue": "0000"
                },
                "timeZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Time zone",
                    "description": "The time zone ID (e.g. Pacific Standard time)."
                  },
                  "defaultValue": "UTC"
                },
                "EnableNotification": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Send Notification before auto-shutdown",
                    "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled)."
                  },
                  "allowedValues": [
                    "Disabled",
                    "Enabled"
                  ],
                  "defaultValue": "Disabled"
                },
                "NotificationEmailRecipient": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Email Address",
                    "description": "Email address to be used for notification"
                  },
                  "defaultValue": ""
                },
                "NotificationWebhookUrl": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Webhook URL",
                    "description": "A notification will be posted to the specified webhook endpoint when the auto-shutdown is about to happen."
                  },
                  "defaultValue": ""
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "type": "Microsoft.DevTestLab/schedules",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.DevTestLab/schedules/taskType",
                          "equals": "ComputeVmShutdownTask"
                        },
                        {
                          "field": "Microsoft.DevTestLab/schedules/targetResourceId",
                          "equals": "[concat(resourceGroup().id,'/providers/Microsoft.Compute/virtualMachines/',field('name'))]"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "time": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Daily Scheduled shutdown time. i.e. 2300 = 11:00 PM"
                              }
                            },
                            "timeZoneId": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The time zone ID (e.g. Pacific Standard time)."
                              }
                            },
                            "EnableNotification": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled)."
                              }
                            },
                            "NotificationEmailRecipient": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Email address to be used for notification"
                              }
                            },
                            "NotificationWebhookUrl": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "A notification will be posted to the specified webhook endpoint when the auto-shutdown is about to happen."
                              }
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "name": "[concat('shutdown-computevm-',parameters('vmName'))]",
                              "type": "Microsoft.DevTestLab/schedules",
                              "location": "[parameters('location')]",
                              "apiVersion": "2018-09-15",
                              "properties": {
                                "status": "Enabled",
                                "taskType": "ComputeVmShutdownTask",
                                "dailyRecurrence": {
                                  "time": "[parameters('time')]"
                                },
                                "timeZoneId": "[parameters('timeZoneId')]",
                                "notificationSettings": {
                                  "status": "[parameters('EnableNotification')]",
                                  "timeInMinutes": 30,
                                  "webhookUrl": "[parameters('NotificationWebhookUrl')]",
                                  "emailRecipient": "[parameters('NotificationEmailRecipient')]",
                                  "notificationLocale": "en"
                                },
                                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                              }
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field('name')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "time": {
                            "value": "[parameters('time')]"
                          },
                          "timeZoneId": {
                            "value": "[parameters('timeZoneId')]"
                          },
                          "EnableNotification": {
                            "value": "[parameters('EnableNotification')]"
                          },
                          "NotificationEmailRecipient": {
                            "value": "[parameters('NotificationEmailRecipient')]"
                          },
                          "NotificationWebhookUrl": {
                            "value": "[parameters('NotificationWebhookUrl')]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Vm-autoShutdown",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Vm-autoShutdown",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.0756994Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.0756994Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-vnet-hubspoke": {
            "properties": {
              "displayName": "Deploy Virtual Network with peering to the hub",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy deploys virtual network and peer to the hub",
              "metadata": {
                "version": "1.1.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.4948131Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "vNetName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "vNetName",
                    "description": "Name of the landing zone vNet"
                  }
                },
                "vNetRgName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "vNetRgName",
                    "description": "Name of the landing zone vNet RG"
                  }
                },
                "vNetLocation": {
                  "type": "String",
                  "metadata": {
                    "displayName": "vNetLocation",
                    "description": "Location for the vNet"
                  }
                },
                "vNetCidrRange": {
                  "type": "String",
                  "metadata": {
                    "displayName": "vNetCidrRange",
                    "description": "CIDR Range for the vNet"
                  }
                },
                "hubResourceId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "hubResourceId",
                    "description": "Resource ID for the HUB vNet"
                  }
                },
                "dnsServers": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "DNSServers",
                    "description": "Default domain servers for the vNET."
                  },
                  "defaultValue": []
                },
                "vNetPeerUseRemoteGateway": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "vNetPeerUseRemoteGateway",
                    "description": "Enable gateway transit for the LZ network"
                  },
                  "defaultValue": false
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Resources/subscriptions"
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "type": "Microsoft.Network/virtualNetworks",
                    "name": "[parameters('vNetName')]",
                    "deploymentScope": "subscription",
                    "existenceScope": "resourceGroup",
                    "ResourceGroupName": "[parameters('vNetRgName')]",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "name",
                          "like": "[parameters('vNetName')]"
                        },
                        {
                          "field": "location",
                          "equals": "[parameters('vNetLocation')]"
                        }
                      ]
                    },
                    "deployment": {
                      "location": "uksouth",
                      "properties": {
                        "mode": "Incremental",
                        "parameters": {
                          "vNetRgName": {
                            "value": "[parameters('vNetRgName')]"
                          },
                          "vNetName": {
                            "value": "[parameters('vNetName')]"
                          },
                          "vNetLocation": {
                            "value": "[parameters('vNetLocation')]"
                          },
                          "vNetCidrRange": {
                            "value": "[parameters('vNetCidrRange')]"
                          },
                          "hubResourceId": {
                            "value": "[parameters('hubResourceId')]"
                          },
                          "dnsServers": {
                            "value": "[parameters('dnsServers')]"
                          },
                          "vNetPeerUseRemoteGateway": {
                            "value": "[parameters('vNetPeerUseRemoteGateway')]"
                          }
                        },
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vNetRgName": {
                              "type": "String"
                            },
                            "vNetName": {
                              "type": "String"
                            },
                            "vNetLocation": {
                              "type": "String"
                            },
                            "vNetCidrRange": {
                              "type": "String"
                            },
                            "vNetPeerUseRemoteGateway": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "hubResourceId": {
                              "type": "String"
                            },
                            "dnsServers": {
                              "type": "Array",
                              "defaultValue": []
                            }
                          },
                          "variables": {},
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2021-04-01",
                              "name": "[concat('alz-vnet-rg-', parameters('vNetLocation'), '-', substring(uniqueString(subscription().id),0,6))]",
                              "location": "[parameters('vNetLocation')]",
                              "dependsOn": [],
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {},
                                  "variables": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/resourceGroups",
                                      "apiVersion": "2021-04-01",
                                      "name": "[parameters('vNetRgName')]",
                                      "location": "[parameters('vNetLocation')]",
                                      "properties": {}
                                    }
                                  ],
                                  "outputs": {}
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2021-04-01",
                              "name": "[concat('alz-vnet-', parameters('vNetLocation'), '-', substring(uniqueString(subscription().id),0,6))]",
                              "dependsOn": [
                                "[concat('alz-vnet-rg-', parameters('vNetLocation'), '-', substring(uniqueString(subscription().id),0,6))]"
                              ],
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {},
                                  "variables": {},
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks",
                                      "apiVersion": "2021-02-01",
                                      "name": "[parameters('vNetName')]",
                                      "location": "[parameters('vNetLocation')]",
                                      "dependsOn": [],
                                      "properties": {
                                        "addressSpace": {
                                          "addressPrefixes": [
                                            "[parameters('vNetCidrRange')]"
                                          ]
                                        },
                                        "dhcpOptions": {
                                          "dnsServers": "[parameters('dnsServers')]"
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                      "apiVersion": "2021-02-01",
                                      "name": "[concat(parameters('vNetName'), '/peerToHub')]",
                                      "dependsOn": [
                                        "[parameters('vNetName')]"
                                      ],
                                      "properties": {
                                        "remoteVirtualNetwork": {
                                          "id": "[parameters('hubResourceId')]"
                                        },
                                        "allowVirtualNetworkAccess": true,
                                        "allowForwardedTraffic": true,
                                        "allowGatewayTransit": false,
                                        "useRemoteGateways": "[parameters('vNetPeerUseRemoteGateway')]"
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2021-04-01",
                                      "name": "[concat('alz-hub-peering-', parameters('vNetLocation'), '-', substring(uniqueString(subscription().id),0,6))]",
                                      "subscriptionId": "[split(parameters('hubResourceId'),'/')[2]]",
                                      "resourceGroup": "[split(parameters('hubResourceId'),'/')[4]]",
                                      "dependsOn": [
                                        "[parameters('vNetName')]"
                                      ],
                                      "properties": {
                                        "mode": "Incremental",
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "parameters": {
                                            "remoteVirtualNetwork": {
                                              "type": "String",
                                              "defaultValue": false
                                            },
                                            "hubName": {
                                              "type": "String",
                                              "defaultValue": false
                                            }
                                          },
                                          "variables": {},
                                          "resources": [
                                            {
                                              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                              "name": "[[concat(parameters('hubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                                              "apiVersion": "2021-02-01",
                                              "properties": {
                                                "allowVirtualNetworkAccess": true,
                                                "allowForwardedTraffic": true,
                                                "allowGatewayTransit": true,
                                                "useRemoteGateways": false,
                                                "remoteVirtualNetwork": {
                                                  "id": "[[parameters('remoteVirtualNetwork')]"
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {}
                                        },
                                        "parameters": {
                                          "remoteVirtualNetwork": {
                                            "value": "[concat(subscription().id,'/resourceGroups/',parameters('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
                                          },
                                          "hubName": {
                                            "value": "[split(parameters('hubResourceId'),'/')[8]]"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {}
                                }
                              },
                              "resourceGroup": "[parameters('vNetRgName')]"
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-VNET-HubSpoke",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.2006937Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.2006937Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/deploy-windows-domainjoin": {
            "properties": {
              "displayName": "Deploy Windows Domain Join Extension with keyvault configuration",
              "policyType": "Custom",
              "mode": "Indexed",
              "description": "Deploy Windows Domain Join Extension with keyvault configuration when the extension does not exist on a given windows Virtual Machine",
              "metadata": {
                "version": "1.0.0",
                "category": "Guest Configuration",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5463281Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "domainUsername": {
                  "type": "String",
                  "metadata": {
                    "displayName": "domainUsername"
                  }
                },
                "domainPassword": {
                  "type": "String",
                  "metadata": {
                    "displayName": "domainPassword"
                  }
                },
                "domainFQDN": {
                  "type": "String",
                  "metadata": {
                    "displayName": "domainFQDN"
                  }
                },
                "domainOUPath": {
                  "type": "String",
                  "metadata": {
                    "displayName": "domainOUPath"
                  }
                },
                "keyVaultResourceId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "keyVaultResourceId"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "equals": "MicrosoftWindowsServer"
                    },
                    {
                      "field": "Microsoft.Compute/imageOffer",
                      "equals": "WindowsServer"
                    },
                    {
                      "field": "Microsoft.Compute/imageSKU",
                      "in": [
                        "2008-R2-SP1",
                        "2008-R2-SP1-smalldisk",
                        "2008-R2-SP1-zhcn",
                        "2012-Datacenter",
                        "2012-datacenter-gensecond",
                        "2012-Datacenter-smalldisk",
                        "2012-datacenter-smalldisk-g2",
                        "2012-Datacenter-zhcn",
                        "2012-datacenter-zhcn-g2",
                        "2012-R2-Datacenter",
                        "2012-r2-datacenter-gensecond",
                        "2012-R2-Datacenter-smalldisk",
                        "2012-r2-datacenter-smalldisk-g2",
                        "2012-R2-Datacenter-zhcn",
                        "2012-r2-datacenter-zhcn-g2",
                        "2016-Datacenter",
                        "2016-datacenter-gensecond",
                        "2016-datacenter-gs",
                        "2016-Datacenter-Server-Core",
                        "2016-datacenter-server-core-g2",
                        "2016-Datacenter-Server-Core-smalldisk",
                        "2016-datacenter-server-core-smalldisk-g2",
                        "2016-Datacenter-smalldisk",
                        "2016-datacenter-smalldisk-g2",
                        "2016-Datacenter-with-Containers",
                        "2016-datacenter-with-containers-g2",
                        "2016-Datacenter-with-RDSH",
                        "2016-Datacenter-zhcn",
                        "2016-datacenter-zhcn-g2",
                        "2019-Datacenter",
                        "2019-Datacenter-Core",
                        "2019-datacenter-core-g2",
                        "2019-Datacenter-Core-smalldisk",
                        "2019-datacenter-core-smalldisk-g2",
                        "2019-Datacenter-Core-with-Containers",
                        "2019-datacenter-core-with-containers-g2",
                        "2019-Datacenter-Core-with-Containers-smalldisk",
                        "2019-datacenter-core-with-containers-smalldisk-g2",
                        "2019-datacenter-gensecond",
                        "2019-datacenter-gs",
                        "2019-Datacenter-smalldisk",
                        "2019-datacenter-smalldisk-g2",
                        "2019-Datacenter-with-Containers",
                        "2019-datacenter-with-containers-g2",
                        "2019-Datacenter-with-Containers-smalldisk",
                        "2019-datacenter-with-containers-smalldisk-g2",
                        "2019-Datacenter-zhcn",
                        "2019-datacenter-zhcn-g2",
                        "Datacenter-Core-1803-with-Containers-smalldisk",
                        "datacenter-core-1803-with-containers-smalldisk-g2",
                        "Datacenter-Core-1809-with-Containers-smalldisk",
                        "datacenter-core-1809-with-containers-smalldisk-g2",
                        "Datacenter-Core-1903-with-Containers-smalldisk",
                        "datacenter-core-1903-with-containers-smalldisk-g2",
                        "datacenter-core-1909-with-containers-smalldisk",
                        "datacenter-core-1909-with-containers-smalldisk-g1",
                        "datacenter-core-1909-with-containers-smalldisk-g2"
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "JsonADDomainExtension"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Compute"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "Incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[field('name')]"
                          },
                          "location": {
                            "value": "[field('location')]"
                          },
                          "domainUsername": {
                            "reference": {
                              "keyVault": {
                                "id": "[parameters('keyVaultResourceId')]"
                              },
                              "secretName": "[parameters('domainUsername')]"
                            }
                          },
                          "domainPassword": {
                            "reference": {
                              "keyVault": {
                                "id": "[parameters('keyVaultResourceId')]"
                              },
                              "secretName": "[parameters('domainPassword')]"
                            }
                          },
                          "domainOUPath": {
                            "value": "[parameters('domainOUPath')]"
                          },
                          "domainFQDN": {
                            "value": "[parameters('domainFQDN')]"
                          },
                          "keyVaultResourceId": {
                            "value": "[parameters('keyVaultResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "String"
                            },
                            "location": {
                              "type": "String"
                            },
                            "domainUsername": {
                              "type": "String"
                            },
                            "domainPassword": {
                              "type": "securestring"
                            },
                            "domainFQDN": {
                              "type": "String"
                            },
                            "domainOUPath": {
                              "type": "String"
                            },
                            "keyVaultResourceId": {
                              "type": "String"
                            }
                          },
                          "variables": {
                            "domainJoinOptions": 3,
                            "vmName": "[parameters('vmName')]"
                          },
                          "resources": [
                            {
                              "apiVersion": "2015-06-15",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "name": "[concat(variables('vmName'),'/joindomain')]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "publisher": "Microsoft.Compute",
                                "type": "JsonADDomainExtension",
                                "typeHandlerVersion": "1.3",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "Name": "[parameters('domainFQDN')]",
                                  "User": "[parameters('domainUserName')]",
                                  "Restart": "true",
                                  "Options": "[variables('domainJoinOptions')]",
                                  "OUPath": "[parameters('domainOUPath')]"
                                },
                                "protectedSettings": {
                                  "Password": "[parameters('domainPassword')]"
                                }
                              }
                            }
                          ],
                          "outputs": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Deploy-Windows-DomainJoin",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.4506983Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.4506983Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/modify-nsg": {
            "properties": {
              "displayName": "Enforce specific configuration of Network Security Groups (NSG)",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy enforces the configuration of Network Security Groups (NSG).",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:37.5666688Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "nsgRuleName": {
                  "type": "string",
                  "defaultValue": "DenyAnyInternetOutbound"
                },
                "nsgRulePriority": {
                  "type": "integer",
                  "defaultValue": 1000
                },
                "nsgRuleDirection": {
                  "type": "string",
                  "allowedValues": [
                    "Inbound",
                    "Outbound"
                  ],
                  "defaultValue": "Outbound"
                },
                "nsgRuleAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Allow",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                },
                "nsgRuleProtocol": {
                  "type": "string",
                  "defaultValue": "*"
                },
                "nsgRuleSourceAddressPrefix": {
                  "type": "string",
                  "defaultValue": "*"
                },
                "nsgRuleSourcePortRange": {
                  "type": "string",
                  "defaultValue": "*"
                },
                "nsgRuleDestinationAddressPrefix": {
                  "type": "string",
                  "defaultValue": "Internet"
                },
                "nsgRuleDestinationPortRange": {
                  "type": "string",
                  "defaultValue": "*"
                },
                "nsgRuleDescription": {
                  "type": "string",
                  "defaultValue": "Deny any outbound traffic to the Internet"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/networkSecurityGroups"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]"
                      },
                      "equals": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "conflictEffect": "audit",
                    "operations": [
                      {
                        "operation": "add",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
                        "value": {
                          "name": "[parameters('nsgRuleName')]",
                          "properties": {
                            "description": "[parameters('nsgRuleDescription')]",
                            "protocol": "[parameters('nsgRuleProtocol')]",
                            "sourcePortRange": "[parameters('nsgRuleSourcePortRange')]",
                            "destinationPortRange": "[parameters('nsgRuleDestinationPortRange')]",
                            "sourceAddressPrefix": "[parameters('nsgRuleSourceAddressPrefix')]",
                            "destinationAddressPrefix": "[parameters('nsgRuleDestinationAddressPrefix')]",
                            "access": "[parameters('nsgRuleAccess')]",
                            "priority": "[parameters('nsgRulePriority')]",
                            "direction": "[parameters('nsgRuleDirection')]"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Modify-NSG",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Modify-NSG",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:37.5131979Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:37.5131979Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policydefinitions/modify-udr": {
            "properties": {
              "displayName": "Enforce specific configuration of User-Defined Routes (UDR)",
              "policyType": "Custom",
              "mode": "All",
              "description": "This policy enforces the configuration of User-Defined Routes (UDR) within a subnet.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:30.3768401Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "addressPrefix": {
                  "type": "string",
                  "metadata": {
                    "description": "The destination IP address range in CIDR notation that this Policy checks for within the UDR. Example: 0.0.0.0/0 to check for the presence of a default route.",
                    "displayName": "Address Prefix"
                  }
                },
                "nextHopType": {
                  "type": "string",
                  "metadata": {
                    "description": "The next hope type that the policy checks for within the inspected route. The value can be Virtual Network, Virtual Network Gateway, Internet, Virtual Appliance, or None.",
                    "displayName": "Next Hop Type"
                  },
                  "allowedValues": [
                    "VnetLocal",
                    "VirtualNetworkGateway",
                    "Internet",
                    "VirtualAppliance",
                    "None"
                  ]
                },
                "nextHopIpAddress": {
                  "type": "string",
                  "metadata": {
                    "description": "The IP address packets should be forwarded to.",
                    "displayName": "Next Hop IP Address"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/routeTables"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/routeTables/routes[*]"
                      },
                      "equals": 0
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters('effect')]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "conflictEffect": "audit",
                    "operations": [
                      {
                        "operation": "add",
                        "field": "Microsoft.Network/routeTables/routes[*]",
                        "value": {
                          "name": "default",
                          "properties": {
                            "addressPrefix": "[parameters('addressPrefix')]",
                            "nextHopType": "[parameters('nextHopType')]",
                            "nextHopIpAddress": "[parameters('nextHopIpAddress')]"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Modify-UDR",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "Modify-UDR",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:30.3256592Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:30.3256592Z"
            }
          }
        },
        "PolicySetDefinitionsCustom": {
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/audit-trustedlaunch": {
            "properties": {
              "displayName": "Audit virtual machines for Trusted Launch support",
              "policyType": "Custom",
              "description": "Trusted Launch improves security of a Virtual Machine which requires VM SKU, OS Disk & OS Image to support it (Gen 2). To learn more about Trusted Launch, visit https://aka.ms/trustedlaunch.",
              "metadata": {
                "version": "1.0.0",
                "category": "Trusted Launch",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8827818Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "AuditDisksOsTrustedLaunch",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b03bb370-5249-4ea4-9fce-2552e87e45fa",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AuditTrustedLaunchEnabled",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c95b54ad-0614-4633-ab29-104b01235cbf",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Audit-TrustedLaunch",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Audit-TrustedLaunch",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/audit-unusedresourcescostoptimization": {
            "properties": {
              "displayName": "Unused resources driving cost should be avoided",
              "policyType": "Custom",
              "description": "Optimize cost by detecting unused but chargeable resources. Leverage this Azure Policy Initiative as a cost control tool to reveal orphaned resources that are contributing cost.",
              "metadata": {
                "version": "2.0.0",
                "category": "Cost Optimization",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7711026Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effectDisks": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Disks Effect",
                    "description": "Enable or disable the execution of the policy for Microsoft.Compute/disks"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "effectPublicIpAddresses": {
                  "type": "String",
                  "metadata": {
                    "displayName": "PublicIpAddresses Effect",
                    "description": "Enable or disable the execution of the policy for Microsoft.Network/publicIpAddresses"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "effectServerFarms": {
                  "type": "String",
                  "metadata": {
                    "displayName": "ServerFarms Effect",
                    "description": "Enable or disable the execution of the policy for Microsoft.Web/serverfarms"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "AuditDisksUnusedResourcesCostOptimization",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-Disks-UnusedResourcesCostOptimization",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectDisks')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AuditPublicIpAddressesUnusedResourcesCostOptimization",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-PublicIpAddresses-UnusedResourcesCostOptimization",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectPublicIpAddresses')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AuditServerFarmsUnusedResourcesCostOptimization",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-ServerFarms-UnusedResourcesCostOptimization",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectServerFarms')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AuditAzureHybridBenefitUnusedResourcesCostOptimization",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-AzureHybridBenefit",
                  "parameters": {
                    "effect": {
                      "value": "Audit"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Audit-UnusedResourcesCostOptimization",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Audit-UnusedResourcesCostOptimization",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/deny-publicpaasendpoints": {
            "properties": {
              "displayName": "Public network access should be disabled for PaaS services",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that prevents creation of Azure PaaS services with exposed public endpoints",
              "metadata": {
                "version": "5.1.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8711067Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "CosmosPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for CosmosDB",
                    "description": "This policy denies that Cosmos database accounts  are created with out public network access is disabled."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "KeyVaultPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for KeyVault",
                    "description": "This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "SqlServerPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access on Azure SQL Database should be disabled",
                    "description": "This policy denies creation of Sql servers with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "StoragePublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access onStorage accounts should be disabled",
                    "description": "This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "AKSPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access on AKS API should be disabled",
                    "description": "This policy denies  the creation of  Azure Kubernetes Service non-private clusters"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "ACRPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access on Azure Container Registry disabled",
                    "description": "This policy denies the creation of Azure Container Registries with exposed public endpoints "
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "AFSPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access on Azure File Sync disabled",
                    "description": "This policy denies the creation of Azure File Sync instances with exposed public endpoints "
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "PostgreSQLFlexPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for PostgreSql Flexible Server",
                    "description": "This policy denies creation of PostgreSQL Flexible DB accounts with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "postgreSqlPublicNetworkAccess": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Public network access should be disabled for PostgreSQL servers",
                    "description": "This policy denies creation of PostgreSQL DB accounts with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "MySQLFlexPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for MySQL Flexible Server",
                    "description": "This policy denies creation of MySql Flexible Server DB accounts with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "BatchPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for Azure Batch Instances",
                    "description": "This policy denies creation of Azure Batch Instances with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "MariaDbPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for Azure MariaDB",
                    "description": "This policy denies creation of Azure MariaDB with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "MlPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for Azure Machine Learning",
                    "description": "This policy denies creation of Azure Machine Learning with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "RedisCachePublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for Azure Cache for Redis",
                    "description": "This policy denies creation of Azure Cache for Redis with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "BotServicePublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for Bot Service",
                    "description": "This policy denies creation of Bot Service with exposed public endpoints. Bots should be set to 'isolated only' mode"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "AutomationPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for Automation accounts",
                    "description": "This policy denies creation of Automation accounts with exposed public endpoints. Bots should be set to 'isolated only' mode"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "AppConfigPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for App Configuration",
                    "description": "This policy denies creation of App Configuration with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "FunctionPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for Function apps",
                    "description": "This policy denies creation of Function apps with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "FunctionAppSlotPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for Function apps",
                    "description": "This policy denies creation of Function apps with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "AsePublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for App Service Environment apps",
                    "description": "This policy denies creation of App Service Environment apps with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "AsPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for App Service apps",
                    "description": "This policy denies creation of App Service apps with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "ApiManPublicIpDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Public network access should be disabled for API Management services",
                    "description": "This policy denies creation of API Management services with exposed public endpoints"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "ContainerAppsEnvironmentDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Container Apps environment should disable public network access",
                    "description": "This policy denies creation of Container Apps Environment with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "AsrVaultDenyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Recovery Services vaults should disable public network access",
                    "description": "This policy denies creation of Azure Recovery Services vaults with exposed public endpoints"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "logicAppPublicNetworkAccessEffect": {
                  "type": "String",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appSlotsPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cognitiveSearchPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "managedDiskPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "containerAppsPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adxPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adfPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "eventGridPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "eventGridTopicPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "eventHubNamespacesPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultManagedHsmDisablePublicNetwork": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "mySqlPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cognitiveServicesNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cognitiveServicesPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "serviceBusDisablePublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "sqlManagedPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountsPublicAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "synapsePublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "avdHostPoolPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "avdWorkspacePublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "grafanaPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "CosmosDenyPaasPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/797b37f7-06b8-444c-b1ad-fc62867f335a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('CosmosPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "KeyVaultDenyPaasPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/405c5871-3e91-4644-8a63-58e19d68ff5b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('KeyVaultPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SqlServerDenyPaasPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SqlServerPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StorageDenyPaasPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b2982f36-99f2-4db5-8eff-283140c09693",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('StoragePublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AKSDenyPaasPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/040732e8-d947-40b8-95d6-854c95024bf8",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AKSPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ACRDenyPaasPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0fdf0491-d080-4575-b627-ad0e843cba0f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('ACRPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AFSDenyPaasPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/21a8cd35-125e-4d13-b82d-2e19b7208bb7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AFSPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "PostgreSQLFlexDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5e1de0e3-42cb-4ebc-a86d-61d0c619ca48",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('PostgreSQLFlexPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-PostgreSql-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b52376f7-9612-48a1-81cd-1ffe4b61032c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('postgreSqlPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MySQLFlexDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c9299215-ae47-4f50-9c54-8a392f68a052",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('MySQLFlexPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "BatchDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/74c5a0ae-5e48-4738-b093-65e23a060488",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('BatchPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MariaDbDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fdccbe47-f3e3-4213-ad5d-ea459b2fa077",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('MariaDbPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MlDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/438c38d2-3772-465a-a9cc-7a6666a275ce",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('MlPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "RedisCacheDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/470baccb-7e51-4549-8b1a-3e5be069f663",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('RedisCachePublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "BotServiceDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5e8168db-69e3-4beb-9822-57cb59202a9d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('BotServicePublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AutomationDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/955a914f-bf86-4f0e-acd5-e0766b0efcb6",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AutomationPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AppConfigDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3d9f5e4c-9947-4579-9539-2a7695fbc187",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AppConfigPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "FunctionDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/969ac98b-88a8-449f-883c-2e9adb123127",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('FunctionPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "FunctionAppSlotsDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/11c82d0c-db9f-4d7b-97c5-f3f9aa957da2",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('FunctionAppSlotPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AseDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2d048aca-6479-4923-88f5-e2ac295d9af3",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AsePublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AsDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1b5ef780-c53c-4a64-87f3-bb9c8c8094ba",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AsPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ApiManDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/df73bd95-24da-4a4f-96b9-4e8b94b402bd",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('ApiManPublicIpDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ContainerAppsEnvironmentDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d074ddf8-01a5-4b5e-a2b8-964aed452c0a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('ContainerAppsEnvironmentDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerApps-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/783ea2a8-b8fd-46be-896a-9ae79643a0b1",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerAppsPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AsrVaultDenyPublicIP",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9ebbbba3-4d65-4da9-bb67-b22cfaaff090",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AsrVaultDenyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-LogicApp-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-LogicApp-Public-Network",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('logicAppPublicNetworkAccessEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppSlots-Public",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/701a595d-38fb-4a66-ae6d-fb3735217622",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appSlotsPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-CognitiveSearch-PublicEndpoint",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ee980b6d-0eca-4501-8d54-f6290fd512c3",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveSearchPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ManagedDisk-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8405fdab-1faf-48aa-b702-999c9c172094",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('managedDiskPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ADX-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/43bc7be6-5e69-4b0d-a2bb-e815557ca673",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adxPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Adf-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1cf164be-6819-4a50-b8fa-4bcaa4f98fb6",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adfPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EventGrid-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f8f774be-6aee-492a-9e29-486ef81f3a68",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventGridPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EventGrid-Topic-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1adadefe-5f21-44f7-b931-a59b54ccdb45",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventGridTopicPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EH-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0602787f-9896-402a-a6e1-39ee63ee435e",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventHubNamespacesPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Hms-PublicNetwork",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/19ea9d63-adee-4431-a95e-1913c6c1c75f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultManagedHsmDisablePublicNetwork')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-MySql-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d9844e8a-1437-4aeb-a32c-0c992f056095",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('mySqlPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Cognitive-Services-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0725b4dd-7e76-479c-a735-68e7ee23d5ca",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveServicesPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Cognitive-Services-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/037eea7a-bd0a-46c5-9a66-03aea78705d3",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveServicesNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Sb-PublicEndpoint",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cbd11fd3-3002-4907-b6c8-579f0e700e13",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('serviceBusDisablePublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Sql-Managed-Public-Endpoint",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9dfea752-dd46-4766-aed1-c355fa93fb91",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('sqlManagedPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Public-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4fa4b6c0-31ca-4c0d-b10d-24b96f62a751",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountsPublicAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Synapse-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/38d8df46-cf4e-4073-8e03-48c24b29de0d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapsePublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Workspace-PublicNetworkAccess",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/87ac3038-c07a-4b92-860d-29e270a4f3cd",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('avdWorkspacePublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Hostpool-PublicNetworkAccess",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c25dcf31-878f-4eba-98eb-0818fdc6a334",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('avdHostPoolPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Grafana-PublicNetworkAccess",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e8775d5a-73b7-4977-a39b-833ef0114628",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('grafanaPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Deny-PublicPaaSEndpoints",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/denyaction-deleteprotection": {
            "properties": {
              "displayName": "DenyAction Delete - Activity Log Settings and Diagnostic Settings",
              "policyType": "Custom",
              "description": "Enforces DenyAction - Delete on Activity Log Settings and Diagnostic Settings.",
              "metadata": {
                "version": "1.0.0",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8298477Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {},
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "DenyActionDelete-DiagnosticSettings",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/DenyAction-DiagnosticLogs",
                  "parameters": {},
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DenyActionDelete-ActivityLogSettings",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/DenyAction-ActivityLogs",
                  "parameters": {},
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/DenyAction-DeleteProtection",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "DenyAction-DeleteProtection",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/deploy-aum-checkupdates": {
            "properties": {
              "displayName": "Configure periodic checking for missing system updates on azure virtual machines and Arc-enabled virtual machines",
              "policyType": "Custom",
              "description": "Configure auto-assessment (every 24 hours) for OS updates. You can control the scope of assignment according to machine subscription, resource group, location or tag. Learn more about this for Windows: https://aka.ms/computevm-windowspatchassessmentmode, for Linux: https://aka.ms/computevm-linuxpatchassessmentmode.",
              "metadata": {
                "version": "1.0.0",
                "category": "Security Center",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8854496Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "assessmentMode": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Assessment mode",
                    "description": "Assessment mode for the machines."
                  },
                  "allowedValues": [
                    "ImageDefault",
                    "AutomaticByPlatform"
                  ],
                  "defaultValue": "AutomaticByPlatform"
                },
                "locations": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Machines locations",
                    "description": "The list of locations from which machines need to be targeted.",
                    "strongType": "location"
                  },
                  "defaultValue": []
                },
                "tagValues": {
                  "type": "Object",
                  "metadata": {
                    "displayName": "Tags on machines",
                    "description": "The list of tags that need to matched for getting target machines."
                  },
                  "defaultValue": {}
                },
                "tagOperator": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Tag operator",
                    "description": "Matching condition for resource tags"
                  },
                  "allowedValues": [
                    "All",
                    "Any"
                  ],
                  "defaultValue": "Any"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "azureUpdateManagerVmCheckUpdateWindows",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/59efceea-0c96-497e-a4a1-4eb2290dac15",
                  "parameters": {
                    "assessmentMode": {
                      "value": "[parameters('assessmentMode')]"
                    },
                    "osType": {
                      "value": "Windows"
                    },
                    "locations": {
                      "value": "[parameters('locations')]"
                    },
                    "tagValues": {
                      "value": "[parameters('tagValues')]"
                    },
                    "tagOperator": {
                      "value": "[parameters('tagOperator')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "azureUpdateManagerVmCheckUpdateLinux",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/59efceea-0c96-497e-a4a1-4eb2290dac15",
                  "parameters": {
                    "assessmentMode": {
                      "value": "[parameters('assessmentMode')]"
                    },
                    "osType": {
                      "value": "Linux"
                    },
                    "locations": {
                      "value": "[parameters('locations')]"
                    },
                    "tagValues": {
                      "value": "[parameters('tagValues')]"
                    },
                    "tagOperator": {
                      "value": "[parameters('tagOperator')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "azureUpdateManagerVmArcCheckUpdateWindows",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bfea026e-043f-4ff4-9d1b-bf301ca7ff46",
                  "parameters": {
                    "assessmentMode": {
                      "value": "[parameters('assessmentMode')]"
                    },
                    "osType": {
                      "value": "Windows"
                    },
                    "locations": {
                      "value": "[parameters('locations')]"
                    },
                    "tagValues": {
                      "value": "[parameters('tagValues')]"
                    },
                    "tagOperator": {
                      "value": "[parameters('tagOperator')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "azureUpdateManagerVmArcCheckUpdateLinux",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bfea026e-043f-4ff4-9d1b-bf301ca7ff46",
                  "parameters": {
                    "assessmentMode": {
                      "value": "[parameters('assessmentMode')]"
                    },
                    "osType": {
                      "value": "Linux"
                    },
                    "locations": {
                      "value": "[parameters('locations')]"
                    },
                    "tagValues": {
                      "value": "[parameters('tagValues')]"
                    },
                    "tagOperator": {
                      "value": "[parameters('tagOperator')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-AUM-CheckUpdates",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Deploy-AUM-CheckUpdates",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/deploy-diagnostics-loganalytics": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Diagnostic Settings to Azure Services",
              "policyType": "Custom",
              "description": "This policy set deploys the configurations of application Azure resources to forward diagnostic logs and metrics to an Azure Log Analytics workspace. This policy set is superseded by built-in initiative https://www.azadvertizer.net/azpolicyinitiativesadvertizer/0884adba-2312-4468-abeb-5422caed1038.html.",
              "metadata": {
                "deprecated": true,
                "version": "2.2.0-deprecated",
                "category": "Monitoring",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.9702688Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "displayName": "Log Analytics workspace",
                    "strongType": "omsWorkspace"
                  }
                },
                "profileName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Profile name",
                    "description": "The diagnostic settings profile name"
                  },
                  "defaultValue": "setbypolicy"
                },
                "ACILogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Container Instances to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The Policy willset the diagnostic with all metrics enabled."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "ACRLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Container Registry to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics  enabled."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "AKSLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "AnalysisServiceLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "APIforFHIRLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Azure API for FHIR to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Azure API for FHIR to stream to a Log Analytics workspace when any Azure API for FHIR which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "APIMgmtLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for API Management to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "APIMgmtLogAnalyticsDestinationType": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Destination table for the Diagnostic Setting for API Management to Log Analytics workspace",
                    "description": "Destination table for the diagnostic setting for API Management to Log Analytics workspace, allowed values are 'Dedicated' (for resource-specific) and 'AzureDiagnostics'. Default value is 'AzureDiagnostics'"
                  },
                  "allowedValues": [
                    "AzureDiagnostics",
                    "Dedicated"
                  ],
                  "defaultValue": "AzureDiagnostics"
                },
                "ApplicationGatewayLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "AutomationLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Automation to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "BastionLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Azure Bastion to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Azure Bastion to stream to a Log Analytics workspace when any Bastion which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "BatchLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Batch to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "CDNEndpointsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "CognitiveServicesLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "CosmosLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "DatabricksLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Databricks to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "DataExplorerClusterLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Azure Data Explorer Cluster to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Azure Data Explorer Cluster to stream to a Log Analytics workspace when any Azure Data Explorer Cluster which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "DataFactoryLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Data Factory to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "DataLakeStoreLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "DataLakeAnalyticsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "EventGridSubLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "EventGridTopicLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "EventHubLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "EventSystemTopicLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "ExpressRouteLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "FirewallLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Firewall to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "FirewallLogAnalyticsDestinationType": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Destination table for the Diagnostic Setting for Firewall to Log Analytics workspace",
                    "description": "Destination table for the diagnostic setting for Firewall to Log Analytics workspace, allowed values are 'Dedicated' (for resource-specific) and 'AzureDiagnostics'. Default value is 'AzureDiagnostics'"
                  },
                  "allowedValues": [
                    "AzureDiagnostics",
                    "Dedicated"
                  ],
                  "defaultValue": "AzureDiagnostics"
                },
                "FrontDoorLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Front Door to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "FunctionAppLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "HDInsightLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for HDInsight to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "IotHubLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "KeyVaultLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Key Vault to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "LoadBalancerLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "LogAnalyticsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Log Analytics to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Log Analytics to stream to a Log Analytics workspace when any Log Analytics workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category Audit enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "LogicAppsISELogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "LogicAppsWFLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Logic Apps Workflows to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Logic Apps Workflows to stream to a Log Analytics workspace when any Logic Apps Workflows which are missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "MariaDBLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for MariaDB to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "MediaServiceLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Azure Media Service to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Azure Media Service to stream to a Log Analytics workspace when any Azure Media Service which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "MlWorkspaceLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "MySQLLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "NetworkSecurityGroupsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "NetworkNICLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "PostgreSQLLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "PowerBIEmbeddedLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "NetworkPublicIPNicLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "RedisCacheLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "RelayLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Relay to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SearchServicesLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Search Services to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "ServiceBusLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SignalRLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for SignalR to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SQLDBsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SQLElasticPoolsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SQLMLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "StreamAnalyticsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "TimeSeriesInsightsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "TrafficManagerLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "VirtualNetworkLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "VirtualMachinesLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "VMSSLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "VNetGWLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "AppServiceLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "AppServiceWebappLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for App Service to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "AVDScalingPlansLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for AVD Scaling Plans to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for AVD Scaling Plans to stream to a Log Analytics workspace when any application groups which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "WVDAppGroupsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for AVD Application Groups to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for AVD Application groups to stream to a Log Analytics workspace when any application groups which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "WVDWorkspaceLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for AVD Workspace to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for AVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "WVDHostPoolsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for AVD Host pools to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for AVD Host pools to stream to a Log Analytics workspace when any host pool which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "StorageAccountsLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for Storage Accounts to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for Storage Accounts to stream to a Log Analytics workspace when any storage account which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "VWanS2SVPNGWLogAnalyticsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy Diagnostic Settings for VWAN S2S VPN gateway to Log Analytics workspace",
                    "description": "Deploys the diagnostic settings for VWAN S2S VPN gateway to stream to a Log Analytics workspace when any storage account which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "StorageAccountDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/59759c62-9a22-4cdf-ae64-074495983fef",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('StorageAccountsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StorageAccountBlobServicesDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b4fe1a3b-0715-4c6c-a5ea-ffc33cf823cb",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('StorageAccountsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StorageAccountFileServicesDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/25a70cc8-2bd4-47f1-90b6-1478e4662c96",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('StorageAccountsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StorageAccountQueueServicesDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7bd000e3-37c7-4928-9f31-86c4b77c5c45",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('StorageAccountsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StorageAccountTableServicesDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2fb86bf3-d221-43d1-96d1-2434af34eaa0",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('StorageAccountsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AVDScalingPlansDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('AVDScalingPlansLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "WVDAppGroupDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('WVDAppGroupsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "WVDWorkspaceDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('WVDWorkspaceLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "WVDHostPoolsDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('WVDHostPoolsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ACIDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('ACILogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ACRDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('ACRLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AKSDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c66c325-74c8-42fd-a286-a74b0e2939d8",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('AKSLogAnalyticsEffect')]"
                    },
                    "diagnosticsSettingNameToUse": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AnalysisServiceDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('AnalysisServiceLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "APIforFHIRDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('APIforFHIRLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "APIMgmtDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "logAnalyticsDestinationType": {
                      "value": "[parameters('APIMgmtLogAnalyticsDestinationType')]"
                    },
                    "effect": {
                      "value": "[parameters('APIMgmtLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ApplicationGatewayDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('ApplicationGatewayLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AutomationDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('AutomationLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "BastionDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('BastionLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "BatchDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c84e5349-db6d-4769-805e-e14037dab9b5",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('BatchLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "CDNEndpointsDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('CDNEndpointsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "CognitiveServicesDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('CognitiveServicesLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "CosmosDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('CosmosLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DatabricksDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('DatabricksLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DataExplorerClusterDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('DataExplorerClusterLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DataFactoryDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('DataFactoryLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DataLakeStoreDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d56a5a7c-72d7-42bc-8ceb-3baf4c0eae03",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('DataLakeStoreLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DataLakeAnalyticsDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('DataLakeAnalyticsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "EventGridSubDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('EventGridSubLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "EventGridTopicDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('EventGridTopicLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "EventHubDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f6e93e8-6b31-41b1-83f6-36e449a42579",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('EventHubLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "EventSystemTopicDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('EventSystemTopicLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ExpressRouteDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('ExpressRouteLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "FirewallDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "logAnalyticsDestinationType": {
                      "value": "[parameters('FirewallLogAnalyticsDestinationType')]"
                    },
                    "effect": {
                      "value": "[parameters('FirewallLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "FrontDoorDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('FrontDoorLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "FunctionAppDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('FunctionAppLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "HDInsightDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('HDInsightLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "IotHubDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('IotHubLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "KeyVaultDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bef3f64c-5290-43b7-85b0-9b254eef4c47",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('KeyVaultLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "LoadBalancerDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('LoadBalancerLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "LogAnalyticsDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('LogAnalyticsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "LogicAppsISEDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('LogicAppsISELogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "LogicAppsWFDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b889a06c-ec72-4b03-910a-cb169ee18721",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('LogicAppsWFLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MariaDBDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('MariaDBLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MediaServiceDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('MediaServiceLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MlWorkspaceDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('MlWorkspaceLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MySQLDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('MySQLLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "NetworkSecurityGroupsDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('NetworkSecurityGroupsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "NetworkNICDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('NetworkNICLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "PostgreSQLDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('PostgreSQLLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "PowerBIEmbeddedDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('PowerBIEmbeddedLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "NetworkPublicIPNicDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/752154a7-1e0f-45c6-a880-ac75a7e4f648",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('NetworkPublicIPNicLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    },
                    "metricsEnabled": {
                      "value": "True"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "RecoveryVaultDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c717fb0c-d118-4c43-ab3d-ece30ac81fb3",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "RedisCacheDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('RedisCacheLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "RelayDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('RelayLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SearchServicesDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/08ba64b8-738f-4918-9686-730d2ed79c7d",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('SearchServicesLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ServiceBusDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/04d53d87-841c-4f23-8a5b-21564380b55e",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('ServiceBusLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SignalRDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('SignalRLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLDatabaseDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b79fa14e-238a-4c2d-b376-442ce508fc84",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('SQLDBsLogAnalyticsEffect')]"
                    },
                    "diagnosticsSettingNameToUse": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLElasticPoolsDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('SQLElasticPoolsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLMDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('SQLMLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StreamAnalyticsDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/237e0f7e-b0e8-4ec4-ad46-8c12cb66d673",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('StreamAnalyticsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "TimeSeriesInsightsDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('TimeSeriesInsightsLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "TrafficManagerDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('TrafficManagerLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "VirtualNetworkDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('VirtualNetworkLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "VirtualMachinesDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('VirtualMachinesLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "VMSSDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('VMSSLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "VNetGWDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('VNetGWLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AppServiceDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('AppServiceLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AppServiceWebappDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('AppServiceWebappLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "VWanS2SVPNGWDeployDiagnosticLogDeployLogAnalytics",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VWanS2SVPNGW",
                  "parameters": {
                    "logAnalytics": {
                      "value": "[parameters('logAnalytics')]"
                    },
                    "effect": {
                      "value": "[parameters('VWanS2SVPNGWLogAnalyticsEffect')]"
                    },
                    "profileName": {
                      "value": "[parameters('profileName')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Deploy-Diagnostics-LogAnalytics",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/deploy-mdfc-config": {
            "properties": {
              "displayName": "[Deprecated]: Deploy Microsoft Defender for Cloud configuration",
              "policyType": "Custom",
              "description": "Deploy Microsoft Defender for Cloud configuration. Superseded by https://www.azadvertizer.net/azpolicyinitiativesadvertizer/Deploy-MDFC-Config_20240319.html",
              "metadata": {
                "version": "7.0.0-deprecated",
                "category": "Security Center",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "Deploy-MDFC-Config_20240319",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.9098228Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "emailSecurityContact": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Security contacts email address",
                    "description": "Provide email address for Microsoft Defender for Cloud contact details"
                  }
                },
                "minimalSeverity": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Minimal severity",
                    "description": "Defines the minimal alert severity which will be sent as email notifications"
                  },
                  "allowedValues": [
                    "High",
                    "Medium",
                    "Low"
                  ],
                  "defaultValue": "High"
                },
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Primary Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "ascExportResourceGroupName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Resource Group name for the export to Log Analytics workspace configuration",
                    "description": "The resource group name where the export to Log Analytics workspace configuration is created. If you enter a name for a resource group that doesn't exist, it'll be created in the subscription. Note that each resource group can only have one export to Log Analytics workspace configured."
                  }
                },
                "ascExportResourceGroupLocation": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Resource Group location for the export to Log Analytics workspace configuration",
                    "description": "The location where the resource group and the export to Log Analytics workspace configuration are created."
                  }
                },
                "enableAscForCosmosDbs": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForSql": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForSqlOnVm": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForDns": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForArm": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForOssDb": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForAppServices": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForKeyVault": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForStorage": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForContainers": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForServers": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForServersVulnerabilityAssessments": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "vulnerabilityAssessmentProvider": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Vulnerability assessment provider type",
                    "description": "Select the vulnerability assessment solution to provision to machines."
                  },
                  "allowedValues": [
                    "default",
                    "mdeTvm"
                  ],
                  "defaultValue": "default"
                },
                "enableAscForApis": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForCspm": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "defenderForOssDb",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/44433aa3-7ec2-4002-93ea-65c65ff0310a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForOssDb')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForVM",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8e86a5b6-b9bd-49d1-8e21-4bb8a0862222",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForServers')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForVMVulnerabilityAssessment",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/13ce0167-8ca6-4048-8e6b-f996402e3c1b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForServersVulnerabilityAssessments')]"
                    },
                    "vaType": {
                      "value": "[parameters('vulnerabilityAssessmentProvider')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForSqlServerVirtualMachines",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/50ea7265-7d8c-429e-9a7d-ca1f410191c3",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForSqlOnVm')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForAppServices",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b40e7bcd-a1e5-47fe-b9cf-2f534d0bfb7d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForAppServices')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForStorageAccountsV2",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cfdc5972-75b3-4418-8ae1-7f5c36839390",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForStorage')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderforContainers",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c9ddb292-b203-4738-aead-18e2716e858f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForContainers')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderforKubernetes",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/64def556-fbad-4622-930e-72d1d5589bf5",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForContainers')]"
                    },
                    "logAnalyticsWorkspaceResourceId": {
                      "value": "[parameters('logAnalytics')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "azurePolicyForKubernetes",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForContainers')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForKeyVaults",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f725891-01c0-420a-9059-4fa46cb770b7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForKeyVault')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForDns",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2370a3c1-4a25-4283-a91a-c9c1a145fb2f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForDns')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForArm",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b7021b2b-08fd-4dc0-9de7-3c6ece09faf9",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForArm')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForSqlPaas",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b99b73e7-074b-4089-9395-b7236f094491",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForSql')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForCosmosDbs",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/82bf5b87-728b-4a74-ba4d-6123845cf542",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForCosmosDbs')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForApis",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e54d2be9-5f2e-4d65-98e4-4f0e670b23d6",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForApis')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForCspm",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/689f7782-ef2c-4270-a6d0-7664869076bd",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForCspm')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "securityEmailContact",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts",
                  "parameters": {
                    "emailSecurityContact": {
                      "value": "[parameters('emailSecurityContact')]"
                    },
                    "minimalSeverity": {
                      "value": "[parameters('minimalSeverity')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ascExport",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ffb6f416-7bd2-4488-8828-56585fef2be9",
                  "parameters": {
                    "resourceGroupName": {
                      "value": "[parameters('ascExportResourceGroupName')]"
                    },
                    "resourceGroupLocation": {
                      "value": "[parameters('ascExportResourceGroupLocation')]"
                    },
                    "workspaceResourceId": {
                      "value": "[parameters('logAnalytics')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "migrateToMdeTvm",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/766e621d-ba95-4e43-a6f2-e945db3d7888",
                  "parameters": {},
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Deploy-MDFC-Config",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/deploy-mdfc-config_20240319": {
            "properties": {
              "displayName": "Deploy Microsoft Defender for Cloud configuration",
              "policyType": "Custom",
              "description": "Deploy Microsoft Defender for Cloud configuration",
              "metadata": {
                "version": "1.0.0",
                "category": "Security Center",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "replacesPolicy": "Deploy-MDFC-Config",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8782326Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "emailSecurityContact": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Security contacts email address",
                    "description": "Provide email address for Microsoft Defender for Cloud contact details"
                  }
                },
                "minimalSeverity": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Minimal severity",
                    "description": "Defines the minimal alert severity which will be sent as email notifications"
                  },
                  "allowedValues": [
                    "High",
                    "Medium",
                    "Low"
                  ],
                  "defaultValue": "High"
                },
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Primary Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace"
                  }
                },
                "ascExportResourceGroupName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Resource Group name for the export to Log Analytics workspace configuration",
                    "description": "The resource group name where the export to Log Analytics workspace configuration is created. If you enter a name for a resource group that doesn't exist, it'll be created in the subscription. Note that each resource group can only have one export to Log Analytics workspace configured."
                  }
                },
                "ascExportResourceGroupLocation": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Resource Group location for the export to Log Analytics workspace configuration",
                    "description": "The location where the resource group and the export to Log Analytics workspace configuration are created."
                  }
                },
                "enableAscForCosmosDbs": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForSql": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForSqlOnVm": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForArm": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForOssDb": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForAppServices": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForKeyVault": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForStorage": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForContainers": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForServers": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "enableAscForServersVulnerabilityAssessments": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "vulnerabilityAssessmentProvider": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Vulnerability assessment provider type",
                    "description": "Select the vulnerability assessment solution to provision to machines."
                  },
                  "allowedValues": [
                    "default",
                    "mdeTvm"
                  ],
                  "defaultValue": "mdeTvm"
                },
                "enableAscForCspm": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "defenderForOssDb",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/44433aa3-7ec2-4002-93ea-65c65ff0310a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForOssDb')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForVM",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8e86a5b6-b9bd-49d1-8e21-4bb8a0862222",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForServers')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForVMVulnerabilityAssessment",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/13ce0167-8ca6-4048-8e6b-f996402e3c1b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForServersVulnerabilityAssessments')]"
                    },
                    "vaType": {
                      "value": "[parameters('vulnerabilityAssessmentProvider')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForSqlServerVirtualMachines",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/50ea7265-7d8c-429e-9a7d-ca1f410191c3",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForSqlOnVm')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForAppServices",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b40e7bcd-a1e5-47fe-b9cf-2f534d0bfb7d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForAppServices')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForStorageAccountsV2",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cfdc5972-75b3-4418-8ae1-7f5c36839390",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForStorage')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderforContainers",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c9ddb292-b203-4738-aead-18e2716e858f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForContainers')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderforKubernetes",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/64def556-fbad-4622-930e-72d1d5589bf5",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForContainers')]"
                    },
                    "logAnalyticsWorkspaceResourceId": {
                      "value": "[parameters('logAnalytics')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "azurePolicyForKubernetes",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForContainers')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForKeyVaults",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f725891-01c0-420a-9059-4fa46cb770b7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForKeyVault')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForArm",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b7021b2b-08fd-4dc0-9de7-3c6ece09faf9",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForArm')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForSqlPaas",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b99b73e7-074b-4089-9395-b7236f094491",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForSql')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForCosmosDbs",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/82bf5b87-728b-4a74-ba4d-6123845cf542",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForCosmosDbs')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForCspm",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/689f7782-ef2c-4270-a6d0-7664869076bd",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('enableAscForCspm')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "securityEmailContact",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts",
                  "parameters": {
                    "emailSecurityContact": {
                      "value": "[parameters('emailSecurityContact')]"
                    },
                    "minimalSeverity": {
                      "value": "[parameters('minimalSeverity')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ascExport",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ffb6f416-7bd2-4488-8828-56585fef2be9",
                  "parameters": {
                    "resourceGroupName": {
                      "value": "[parameters('ascExportResourceGroupName')]"
                    },
                    "resourceGroupLocation": {
                      "value": "[parameters('ascExportResourceGroupLocation')]"
                    },
                    "workspaceResourceId": {
                      "value": "[parameters('logAnalytics')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "migrateToMdeTvm",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/766e621d-ba95-4e43-a6f2-e945db3d7888",
                  "parameters": {},
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config_20240319",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Deploy-MDFC-Config_20240319",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/deploy-mdfc-defendersql-ama": {
            "properties": {
              "displayName": "[Deprecated]: Configure SQL VM and Arc-enabled SQL Servers to install Microsoft Defender for SQL and AMA with a user-defined LAW",
              "policyType": "Custom",
              "description": "Initiative is deprecated as the built-in initiative now supports bringing your own UAMI and DCR. Superseded by https://www.azadvertizer.net/azpolicyinitiativesadvertizer/de01d381-bae9-4670-8870-786f89f49e26.html",
              "metadata": {
                "version": "1.0.1-deprecated",
                "category": "Security Center",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "de01d381-bae9-4670-8870-786f89f49e26",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.9039474Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "workspaceRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Workspace region",
                    "description": "Region of the Log Analytics workspace destination for the Data Collection Rule.",
                    "strongType": "location"
                  }
                },
                "dcrName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Name",
                    "description": "Name of the Data Collection Rule."
                  }
                },
                "dcrResourceGroup": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Resource Group",
                    "description": "Resource Group of the Data Collection Rule."
                  }
                },
                "dcrId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Data Collection Rule Id",
                    "description": "Id of the Data Collection Rule."
                  }
                },
                "userWorkspaceResourceId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Workspace Resource Id",
                    "description": "Workspace resource Id of the Log Analytics workspace destination for the Data Collection Rule.",
                    "strongType": "omsWorkspace"
                  }
                },
                "enableCollectionOfSqlQueriesForSecurityResearch": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "Enable collection of SQL queries for security research",
                    "description": "Enable or disable the collection of SQL queries for security research."
                  },
                  "allowedValues": [
                    true,
                    false
                  ],
                  "defaultValue": false
                },
                "identityResourceGroup": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Identity Resource Group",
                    "description": "The name of the resource group created by the policy."
                  },
                  "defaultValue": ""
                },
                "userAssignedIdentityName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "User Assigned Managed Identity Name",
                    "description": "The name of the user assigned managed identity."
                  },
                  "defaultValue": ""
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "defenderForSqlArcAma",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3592ff98-9787-443a-af59-4505d0fe0786",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForSqlArcMdsql",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/65503269-6a54-4553-8a28-0065a8e6d929",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForSqlArcMdsqlDcr",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MDFC-Arc-Sql-DefenderSQL-DCR",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    },
                    "userWorkspaceResourceId": {
                      "value": "[parameters('userWorkspaceResourceId')]"
                    },
                    "workspaceRegion": {
                      "value": "[parameters('workspaceRegion')]"
                    },
                    "enableCollectionOfSqlQueriesForSecurityResearch": {
                      "value": "[parameters('enableCollectionOfSqlQueriesForSecurityResearch')]"
                    },
                    "dcrName": {
                      "value": "[parameters('dcrName')]"
                    },
                    "dcrResourceGroup": {
                      "value": "[parameters('dcrResourceGroup')]"
                    },
                    "dcrId": {
                      "value": "[parameters('dcrId')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForSqlArcDcrAssociation",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MDFC-Arc-SQL-DCR-Association",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    },
                    "workspaceRegion": {
                      "value": "[parameters('workspaceRegion')]"
                    },
                    "dcrName": {
                      "value": "[parameters('dcrName')]"
                    },
                    "dcrResourceGroup": {
                      "value": "[parameters('dcrResourceGroup')]"
                    },
                    "dcrId": {
                      "value": "[parameters('dcrId')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForSqlAma",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MDFC-SQL-AMA",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    },
                    "identityResourceGroup": {
                      "value": "[parameters('identityResourceGroup')]"
                    },
                    "userAssignedIdentityName": {
                      "value": "[parameters('userAssignedIdentityName')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForSqlMdsql",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MDFC-SQL-DefenderSQL",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    },
                    "workspaceRegion": {
                      "value": "[parameters('workspaceRegion')]"
                    },
                    "dcrResourceGroup": {
                      "value": "[parameters('dcrResourceGroup')]"
                    },
                    "dcrName": {
                      "value": "[parameters('dcrName')]"
                    },
                    "dcrId": {
                      "value": "[parameters('dcrId')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "defenderForSqlMdsqlDcr",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MDFC-SQL-DefenderSQL-DCR",
                  "parameters": {
                    "effect": {
                      "value": "Disabled"
                    },
                    "userWorkspaceResourceId": {
                      "value": "[parameters('userWorkspaceResourceId')]"
                    },
                    "workspaceRegion": {
                      "value": "[parameters('workspaceRegion')]"
                    },
                    "enableCollectionOfSqlQueriesForSecurityResearch": {
                      "value": "[parameters('enableCollectionOfSqlQueriesForSecurityResearch')]"
                    },
                    "dcrName": {
                      "value": "[parameters('dcrName')]"
                    },
                    "dcrResourceGroup": {
                      "value": "[parameters('dcrResourceGroup')]"
                    },
                    "dcrId": {
                      "value": "[parameters('dcrId')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-DefenderSQL-AMA",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Deploy-MDFC-DefenderSQL-AMA",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/deploy-private-dns-zones": {
            "properties": {
              "displayName": "Configure Azure PaaS services to use private DNS zones",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures private endpoints to Azure PaaS services are integrated with Azure Private DNS zones",
              "metadata": {
                "version": "2.2.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.9301394Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "azureFilePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureFilePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureAutomationWebhookPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureAutomationWebhookPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureAutomationDSCHybridPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureAutomationDSCHybridPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureCosmosSQLPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureCosmosSQLPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureCosmosMongoPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureCosmosMongoPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureCosmosCassandraPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureCosmosCassandraPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureCosmosGremlinPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureCosmosGremlinPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureCosmosTablePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureCosmosTablePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureDataFactoryPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureDataFactoryPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureDataFactoryPortalPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureDataFactoryPortalPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureDatabricksPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureDatabricksPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureHDInsightPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureHDInsightPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMigratePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMigratePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageBlobPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageBlobPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageBlobSecPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageBlobSecPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageQueuePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageQueuePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageQueueSecPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageQueueSecPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageFilePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageFilePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageStaticWebPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageStaticWebPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageStaticWebSecPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageStaticWebSecPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageDFSPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageDFSPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageDFSSecPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageDFSSecPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureSynapseSQLPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureSynapseSQLPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureSynapseSQLODPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureSynapseSQLODPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureSynapseDevPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureSynapseDevPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMediaServicesKeyPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMediaServicesKeyPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMediaServicesLivePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMediaServicesLivePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMediaServicesStreamPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMediaServicesStreamPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMonitorPrivateDnsZoneId1": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMonitorPrivateDnsZoneId1",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMonitorPrivateDnsZoneId2": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMonitorPrivateDnsZoneId2",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMonitorPrivateDnsZoneId3": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMonitorPrivateDnsZoneId3",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMonitorPrivateDnsZoneId4": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMonitorPrivateDnsZoneId4",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMonitorPrivateDnsZoneId5": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMonitorPrivateDnsZoneId5",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureWebPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureWebPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureBatchPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureBatchPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureAppPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureAppPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureAsrPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureAsrPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureIotPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureIotPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureKeyVaultPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureKeyVaultPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureSignalRPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureSignalRPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureAppServicesPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureAppServicesPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureEventGridTopicsPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureEventGridTopicsPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureDiskAccessPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureDiskAccessPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureCognitiveServicesPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureCognitiveServicesPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureIotHubsPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureIotHubsPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureEventGridDomainsPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureEventGridDomainsPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureRedisCachePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureRedisCachePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureAcrPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureAcrPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureEventHubNamespacePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureEventHubNamespacePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMachineLearningWorkspacePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMachineLearningWorkspacePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureMachineLearningWorkspaceSecondPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureMachineLearningWorkspaceSecondPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureServiceBusNamespacePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureServiceBusNamespacePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureCognitiveSearchPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureCognitiveSearchPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureBotServicePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureBotServicePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureManagedGrafanaWorkspacePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureManagedGrafanaWorkspacePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureVirtualDesktopHostpoolPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureVirtualDesktopHostpoolPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureVirtualDesktopWorkspacePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureVirtualDesktopWorkspacePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureIotDeviceupdatePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureIotDeviceupdatePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureArcGuestconfigurationPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureArcGuestconfigurationPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureArcHybridResourceProviderPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureArcHybridResourceProviderPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureArcKubernetesConfigurationPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureArcKubernetesConfigurationPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureIotCentralPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureIotCentralPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageTablePrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageTablePrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureStorageTableSecondaryPrivateDnsZoneId": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureStorageTableSecondaryPrivateDnsZoneId",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureSiteRecoveryBackupPrivateDnsZoneID": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureSiteRecoveryBackupPrivateDnsZoneID",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureSiteRecoveryBlobPrivateDnsZoneID": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureSiteRecoveryBlobPrivateDnsZoneID",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "azureSiteRecoveryQueuePrivateDnsZoneID": {
                  "type": "string",
                  "metadata": {
                    "displayName": "azureSiteRecoveryQueuePrivateDnsZoneID",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "description": "Private DNS Zone Identifier"
                  },
                  "defaultValue": ""
                },
                "effect": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "effect1": {
                  "type": "string",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "deployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "deployIfNotExists"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-File-Sync",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/06695360-db88-47f6-b976-7500d4297475",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureFilePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Automation-Webhook",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6dd01e4f-1be1-4e80-9d0b-d109e04cb064",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureAutomationWebhookPrivateDnsZoneId')]"
                    },
                    "privateEndpointGroupId": {
                      "value": "Webhook"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Automation-DSCHybrid",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6dd01e4f-1be1-4e80-9d0b-d109e04cb064",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureAutomationDSCHybridPrivateDnsZoneId')]"
                    },
                    "privateEndpointGroupId": {
                      "value": "DSCAndHybridWorker"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Cosmos-SQL",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureCosmosSQLPrivateDnsZoneId')]"
                    },
                    "privateEndpointGroupId": {
                      "value": "SQL"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Cosmos-MongoDB",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureCosmosMongoPrivateDnsZoneId')]"
                    },
                    "privateEndpointGroupId": {
                      "value": "MongoDB"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Cosmos-Cassandra",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureCosmosCassandraPrivateDnsZoneId')]"
                    },
                    "privateEndpointGroupId": {
                      "value": "Cassandra"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Cosmos-Gremlin",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureCosmosGremlinPrivateDnsZoneId')]"
                    },
                    "privateEndpointGroupId": {
                      "value": "Gremlin"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Cosmos-Table",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureCosmosTablePrivateDnsZoneId')]"
                    },
                    "privateEndpointGroupId": {
                      "value": "Table"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-DataFactory",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86cd96e1-1745-420d-94d4-d3f2fe415aa4",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureDataFactoryPrivateDnsZoneId')]"
                    },
                    "listOfGroupIds": {
                      "value": [
                        "dataFactory"
                      ]
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-DataFactory-Portal",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86cd96e1-1745-420d-94d4-d3f2fe415aa4",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureDataFactoryPortalPrivateDnsZoneId')]"
                    },
                    "listOfGroupIds": {
                      "value": [
                        "portal"
                      ]
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Databricks-UI-Api",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0eddd7f3-3d9b-4927-a07a-806e8ac9486c",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureDatabricksPrivateDnsZoneId')]"
                    },
                    "groupId": {
                      "value": "databricks_ui_api"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Databricks-Browser-AuthN",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0eddd7f3-3d9b-4927-a07a-806e8ac9486c",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureDatabricksPrivateDnsZoneId')]"
                    },
                    "groupId": {
                      "value": "browser_authentication"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-HDInsight",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/43d6e3bd-fc6a-4b44-8b4d-2151d8736a11",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureHDInsightPrivateDnsZoneId')]"
                    },
                    "groupId": {
                      "value": "cluster"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Migrate",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7590a335-57cf-4c95-babd-ecbc8fafeb1f",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureMigratePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-Blob",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/75973700-529f-4de2-b794-fb9b6781b6b0",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageBlobPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-Blob-Sec",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d847d34b-9337-4e2d-99a5-767e5ac9c582",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageBlobSecPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-Queue",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bcff79fb-2b0d-47c9-97e5-3023479b00d1",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageQueuePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-Queue-Sec",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/da9b4ae8-5ddc-48c5-b9c0-25f8abf7a3d6",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageQueueSecPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-File",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6df98d03-368a-4438-8730-a93c4d7693d6",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageFilePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-StaticWeb",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9adab2a5-05ba-4fbd-831a-5bf958d04218",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageStaticWebPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-StaticWeb-Sec",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d19ae5f1-b303-4b82-9ca8-7682749faf0c",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageStaticWebSecPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-DFS",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83c6fe0f-2316-444a-99a1-1ecd8a7872ca",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageDFSPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-DFS-Sec",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/90bd4cb3-9f59-45f7-a6ca-f69db2726671",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageDFSSecPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Synapse-SQL",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e5ed725-f16c-478b-bd4b-7bfa2f7940b9",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureSynapseSQLPrivateDnsZoneId')]"
                    },
                    "targetSubResource": {
                      "value": "Sql"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Synapse-SQL-OnDemand",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e5ed725-f16c-478b-bd4b-7bfa2f7940b9",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureSynapseSQLODPrivateDnsZoneId')]"
                    },
                    "targetSubResource": {
                      "value": "SqlOnDemand"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Synapse-Dev",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e5ed725-f16c-478b-bd4b-7bfa2f7940b9",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureSynapseDevPrivateDnsZoneId')]"
                    },
                    "targetSubResource": {
                      "value": "Dev"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-MediaServices-Key",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b4a7f6c1-585e-4177-ad5b-c2c93f4bb991",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureMediaServicesKeyPrivateDnsZoneId')]"
                    },
                    "groupId": {
                      "value": "keydelivery"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-MediaServices-Live",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b4a7f6c1-585e-4177-ad5b-c2c93f4bb991",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureMediaServicesLivePrivateDnsZoneId')]"
                    },
                    "groupId": {
                      "value": "liveevent"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-MediaServices-Stream",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b4a7f6c1-585e-4177-ad5b-c2c93f4bb991",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureMediaServicesStreamPrivateDnsZoneId')]"
                    },
                    "groupId": {
                      "value": "streamingendpoint"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Monitor",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/437914ee-c176-4fff-8986-7e05eb971365",
                  "parameters": {
                    "privateDnsZoneId1": {
                      "value": "[parameters('azureMonitorPrivateDnsZoneId1')]"
                    },
                    "privateDnsZoneId2": {
                      "value": "[parameters('azureMonitorPrivateDnsZoneId2')]"
                    },
                    "privateDnsZoneId3": {
                      "value": "[parameters('azureMonitorPrivateDnsZoneId3')]"
                    },
                    "privateDnsZoneId4": {
                      "value": "[parameters('azureMonitorPrivateDnsZoneId4')]"
                    },
                    "privateDnsZoneId5": {
                      "value": "[parameters('azureMonitorPrivateDnsZoneId5')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Web",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0b026355-49cb-467b-8ac4-f777874e175a",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureWebPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Batch",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4ec38ebc-381f-45ee-81a4-acbc4be878f8",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureBatchPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-App",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7a860e27-9ca2-4fc6-822d-c2d248c300df",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureAppPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Site-Recovery",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/942bd215-1a66-44be-af65-6a1c0318dbe2",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureAsrPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-IoT",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/aaa64d2d-2fa3-45e5-b332-0b031b9b30e8",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureIotPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-KeyVault",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac673a9a-f77d-4846-b2d8-a57f8e1c01d4",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureKeyVaultPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-SignalR",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0e86710-7fb7-4a6c-a064-32e9b829509e",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureSignalRPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-AppServices",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b318f84a-b872-429b-ac6d-a01b96814452",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureAppServicesPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-EventGridTopics",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/baf19753-7502-405f-8745-370519b20483",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureEventGridTopicsPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect1')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-DiskAccess",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bc05b96c-0b36-4ca9-82f0-5c53f96ce05a",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureDiskAccessPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-CognitiveServices",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c4bc6f10-cb41-49eb-b000-d5ab82e2a091",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureCognitiveServicesPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-IoTHubs",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c99ce9c1-ced7-4c3e-aca0-10e69ce0cb02",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureIotHubsPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect1')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-EventGridDomains",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d389df0a-e0d7-4607-833c-75a6fdac2c2d",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureEventGridDomainsPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect1')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-RedisCache",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e016b22b-e0eb-436d-8fd7-160c4eaed6e2",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureRedisCachePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-ACR",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e9585a95-5b8c-4d03-b193-dc7eb5ac4c32",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureAcrPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-EventHubNamespace",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ed66d4f5-8220-45dc-ab4a-20d1749c74e6",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureEventHubNamespacePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-MachineLearningWorkspace",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ee40564d-486e-4f68-a5ca-7a621edae0fb",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureMachineLearningWorkspacePrivateDnsZoneId')]"
                    },
                    "secondPrivateDnsZoneId": {
                      "value": "[parameters('azureMachineLearningWorkspaceSecondPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-ServiceBusNamespace",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f0fcf93c-c063-4071-9668-c47474bd3564",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureServiceBusNamespacePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-CognitiveSearch",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fbc14a67-53e4-4932-abcc-2049c6706009",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureCognitiveSearchPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-BotService",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6a4e6f44-f2af-4082-9702-033c9e88b9f8",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureBotServicePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  }
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-ManagedGrafanaWorkspace",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4c8537f8-cd1b-49ec-b704-18e82a42fd58",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureManagedGrafanaWorkspacePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  }
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-VirtualDesktopHostpool",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9427df23-0f42-4e1e-bf99-a6133d841c4a",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureVirtualDesktopHostpoolPrivateDnsZoneId')]"
                    },
                    "privateEndpointGroupId": {
                      "value": "connection"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  }
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-VirtualDesktopWorkspace",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/34804460-d88b-4922-a7ca-537165e060ed",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureVirtualDesktopWorkspacePrivateDnsZoneId')]"
                    },
                    "privateEndpointGroupId": {
                      "value": "feed"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  }
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-IoTDeviceupdate",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a222b93a-e6c2-4c01-817f-21e092455b2a",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureIotDeviceupdatePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  }
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Arc",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/55c4db33-97b0-437b-8469-c4f4498f5df9",
                  "parameters": {
                    "privateDnsZoneIdForGuestConfiguration": {
                      "value": "[parameters('azureArcGuestconfigurationPrivateDnsZoneId')]"
                    },
                    "privateDnsZoneIdForHybridResourceProvider": {
                      "value": "[parameters('azureArcHybridResourceProviderPrivateDnsZoneId')]"
                    },
                    "privateDnsZoneIdForKubernetesConfiguration": {
                      "value": "[parameters('azureArcKubernetesConfigurationPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  }
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-IoTCentral",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d627d7c6-ded5-481a-8f2e-7e16b1e6faf6",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureIotCentralPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  }
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-Table",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/028bbd88-e9b5-461f-9424-a1b63a7bee1a",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageTablePrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  }
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Storage-Table-Secondary",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c1d634a5-f73d-4cdd-889f-2cc7006eb47f",
                  "parameters": {
                    "privateDnsZoneId": {
                      "value": "[parameters('azureStorageTableSecondaryPrivateDnsZoneId')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  }
                },
                {
                  "policyDefinitionReferenceId": "DINE-Private-DNS-Azure-Site-Recovery-Backup",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af783da1-4ad1-42be-800d-d19c70038820",
                  "parameters": {
                    "privateDnsZone-Backup": {
                      "value": "[parameters('azureSiteRecoveryBackupPrivateDnsZoneID')]"
                    },
                    "privateDnsZone-Blob": {
                      "value": "[parameters('azureSiteRecoveryBlobPrivateDnsZoneID')]"
                    },
                    "privateDnsZone-Queue": {
                      "value": "[parameters('azureSiteRecoveryQueuePrivateDnsZoneID')]"
                    },
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  }
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Deploy-Private-DNS-Zones",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/deploy-sql-security": {
            "properties": {
              "displayName": "[Deprecated]: Deploy SQL Database built-in SQL security configuration",
              "policyType": "Custom",
              "description": "Deploy auditing, Alert, TDE and SQL vulnerability to SQL Databases when it not exist in the deployment. Superseded by https://www.azadvertizer.net/azpolicyinitiativesadvertizer/Deploy-Sql-Security_20240529.html",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "Deploy-Sql-Security_20240529",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8429602Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "vulnerabilityAssessmentsEmail": {
                  "type": "String",
                  "metadata": {
                    "description": "The email address to send alerts",
                    "displayName": "The email address to send alerts"
                  }
                },
                "vulnerabilityAssessmentsStorageID": {
                  "type": "String",
                  "metadata": {
                    "description": "The storage account ID to store assessments",
                    "displayName": "The storage account ID to store assessments"
                  }
                },
                "SqlDbTdeDeploySqlSecurityEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy SQL Database Transparent Data Encryption ",
                    "description": "Deploy the Transparent Data Encryption when it is not enabled in the deployment"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy SQL Database security Alert Policies configuration with email admin accounts",
                    "description": "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SqlDbAuditingSettingsDeploySqlSecurityEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy SQL database auditing settings",
                    "description": "Deploy auditing settings to SQL Database when it not exist in the deployment"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy SQL Database vulnerability Assessments",
                    "description": "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "SqlDbTdeDeploySqlSecurity",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86a912f6-9a06-4e26-b447-11b16ba8659f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SqlDbTdeDeploySqlSecurityEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SqlDbSecurityAlertPoliciesDeploySqlSecurity",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SqlDbAuditingSettingsDeploySqlSecurity",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SqlDbAuditingSettingsDeploySqlSecurityEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SqlDbVulnerabilityAssessmentsDeploySqlSecurity",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect')]"
                    },
                    "vulnerabilityAssessmentsEmail": {
                      "value": "[parameters('vulnerabilityAssessmentsEmail')]"
                    },
                    "vulnerabilityAssessmentsStorageID": {
                      "value": "[parameters('vulnerabilityAssessmentsStorageID')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Deploy-Sql-Security",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/deploy-sql-security_20240529": {
            "properties": {
              "displayName": "Deploy SQL Database built-in SQL security configuration",
              "policyType": "Custom",
              "description": "Deploy auditing, Alert, TDE and SQL vulnerability to SQL Databases when it not exist in the deployment",
              "metadata": {
                "version": "1.0.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "replacesPolicy": "Deploy-Sql-Security",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7035983Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "vulnerabilityAssessmentsEmail": {
                  "type": "Array",
                  "metadata": {
                    "description": "The email address to send alerts",
                    "displayName": "The email address to send alerts"
                  }
                },
                "vulnerabilityAssessmentsStorageID": {
                  "type": "String",
                  "metadata": {
                    "description": "The storage account ID to store assessments",
                    "displayName": "The storage account ID to store assessments"
                  }
                },
                "SqlDbTdeDeploySqlSecurityEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy SQL Database Transparent Data Encryption ",
                    "description": "Deploy the Transparent Data Encryption when it is not enabled in the deployment"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy SQL Database security Alert Policies configuration with email admin accounts",
                    "description": "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SqlDbAuditingSettingsDeploySqlSecurityEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy SQL database auditing settings",
                    "description": "Deploy auditing settings to SQL Database when it not exist in the deployment"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Deploy SQL Database vulnerability Assessments",
                    "description": "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "SqlDbTdeDeploySqlSecurity",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86a912f6-9a06-4e26-b447-11b16ba8659f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SqlDbTdeDeploySqlSecurityEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SqlDbSecurityAlertPoliciesDeploySqlSecurity",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SqlDbAuditingSettingsDeploySqlSecurity",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SqlDbAuditingSettingsDeploySqlSecurityEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SqlDbVulnerabilityAssessmentsDeploySqlSecurity",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments_20230706",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect')]"
                    },
                    "vulnerabilityAssessmentsEmail": {
                      "value": "[parameters('vulnerabilityAssessmentsEmail')]"
                    },
                    "vulnerabilityAssessmentsStorageID": {
                      "value": "[parameters('vulnerabilityAssessmentsStorageID')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security_20240529",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Deploy-Sql-Security_20240529",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-acsb": {
            "properties": {
              "displayName": "Enforce Azure Compute Security Benchmark compliance auditing",
              "policyType": "Custom",
              "description": "Enforce Azure Compute Security Benchmark compliance auditing for Windows and Linux virtual machines.",
              "metadata": {
                "version": "1.0.0",
                "category": "Guest Configuration",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8385042Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "includeArcMachines": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Include Arc connected servers",
                    "description": "By selecting this option, you agree to be charged monthly per Arc connected machine."
                  },
                  "allowedValues": [
                    "true",
                    "false"
                  ],
                  "defaultValue": "true"
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "GcIdentity",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3cf2ab00-13f1-4d0c-8971-2ac904541a7e",
                  "parameters": {},
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "GcLinux",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/331e8ea8-378a-410f-a2e5-ae22f38bb0da",
                  "parameters": {},
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "GcWindows",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/385f5831-96d4-41db-9a3c-cd3af78aaae6",
                  "parameters": {},
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "WinAcsb",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/72650e9f-97bc-4b2a-ab5f-9781a9fcecbc",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    },
                    "IncludeArcMachines": {
                      "value": "[parameters('includeArcMachines')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "LinAcsb",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fc9b3da7-8347-4380-8e70-0a0361d8dedd",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    },
                    "IncludeArcMachines": {
                      "value": "[parameters('includeArcMachines')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ACSB",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-ACSB",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-alz-decomm": {
            "properties": {
              "displayName": "Enforce policies in the Decommissioned Landing Zone",
              "policyType": "Custom",
              "description": "Enforce policies in the Decommissioned Landing Zone.",
              "metadata": {
                "version": "1.0.0",
                "category": "Decommissioned",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7893482Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "listOfResourceTypesAllowed": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Allowed resource types in the Decommissioned landing zone",
                    "description": "Allowed resource types in the Decommissioned landing zone, default is none.",
                    "strongType": "resourceTypes"
                  },
                  "defaultValue": []
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "DecomDenyResources",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a08ec900-254a-4555-9bf5-e42af04b5c5c",
                  "parameters": {
                    "listOfResourceTypesAllowed": {
                      "value": "[parameters('listOfResourceTypesAllowed')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DecomShutdownMachines",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Vm-autoShutdown",
                  "parameters": {},
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ALZ-Decomm",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-ALZ-Decomm",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-alz-sandbox": {
            "properties": {
              "displayName": "Enforce policies in the Sandbox Landing Zone",
              "policyType": "Custom",
              "description": "Enforce policies in the Sandbox Landing Zone.",
              "metadata": {
                "version": "1.0.0",
                "category": "Sandbox",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7080028Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "listOfResourceTypesNotAllowed": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Not allowed resource types in the Sandbox landing zone",
                    "description": "Not allowed resource types in the Sandbox landing zone, default is none.",
                    "strongType": "resourceTypes"
                  },
                  "defaultValue": []
                },
                "effectNotAllowedResources": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "effectDenyVnetPeering": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "SandboxNotAllowed",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectNotAllowedResources')]"
                    },
                    "listOfResourceTypesNotAllowed": {
                      "value": "[parameters('listOfResourceTypesNotAllowed')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SandboxDenyVnetPeering",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectDenyVnetPeering')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ALZ-Sandbox",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-ALZ-Sandbox",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-backup": {
            "properties": {
              "displayName": "Enforce enhanced recovery and backup policies",
              "policyType": "Custom",
              "description": "Enforce enhanced recovery and backup policies on assigned scopes.",
              "metadata": {
                "version": "1.0.0",
                "category": "Backup",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.9009757Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "checkLockedImmutabilityOnly": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "checkLockedImmutabilityOnly",
                    "description": "This parameter checks if Immutability is locked for Backup Vaults in scope. Selecting 'true' will mark only vaults with Immutability 'Locked' as compliant. Selecting 'false' will mark vaults that have Immutability either 'Enabled' or 'Locked' as compliant."
                  },
                  "allowedValues": [
                    true,
                    false
                  ],
                  "defaultValue": false
                },
                "checkAlwaysOnSoftDeleteOnly": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "CheckAlwaysOnSoftDeleteOnly",
                    "description": "This parameter checks if Soft Delete is 'Locked' for Backup Vaults in scope. Selecting 'true' will mark only vaults with Soft Delete 'AlwaysOn' as compliant. Selecting 'false' will mark vaults that have Soft Delete either 'On' or 'AlwaysOn' as compliant."
                  },
                  "allowedValues": [
                    true,
                    false
                  ],
                  "defaultValue": false
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "BackupBVault-Immutability",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2514263b-bc0d-4b06-ac3e-f262c0979018",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    },
                    "CheckLockedImmutabiltyOnly": {
                      "value": "[parameters('checkLockedImmutabilityOnly')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "BackupRVault-Immutability",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d6f6f560-14b7-49a4-9fc8-d2c3a9807868",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    },
                    "checkLockedImmutabilityOnly": {
                      "value": "[parameters('checkLockedImmutabilityOnly')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "BackupBVault-SoftDelete",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9798d31d-6028-4dee-8643-46102185c016",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    },
                    "checkAlwaysOnSoftDeleteOnly": {
                      "value": "[parameters('checkAlwaysOnSoftDeleteOnly')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "BackupRVault-SoftDelete",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/31b8092a-36b8-434b-9af7-5ec844364148",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    },
                    "checkAlwaysOnSoftDeleteOnly": {
                      "value": "[parameters('checkAlwaysOnSoftDeleteOnly')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "BackupBVault-MUA",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c58e083e-7982-4e24-afdc-be14d312389e",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "BackupRVault-MUA",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c7031eab-0fc0-4cd9-acd0-4497bd66d91a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effect')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Backup",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Backup",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-encryption-cmk": {
            "properties": {
              "displayName": "Deny or Audit resources without Encryption with a customer-managed key (CMK)",
              "policyType": "Custom",
              "description": "Deny or Audit resources without Encryption with a customer-managed key (CMK)",
              "metadata": {
                "version": "3.0.0",
                "category": "Encryption",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8664847Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "ACRCmkEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Container registries should be encrypted with a customer-managed key (CMK)",
                    "description": "Use customer-managed keys to manage the encryption at rest of the contents of your registries. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/acr/CMK."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "AksCmkEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Kubernetes Service clusters both operating systems and data disks should be encrypted by customer-managed keys",
                    "description": "Encrypting OS and data disks using customer-managed keys provides more control and greater flexibility in key management. This is a common requirement in many regulatory and industry compliance standards."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "WorkspaceCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Machine Learning workspaces should be encrypted with a customer-managed key (CMK)",
                    "description": "Manage encryption at rest of your Azure Machine Learning workspace data with customer-managed keys (CMK). By default, customer data is encrypted with service-managed keys, but CMKs are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/azureml-workspaces-cmk."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "CognitiveServicesCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Cognitive Services accounts should enable data encryption with a customer-managed key (CMK)",
                    "description": "Customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data stored in Cognitive Services to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/cosmosdb-cmk."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "CosmosCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Cosmos DB accounts should use customer-managed keys to encrypt data at rest",
                    "description": "Use customer-managed keys to manage the encryption at rest of your Azure Cosmos DB. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/cosmosdb-cmk."
                  },
                  "allowedValues": [
                    "audit",
                    "deny",
                    "disabled"
                  ],
                  "defaultValue": "deny"
                },
                "DataBoxCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Data Box jobs should use a customer-managed key to encrypt the device unlock password",
                    "description": "Use a customer-managed key to control the encryption of the device unlock password for Azure Data Box. Customer-managed keys also help manage access to the device unlock password by the Data Box service in order to prepare the device and copy data in an automated manner. The data on the device itself is already encrypted at rest with Advanced Encryption Standard 256-bit encryption, and the device unlock password is encrypted by default with a Microsoft managed key."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "StreamAnalyticsCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Stream Analytics jobs should use customer-managed keys to encrypt data",
                    "description": "Use customer-managed keys when you want to securely store any metadata and private data assets of your Stream Analytics jobs in your storage account. This gives you total control over how your Stream Analytics data is encrypted."
                  },
                  "allowedValues": [
                    "audit",
                    "deny",
                    "disabled"
                  ],
                  "defaultValue": "deny"
                },
                "SynapseWorkspaceCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Synapse workspaces should use customer-managed keys to encrypt data at rest",
                    "description": "Use customer-managed keys to control the encryption at rest of the data stored in Azure Synapse workspaces. Customer-managed keys deliver double encryption by adding a second layer of encryption on top of the default encryption with service-managed keys."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "StorageCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Storage accounts should use customer-managed key (CMK) for encryption, no deny as this would result in not able to create storage account because the first need of MSI for encryption",
                    "description": "Secure your storage account with greater flexibility using customer-managed keys (CMKs). When you specify a CMK, that key is used to protect and control access to the key that encrypts your data. Using CMKs provides additional capabilities to control rotation of the key encryption key or cryptographically erase data."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "MySQLCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure MySQL servers bring your own key data protection should be enabled",
                    "description": "Use customer-managed keys to manage the encryption at rest of your MySQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "PostgreSQLCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure PostgreSQL servers bring your own key data protection should be enabled",
                    "description": "Use customer-managed keys to manage the encryption at rest of your PostgreSQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "SqlServerTDECMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "SQL servers should use customer-managed keys to encrypt data at rest",
                    "description": "Implementing Transparent Data Encryption (TDE) with your own key provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties. This recommendation applies to organizations with a related compliance requirement."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "HealthcareAPIsCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure API for FHIR should use a customer-managed key (CMK) to encrypt data at rest",
                    "description": "Use a customer-managed key to control the encryption at rest of the data stored in Azure API for FHIR when this is a regulatory or compliance requirement. Customer-managed keys also deliver double encryption by adding a second layer of encryption on top of the default one done with service-managed keys."
                  },
                  "allowedValues": [
                    "audit",
                    "disabled"
                  ],
                  "defaultValue": "audit"
                },
                "AzureBatchCMKEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Batch account should use customer-managed keys to encrypt data",
                    "description": "Use customer-managed keys (CMKs) to manage the encryption at rest of your Batch account's data. By default, customer data is encrypted with service-managed keys, but CMKs are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/Batch-CMK."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "EncryptedVMDisksEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Disk encryption should be applied on virtual machines",
                    "description": "Virtual machines without an enabled disk encryption will be monitored by Azure Security Center as recommendations."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "AutomationAccountCmkEffect": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "BackupCmkEffect": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cognitiveSearchCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "osAndDataDiskCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "containerInstanceCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adxCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adfCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "eventHubNamespacesCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "eventHubPremiumCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "serviceBusDenyCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "sqlManagedCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageTableCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountsEncryptionCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageQueueCmk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "ACRCmkDeny",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('ACRCmkEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AksCmkDeny",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AksCmkEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "WorkspaceCMK",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('WorkspaceCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "CognitiveServicesCMK",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('CognitiveServicesCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "CosmosCMKEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('CosmosCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DataBoxCMKEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86efb160-8de7-451d-bc08-5d475b0aadae",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('DataBoxCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StreamAnalyticsCMKEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/87ba29ef-1ab3-4d82-b763-87fcd4f531f7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('StreamAnalyticsCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SynapseWorkspaceCMKEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f7d52b2d-e161-4dfa-a82b-55e564167385",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SynapseWorkspaceCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StorageCMKEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('StorageCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MySQLCMKEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('MySQLCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "PostgreSQLCMKEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('PostgreSQLCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SqlServerTDECMKEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a370ff3-6cab-4e85-8995-295fd854c5b8",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SqlServerTDECMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "HealthcareAPIsCMKEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/051cba44-2429-45b9-9649-46cec11c7119",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('HealthcareAPIsCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AzureBatchCMKEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/99e9ccd8-3db9-4592-b0d1-14b1715a4d8a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AzureBatchCMKEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "EncryptedVMDisksEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('EncryptedVMDisksEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aa-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/56a5ee18-2ae6-4810-86f7-18e39ce5629b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AutomationAccountCmkEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Backup-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2e94d99a-8a36-4563-bc77-810d8893b671",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('BackupCmkEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-CognitiveSearch-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/76a56461-9dc0-40f0-82f5-2453283afa2f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveSearchCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-OsAndDataDisk-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/702dd420-7fcc-42c5-afe8-4026edd20fe0",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('osAndDataDiskCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerInstance-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0aa61e00-0a01-4a3c-9945-e93cffedf0e6",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerInstanceCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ADX-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/81e74cea-30fd-40d5-802f-d72103c2aaaa",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adxCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Adf-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4ec52d6d-beb7-40c4-9a9e-fe753254690e",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adfCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EH-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a1ad735a-e96f-45d2-a7b2-9a4932cab7ec",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventHubNamespacesCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EH-Premium-CMK",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-EH-Premium-CMK",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventHubPremiumCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Sb-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/295fc8b1-dc9f-4f53-9c61-3f313ceab40a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('serviceBusDenyCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Sql-Managed-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac01ad65-10e5-46df-bdd9-6b0cad13e1d2",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('sqlManagedCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Table-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7c322315-e26d-4174-a99e-f49d351b4688",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageTableCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Encryption-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b5ec538c-daa0-4006-8596-35468b9148e8",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountsEncryptionCmk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Queue-Cmk",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f0e5abd0-2554-4736-b7c0-4ffef23475ef",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageQueueCmk')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Encryption-CMK",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-encrypttransit": {
            "properties": {
              "displayName": "[Deprecated]: Deny or Deploy and append TLS requirements and SSL enforcement on resources without Encryption in transit",
              "policyType": "Custom",
              "description": "Choose either Deploy if not exist and append in combination with audit or Select Deny in the Policy effect. Superseded by https://www.azadvertizer.net/azpolicyinitiativesadvertizer/Enforce-EncryptTransit_20240509.html",
              "metadata": {
                "version": "2.1.0-deprecated",
                "category": "Encryption",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "deprecated": true,
                "supersededBy": "Enforce-EncryptTransit_20240509",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8060208Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "AppServiceHttpEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service. Appends the AppService sites config WebApp, APIApp, Function App with TLS version selected below",
                    "description": "Append the AppService sites object to ensure that min Tls version is set to required TLS version. Please note Append does not enforce compliance use then deny."
                  },
                  "allowedValues": [
                    "Append",
                    "Disabled"
                  ],
                  "defaultValue": "Append"
                },
                "AppServiceTlsVersionEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service. Appends the AppService WebApp, APIApp, Function App to enable https only",
                    "description": "App Service. Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny."
                  },
                  "allowedValues": [
                    "Append",
                    "Disabled"
                  ],
                  "defaultValue": "Append"
                },
                "AppServiceminTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service. Select version minimum TLS Web App config",
                    "description": "App Service. Select version  minimum TLS version for a  Web App config to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.0",
                    "1.1"
                  ],
                  "defaultValue": "1.2"
                },
                "APIAppServiceHttpsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service API App. API App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy.",
                    "description": "Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "FunctionLatestTlsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service Function App. Latest TLS version should be used in your Function App",
                    "description": "Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "FunctionServiceHttpsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service Function App. Function App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy.",
                    "description": "App Service Function App. Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "WebAppServiceLatestTlsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service Web App. Latest TLS version should be used in your Web App",
                    "description": "Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "WebAppServiceHttpsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service Web App. Web Application should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy.",
                    "description": "Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "AKSIngressHttpsOnlyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "AKS Service. Enforce HTTPS ingress in Kubernetes cluster",
                    "description": "This policy enforces HTTPS ingress in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For instructions on using this policy, visit https://aka.ms/kubepolicydoc."
                  },
                  "allowedValues": [
                    "audit",
                    "deny",
                    "disabled"
                  ],
                  "defaultValue": "deny"
                },
                "MySQLEnableSSLDeployEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "MySQL database servers. Deploy if not exist set minimum TLS version Azure Database for MySQL server",
                    "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "MySQLEnableSSLEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "MySQL database servers. Enforce SSL connection should be enabled for MySQL database servers",
                    "description": "Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "MySQLminimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "MySQL database servers. Select version minimum TLS for MySQL server",
                    "description": "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_0",
                    "TLS1_1",
                    "TLSEnforcementDisabled"
                  ],
                  "defaultValue": "TLS1_2"
                },
                "PostgreSQLEnableSSLDeployEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "PostgreSQL database servers. Deploy if not exist set minimum TLS version Azure Database for PostgreSQL server",
                    "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "PostgreSQLEnableSSLEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "PostgreSQL database servers. Enforce SSL connection should be enabled for PostgreSQL database servers",
                    "description": "Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "PostgreSQLminimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "PostgreSQL database servers. Select version minimum TLS for MySQL server",
                    "description": "PostgreSQL database servers. Select version  minimum TLS version Azure Database for MySQL server to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_0",
                    "TLS1_1",
                    "TLSEnforcementDisabled"
                  ],
                  "defaultValue": "TLS1_2"
                },
                "RedisTLSDeployEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Cache for Redis. Deploy a specific min TLS version requirement and enforce SSL Azure Cache for Redis",
                    "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "Append",
                    "Disabled"
                  ],
                  "defaultValue": "Append"
                },
                "RedisMinTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Cache for Redis.Select version minimum TLS for Azure Cache for Redis",
                    "description": "Select version  minimum TLS version for a Azure Cache for Redis to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.0",
                    "1.1"
                  ],
                  "defaultValue": "1.2"
                },
                "RedisTLSEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Cache for Redis. Only secure connections to your Azure Cache for Redis should be enabled",
                    "description": "Azure Cache for Redis. Audit enabling of only connections via SSL to Azure Cache for Redis. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "SQLManagedInstanceTLSDeployEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Managed Instance. Deploy a specific min TLS version requirement and enforce SSL on SQL servers",
                    "description": "Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SQLManagedInstanceMinTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Managed Instance.Select version minimum TLS for Azure Managed Instance",
                    "description": "Select version  minimum TLS version for Azure Managed Instanceto to  enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.0",
                    "1.1"
                  ],
                  "defaultValue": "1.2"
                },
                "SQLManagedInstanceTLSEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "SQL Managed Instance should have the minimal TLS version of 1.2",
                    "description": "Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "SQLServerTLSDeployEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure SQL Database. Deploy a specific min TLS version requirement and enforce SSL on SQL servers",
                    "description": "Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SQLServerminTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure SQL Database.Select version minimum TLS for Azure SQL Database",
                    "description": "Select version  minimum TLS version for Azure SQL Database to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.0",
                    "1.1"
                  ],
                  "defaultValue": "1.2"
                },
                "SQLServerTLSEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure SQL Database should have the minimal TLS version of 1.2",
                    "description": "Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "StorageDeployHttpsEnabledEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Storage Account. Deploy Secure transfer to storage accounts should be enabled",
                    "description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "StorageminimumTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Storage Account select minimum TLS version",
                    "description": "Select version  minimum TLS version on Azure Storage Account to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_1",
                    "TLS1_0"
                  ],
                  "defaultValue": "TLS1_2"
                },
                "StorageHttpsEnabledEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Storage Account. Secure transfer to storage accounts should be enabled",
                    "description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "ContainerAppsHttpsOnlyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Container Apps should only be accessible over HTTPS",
                    "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks. Disabling 'allowInsecure' will result in the automatic redirection of requests from HTTP to HTTPS connections for container apps."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "AppServiceHttpEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AppServiceHttpEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AppServiceminTlsVersion",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AppServiceTlsVersionEffect')]"
                    },
                    "minTlsVersion": {
                      "value": "[parameters('AppServiceminTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "FunctionLatestTlsEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('FunctionLatestTlsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "WebAppServiceLatestTlsEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('WebAppServiceLatestTlsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "APIAppServiceHttpsEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('APIAppServiceHttpsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "FunctionServiceHttpsEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('FunctionServiceHttpsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "WebAppServiceHttpsEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('WebAppServiceHttpsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AKSIngressHttpsOnlyEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AKSIngressHttpsOnlyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MySQLEnableSSLDeployEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('MySQLEnableSSLDeployEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('MySQLminimalTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MySQLEnableSSLEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('MySQLEnableSSLEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('MySQLminimalTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "PostgreSQLEnableSSLDeployEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('PostgreSQLEnableSSLDeployEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('PostgreSQLminimalTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "PostgreSQLEnableSSLEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('PostgreSQLEnableSSLEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('PostgreSQLminimalTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "RedisTLSDeployEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('RedisTLSDeployEffect')]"
                    },
                    "minimumTlsVersion": {
                      "value": "[parameters('RedisMinTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "RedisdisableNonSslPort",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('RedisTLSDeployEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "RedisDenyhttps",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('RedisTLSEffect')]"
                    },
                    "minimumTlsVersion": {
                      "value": "[parameters('RedisMinTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLManagedInstanceTLSDeployEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SQLManagedInstanceTLSDeployEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('SQLManagedInstanceMinTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLManagedInstanceTLSEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SQLManagedInstanceTLSEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('SQLManagedInstanceMinTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLServerTLSDeployEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SQLServerTLSDeployEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('SQLServerminTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLServerTLSEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SQLServerTLSEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('SQLServerminTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StorageHttpsEnabledEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('StorageHttpsEnabledEffect')]"
                    },
                    "minimumTlsVersion": {
                      "value": "[parameters('StorageMinimumTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StorageDeployHttpsEnabledEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('StorageDeployHttpsEnabledEffect')]"
                    },
                    "minimumTlsVersion": {
                      "value": "[parameters('StorageMinimumTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ContainerAppsHttpsOnlyEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e80e269-43a4-4ae9-b5bc-178126b8a5cb",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('ContainerAppsHttpsOnlyEffect')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-EncryptTransit",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-encrypttransit_20240509": {
            "properties": {
              "displayName": "Deny or Deploy and append TLS requirements and SSL enforcement on resources without Encryption in transit",
              "policyType": "Custom",
              "description": "Choose either Deploy if not exist and append in combination with audit or Select Deny in the Policy effect. Deny polices shift left. Deploy if not exist and append enforce but can be changed, and because missing existence condition require then the combination of Audit. ",
              "metadata": {
                "version": "1.0.0",
                "category": "Encryption",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "replacesPolicy": "Enforce-EncryptTransit",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8930899Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "AppServiceHttpEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service. Appends the AppService sites config WebApp, APIApp, Function App with TLS version selected below",
                    "description": "Append the AppService sites object to ensure that min Tls version is set to required TLS version. Please note Append does not enforce compliance use then deny."
                  },
                  "allowedValues": [
                    "Append",
                    "Disabled"
                  ],
                  "defaultValue": "Append"
                },
                "AppServiceTlsVersionEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service. Appends the AppService WebApp, APIApp, Function App to enable https only",
                    "description": "App Service. Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny."
                  },
                  "allowedValues": [
                    "Append",
                    "Disabled"
                  ],
                  "defaultValue": "Append"
                },
                "AppServiceminTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service. Select version minimum TLS Web App config",
                    "description": "App Service. Select version  minimum TLS version for a  Web App config to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.0",
                    "1.1"
                  ],
                  "defaultValue": "1.2"
                },
                "APIAppServiceHttpsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service API App. API App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy.",
                    "description": "Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "FunctionLatestTlsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service Function App. Latest TLS version should be used in your Function App",
                    "description": "Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "FunctionServiceHttpsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service Function App. Function App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy.",
                    "description": "App Service Function App. Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "FunctionAppTlsEffect": {
                  "type": "string",
                  "metadata": {
                    "displayName": "App Service Function App. Configure Function apps to use the latest TLS version.",
                    "description": "App Service Function App. Periodically, newer versions are released for TLS either due to security flaws, include additional functionality, and enhance speed. Upgrade to the latest TLS version for Function apps to take advantage of security fixes, if any, and/or new functionalities of the latest version."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "LogicAppTlsEffect": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "WebAppServiceLatestTlsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service Web App. Latest TLS version should be used in your Web App",
                    "description": "Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version."
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "WebAppServiceHttpsEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "App Service Web App. Web Application should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy.",
                    "description": "Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "AKSIngressHttpsOnlyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "AKS Service. Enforce HTTPS ingress in Kubernetes cluster",
                    "description": "This policy enforces HTTPS ingress in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For instructions on using this policy, visit https://aka.ms/kubepolicydoc."
                  },
                  "allowedValues": [
                    "audit",
                    "deny",
                    "disabled"
                  ],
                  "defaultValue": "deny"
                },
                "MySQLEnableSSLDeployEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "MySQL database servers. Deploy if not exist set minimum TLS version Azure Database for MySQL server",
                    "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "MySQLEnableSSLEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "MySQL database servers. Enforce SSL connection should be enabled for MySQL database servers",
                    "description": "Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "MySQLminimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "MySQL database servers. Select version minimum TLS for MySQL server",
                    "description": "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_0",
                    "TLS1_1",
                    "TLSEnforcementDisabled"
                  ],
                  "defaultValue": "TLS1_2"
                },
                "PostgreSQLEnableSSLDeployEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "PostgreSQL database servers. Deploy if not exist set minimum TLS version Azure Database for PostgreSQL server",
                    "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "PostgreSQLEnableSSLEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "PostgreSQL database servers. Enforce SSL connection should be enabled for PostgreSQL database servers",
                    "description": "Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "PostgreSQLminimalTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "PostgreSQL database servers. Select version minimum TLS for MySQL server",
                    "description": "PostgreSQL database servers. Select version  minimum TLS version Azure Database for MySQL server to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_0",
                    "TLS1_1",
                    "TLSEnforcementDisabled"
                  ],
                  "defaultValue": "TLS1_2"
                },
                "RedisTLSDeployEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Cache for Redis. Deploy a specific min TLS version requirement and enforce SSL Azure Cache for Redis",
                    "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "Append",
                    "Disabled"
                  ],
                  "defaultValue": "Append"
                },
                "RedisMinTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Cache for Redis.Select version minimum TLS for Azure Cache for Redis",
                    "description": "Select version  minimum TLS version for a Azure Cache for Redis to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.0",
                    "1.1"
                  ],
                  "defaultValue": "1.2"
                },
                "RedisTLSEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Cache for Redis. Only secure connections to your Azure Cache for Redis should be enabled",
                    "description": "Azure Cache for Redis. Audit enabling of only connections via SSL to Azure Cache for Redis. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "SQLManagedInstanceTLSDeployEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Managed Instance. Deploy a specific min TLS version requirement and enforce SSL on SQL servers",
                    "description": "Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SQLManagedInstanceMinTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Managed Instance.Select version minimum TLS for Azure Managed Instance",
                    "description": "Select version  minimum TLS version for Azure Managed Instanceto to  enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.0",
                    "1.1"
                  ],
                  "defaultValue": "1.2"
                },
                "SQLManagedInstanceTLSEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "SQL Managed Instance should have the minimal TLS version of 1.2",
                    "description": "Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "SQLServerTLSDeployEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure SQL Database. Deploy a specific min TLS version requirement and enforce SSL on SQL servers",
                    "description": "Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "SQLServerminTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure SQL Database.Select version minimum TLS for Azure SQL Database",
                    "description": "Select version  minimum TLS version for Azure SQL Database to enforce"
                  },
                  "allowedValues": [
                    "1.2",
                    "1.0",
                    "1.1"
                  ],
                  "defaultValue": "1.2"
                },
                "SQLServerTLSEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure SQL Database should have the minimal TLS version of 1.2",
                    "description": "Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities."
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Audit"
                },
                "StorageDeployHttpsEnabledEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Azure Storage Account. Deploy Secure transfer to storage accounts should be enabled",
                    "description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "StorageminimumTlsVersion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Storage Account select minimum TLS version",
                    "description": "Select version  minimum TLS version on Azure Storage Account to enforce"
                  },
                  "allowedValues": [
                    "TLS1_2",
                    "TLS1_1",
                    "TLS1_0"
                  ],
                  "defaultValue": "TLS1_2"
                },
                "ContainerAppsHttpsOnlyEffect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Container Apps should only be accessible over HTTPS",
                    "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks. Disabling 'allowInsecure' will result in the automatic redirection of requests from HTTP to HTTPS connections for container apps."
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "logicAppHttpsEffect": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appServiceAppsTls": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "functionAppSlotsTls": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "appServiceAppsHttps": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appServiceTls": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appServiceAppSlotTls": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "functionAppSlotsHttps": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "functionAppHttps": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appServiceAppSlotsHttps": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "containerAppsHttps": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "eventHubMinTls": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "sqlManagedTlsVersion": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "sqlDbTls": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountsTls": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "synapseTlsVersion": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "AppServiceHttpEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AppServiceHttpEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AppServiceminTlsVersion",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AppServiceTlsVersionEffect')]"
                    },
                    "minTlsVersion": {
                      "value": "[parameters('AppServiceminTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "FunctionLatestTlsEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('FunctionLatestTlsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "WebAppServiceLatestTlsEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('WebAppServiceLatestTlsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "APIAppServiceHttpsEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('APIAppServiceHttpsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "FunctionServiceHttpsEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('FunctionServiceHttpsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "WebAppServiceHttpsEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('WebAppServiceHttpsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "AKSIngressHttpsOnlyEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('AKSIngressHttpsOnlyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MySQLEnableSSLDeployEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('MySQLEnableSSLDeployEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('MySQLminimalTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "MySQLEnableSSLEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('MySQLEnableSSLEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('MySQLminimalTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "PostgreSQLEnableSSLDeployEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('PostgreSQLEnableSSLDeployEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('PostgreSQLminimalTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "PostgreSQLEnableSSLEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('PostgreSQLEnableSSLEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('PostgreSQLminimalTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "RedisTLSDeployEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('RedisTLSDeployEffect')]"
                    },
                    "minimumTlsVersion": {
                      "value": "[parameters('RedisMinTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "RedisdisableNonSslPort",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('RedisTLSDeployEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "RedisDenyhttps",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('RedisTLSEffect')]"
                    },
                    "minimumTlsVersion": {
                      "value": "[parameters('RedisMinTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLManagedInstanceTLSDeployEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SQLManagedInstanceTLSDeployEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('SQLManagedInstanceMinTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLManagedInstanceTLSEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SQLManagedInstanceTLSEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('SQLManagedInstanceMinTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLServerTLSDeployEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SQLServerTLSDeployEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('SQLServerminTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "SQLServerTLSEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('SQLServerTLSEffect')]"
                    },
                    "minimalTlsVersion": {
                      "value": "[parameters('SQLServerminTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "StorageDeployHttpsEnabledEffect",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('StorageDeployHttpsEnabledEffect')]"
                    },
                    "minimumTlsVersion": {
                      "value": "[parameters('StorageMinimumTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "ContainerAppsHttpsOnlyEffect",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e80e269-43a4-4ae9-b5bc-178126b8a5cb",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('ContainerAppsHttpsOnlyEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Dine-FunctionApp-Tls",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f01f1c7-539c-49b5-9ef4-d4ffa37d22e0",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('FunctionAppTlsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deploy-LogicApp-TLS",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deploy-LogicApp-TLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('LogicAppTlsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-LogicApp-Without-Https",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-LogicApps-Without-Https",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('logicAppHttpsEffect')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Dine-Function-Apps-Slots-Tls",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fa3a6357-c6d6-4120-8429-855577ec0063",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('functionAppSlotsTls')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Dine-AppService-Apps-Tls",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ae44c1d1-0df2-4ca9-98fa-a3d3ae5b409d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppsTls')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppService-Apps-Https",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a4af4a39-4135-47fb-b175-47fbdf85311d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppsHttps')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppService-Tls",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d6545c6b-dd9d-4265-91e6-0b451e2f1c50",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceTls')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-AppService-AppSlotTls",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/014664e7-e348-41a3-aeb9-566e4ff6a9df",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppSlotTls')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-FuncAppSlots-Https",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5e5dbe3f-2702-4ffc-8b1e-0cae008a5c71",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('functionAppSlotsHttps')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-FunctionApp-Https",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('functionAppHttps')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppService-Slots-Https",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ae1b9a8c-dfce-4605-bd91-69213b4a26fc",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppSlotsHttps')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerApps-Https",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e80e269-43a4-4ae9-b5bc-178126b8a5cb",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerAppsHttps')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EH-minTLS",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-EH-minTLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventHubMinTls')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Sql-Managed-Tls-Version",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8793640-60f7-487c-b5c3-1d37215905c4",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('sqlManagedTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Sql-Db-Tls",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/32e6bbec-16b6-44c2-be37-c5b672d103cf",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('sqlDbTls')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Tls",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fe83a0eb-a853-422d-aac2-1bffd182c5d0",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountsTls')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Synapse-Tls-Version",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cb3738a6-82a2-4a18-b87b-15217b9deff4",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapseTlsVersion')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit_20240509",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-EncryptTransit_20240509",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-apim": {
            "properties": {
              "displayName": "Enforce recommended guardrails for API Management",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures API Management is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "API Management",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8484522Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "apiSubscriptionScope": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "minimumApiVersion": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "apimSkuVnet": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "apimDisablePublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "apimApiBackendCertValidation": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "apimDirectApiEndpoint": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "apimCallApiAuthn": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "apimEncryptedProtocols": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "apimVnetUsage": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "apimSecrets": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "apimTls": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-Apim-without-Kv",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f1cc7827-022c-473e-836e-5a51cae0b249",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('apimSecrets')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Apim-without-Vnet",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ef619a2c-cc4d-4d03-b2ba-8c94a834d85b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('apimVnetUsage')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-APIM-TLS",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-APIM-TLS",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('apimTls')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Apim-Protocols",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ee7495e7-3ba7-40b6-bfee-c29e22cc75d4",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('apimEncryptedProtocols')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Apim-Authn",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c15dcc82-b93c-4dcb-9332-fbf121685b54",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('apimCallApiAuthn')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Apim-Direct-Endpoint",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b741306c-968e-4b67-b916-5675e5c709f4",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('apimDirectApiEndpoint')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Apim-Cert-Validation",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/92bb331d-ac71-416a-8c91-02f2cb734ce4",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('apimApiBackendCertValidation')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Dine-Apim-Public-NetworkAccess",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7ca8c8ac-3a6e-493d-99ba-c5fa35347ff2",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('apimDisablePublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Apim-Sku-Vnet",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/73ef9241-5d81-4cd4-b483-8443d1730fe5",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('apimSkuVnet')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Apim-Version",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/549814b6-3212-4203-bdc8-1548d342fb67",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('minimumApiVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Api-subscription-scope",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3aa03346-d8c5-4994-a5bc-7652c2a2aef1",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('apiSubscriptionScope')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-APIM",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-APIM",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-appservices": {
            "properties": {
              "displayName": "Enforce recommended guardrails for App Service",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures App Service is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "App Service",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.9535055Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "functionAppDebugging": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "appServiceDisableLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "appServiceSkuPl": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appServiceDisableLocalAuthFtp": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "appServiceRouting": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appServiceScmAuth": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "appServiceRfc": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appServiceAppsRfc": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appServiceAppsVnetRouting": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appServiceEnvLatestVersion": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appServiceAppSlotsRemoteDebugging": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "appServiceAppsRemoteDebugging": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "appServiceByoc": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "functionAppSlotsModifyHttps": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "appServiceAppHttps": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "functionAppSlotsModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "appServiceAppsModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "appServiceAppModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-AppService-Byoc",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppService-without-BYOC",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceByoc')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Dine-AppService-Apps-Remote-Debugging",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a5e3fe8f-f6cd-4f1d-bbf6-c749754a724b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppsRemoteDebugging')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppService-Slots-Remote-Debugging",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cca5adfe-626b-4cc6-8522-f5b6ed2391bd",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppSlotsRemoteDebugging')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppService-Latest-Version",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/eb4d34ab-0929-491c-bbf3-61e13da19f9a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceEnvLatestVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppService-Vnet-Routing",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/801543d1-1953-4a90-b8b0-8cf6d41473a5",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppsVnetRouting')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppService-Rfc",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f5c0bfb3-acea-47b1-b477-b0edcdf6edc1",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceRfc')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppServiceApps-Rfc",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a691eacb-474d-47e4-b287-b4813ca44222",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppsRfc')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-FuncApp-Debugging",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/70adbb40-e092-42d5-a6f8-71c540a5efdb",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('functionAppDebugging')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-AppService-ScmAuth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5e97b776-f380-4722-a9a3-e7f0be029e79",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceScmAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppServ-Routing",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5747353b-1ca9-42c1-a4dd-b874b894f3d4",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceRouting')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppServ-FtpAuth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/572e342c-c920-4ef5-be2e-1ed3c6a51dc5",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceDisableLocalAuthFtp')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppServ-SkuPl",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/546fe8d2-368d-4029-a418-6af48a7f61e5",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceSkuPl')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-AppService-LocalAuth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2c034a29-2a5f-4857-b120-f800fe5549ae",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceDisableLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "DINE-AppService-Debugging",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/25a5046c-c423-4805-9235-e844ae9ef49b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('functionAppDebugging')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Function-Apps-Slots-Https",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/08cf2974-d178-48a0-b26d-f6b8e555748b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('functionAppSlotsModifyHttps')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-AppService-Https",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0f98368e-36bc-4716-8ac2-8f8067203b63",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppHttps')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Function-Apps-Slots-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/242222f3-4985-4e99-b5ef-086d6a6cb01c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('functionAppSlotsModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-AppService-Apps-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2374605e-3e0b-492b-9046-229af202562c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppsModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-AppService-App-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c6c3e00e-d414-4ca4-914f-406699bb8eee",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appServiceAppModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-AppServices",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-AppServices",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-automation": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Automation Account",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Automation Account is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Automation",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7771115Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "aaModifyLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "aaVariablesEncryption": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                },
                "aaLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                },
                "aaManagedIdentity": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "autoHotPatch": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled",
                    "Deny"
                  ],
                  "defaultValue": "Deny"
                },
                "aaModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-Windows-Vm-HotPatch",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6d02d2f7-e38b-4bdc-96f3-adc0a8726abc",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('autoHotPatch')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aa-Managed-Identity",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/dea83a72-443c-4292-83d5-54a2f98749c0",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aaManagedIdentity')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aa-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/48c5f1cb-14ad-4797-8e3b-f78ab3f8d700",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aaLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aa-Variables-Encrypt",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3657f5a0-770e-44a3-b44e-9431ba1e9735",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aaVariablesEncryption')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Aa-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/30d1d58e-8f96-47a5-8564-499a3f3cca81",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aaModifyLocalAUth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Aa-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/23b36a7c-9d26-4288-a8fd-c1d2fa284d8c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aaModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Automation",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-Automation",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.5730333Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.5730333Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-cognitiveservices": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Cognitive Services",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Cognitive Services is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cognitive Services",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.766668Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "cognitiveSearchSku": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cognitiveSearchLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "modifyCognitiveSearchLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "modifyCognitiveSearchPublicEndpoint": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "cognitiveServicesModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-CognitiveSearch-SKU",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a049bf77-880b-470f-ba6d-9f21c530cf83",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveSearchSku')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-CongitiveSearch-LocalAuth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6300012e-e9a4-4649-b41f-a85f5c43be91",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveSearchLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-CogntiveSearch-LocalAuth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4eb216f2-9dba-4979-86e6-5d7e63ce3b75",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('modifyCognitiveSearchLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-CogntiveSearch-PublicEndpoint",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9cee519f-d9c1-4fd9-9f79-24ec3449ed30",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('modifyCognitiveSearchPublicEndpoint')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Cognitive-Services-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47ba1dd7-28d9-4b07-a8d5-9813bed64e0c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveServicesModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-CognitiveServices",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-CognitiveServices",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-compute": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Compute",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Compute is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7334807Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "diskDoubleEncryption": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "vmAndVmssEncryptionHost": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-VmAndVmss-Encryption-Host",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fc4d8e41-e223-45ea-9bf5-eada37891d87",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('vmAndVmssEncryptionHost')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Disk-Double-Encryption",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ca91455f-eace-4f96-be59-e6e2c35b4816",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('diskDoubleEncryption')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Compute",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-Compute",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-containerapps": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Container Apps",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Container Apps is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Container Apps",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7732068Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "containerAppsManagedIdentity": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "containerAppsVnetInjection": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-ContainerApp-Vnet-Injection",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8b346db6-85af-419b-8557-92cee2c0f9bb",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerAppsVnetInjection')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerApps-Managed-Identity",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b874ab2d-72dd-47f1-8cb5-4a306478a4e7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerAppsManagedIdentity')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ContainerApps",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-ContainerApps",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-containerinstance": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Container Instance",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Container Apps is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Container Instances",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.714907Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "containerInstanceVnet": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-ContainerInstance-Vnet",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8af8f826-edcb-4178-b35f-851ea6fea615",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerInstanceVnet')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ContainerInstance",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-ContainerInstance",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-containerregistry": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Container Registry",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Container Apps is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Container Registry",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.9461855Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "containerRegistryUnrestrictedNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "containerRegistryRepositoryToken": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "containerRegistryModifyRepositoryToken": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "containerRegistryLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "containerRegistryModifyLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "containerRegistryExports": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "containerRegistryAnAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "containerRegistryModifyAnAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "containerRegistrySkuPrivateLink": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "containerRegistryArmAudience": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "containerRegistryModifyArmAudience": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "containerRegistryModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Modify-ContainerRegistry-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/79fdfe03-ffcb-4e55-b4d0-b925b8241759",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryModifyLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-ContainerRegistry-Repo-Token",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a9b426fe-8856-4945-8600-18c5dd1cca2a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryModifyRepositoryToken')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerRegistry-Arm-Audience",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/42781ec6-6127-4c30-bdfa-fb423a0047d3",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryArmAudience')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-ContainerRegistry-Arm-Audience",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/785596ed-054f-41bc-aaec-7f3d0ba05725",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryModifyArmAudience')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerRegistry-Sku-PrivateLink",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bd560fc0-3c69-498a-ae9f-aa8eb7de0e13",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistrySkuPrivateLink')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-ContainerRegistry-Anonymous-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cced2946-b08a-44fe-9fd9-e4ed8a779897",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryModifyAnAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerRegistry-Anonymous-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9f2dea28-e834-476c-99c5-3507b4728395",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryAnAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerRegistry-Exports",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/524b0254-c285-4903-bee6-bb8126cde579",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryExports')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerRegistry-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/dc921057-6b28-4fbe-9b83-f7bec05db6c2",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerRegistry-Repo-Token",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ff05e24e-195c-447e-b322-5e90c9f9f366",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryRepositoryToken')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ContainerRegistry-Unrestricted-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d0793b48-0edc-4296-a390-4c75d1bdfd71",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryUnrestrictedNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-ContainerRegistry-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a3701552-92ea-433e-9d17-33b7f1208fc9",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('containerRegistryModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ContainerRegistry",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-ContainerRegistry",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-cosmosdb": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Cosmos DB",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Cosmos DB is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cosmos DB",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8216423Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "cosmosDbLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cosmosDbFwRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cosmosDbAtp": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "cosmosDbModifyLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "cosmosDbModifyPublicAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Modify-CosmosDb-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/dc2d41d1-4ab1-4666-a3e1-3d51c43e0049",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cosmosDbModifyLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Dine-CosmosDb-Atp",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b5f04e03-92a3-4b09-9410-2cc5e5047656",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cosmosDbAtp')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-CosmosDb-Fw-Rules",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cosmosDbFwRules')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-CosmosDb-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5450f5bd-9c72-4390-a9c4-a7aba4edfdd2",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cosmosDbLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Append-CosmosDb-Metadata",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4750c32b-89c0-46af-bfcb-2e4541a818d5",
                  "parameters": {},
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-CosmosDb-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/da69ba51-aaf1-41e5-8651-607cd0b37088",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cosmosDbModifyPublicAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-CosmosDb",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-CosmosDb",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-dataexplorer": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Data Explorer",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Data Explorer is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Azure Data Explorer",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7856279Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "adxEncryption": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adxDoubleEncryption": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adxSku": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adxModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-ADX-Sku-without-PL-Support",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1fec9658-933f-4b3e-bc95-913ed22d012b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adxSku')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ADX-Double-Encryption",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ec068d99-e9c7-401f-8cef-5bdde4e6ccf1",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adxDoubleEncryption')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ADX-Encryption",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f4b53539-8df9-40e4-86c6-6b607703bd4e",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adxEncryption')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-ADX-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7b32f193-cb28-4e15-9a98-b9556db0bafa",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adxModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-DataExplorer",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-DataExplorer",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-datafactory": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Data Factory",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Data Factory is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Data Factory",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7828244Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "adfSqlIntegration": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adfLinkedServiceKeyVault": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adfGit": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adfManagedIdentity": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "adfModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-Adf-Managed-Identity",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f78ccdb4-7bf4-4106-8647-270491d2978a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adfManagedIdentity')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Adf-Git",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/77d40665-3120-4348-b539-3192ec808307",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adfGit')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Adf-Linked-Service-Key-Vault",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/127ef6d7-242f-43b3-9eef-947faf1725d0",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adfLinkedServiceKeyVault')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Adf-Sql-Integration",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0088bc63-6dee-4a9c-9d29-91cfdc848952",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adfSqlIntegration')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Adf-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/08b1442b-7789-4130-8506-4f99a97226a7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('adfModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-DataFactory",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-DataFactory",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-eventgrid": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Event Grid",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Event Grid is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Event Grid",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7745944Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "eventGridLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "eventGridPartnerNamespaceLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "eventGridPartnerNamespaceModifyLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "eventGridTopicLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "eventGridTopicModifyLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "eventGridDomainModifyLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "eventGridDomainModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "eventGridTopicModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Modify-EventGrid-Partner-Namespace-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2dd0e8b9-4289-4bb0-b813-1883298e9924",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventGridPartnerNamespaceModifyLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-EventGrid-Domain-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8ac2748f-3bf1-4c02-a3b6-92ae68cf75b1",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventGridDomainModifyLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EventGrid-Topic-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ae9fb87f-8a17-4428-94a4-8135d431055c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventGridTopicLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-EventGrid-Topic-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c8144d9-746a-4501-b08c-093c8d29ad04",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventGridTopicModifyLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EventGrid-Partner-Namespace-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8632b003-3545-4b29-85e6-b2b96773df1e",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventGridPartnerNamespaceLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EventGrid-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8bfadddb-ee1c-4639-8911-a38cb8e0b3bd",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventGridLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-EventGrid-Domain-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/898e9824-104c-4965-8e0e-5197588fa5d4",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventGridDomainModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-EventGrid-Topic-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/36ea4b4b-0f7f-4a54-89fa-ab18f555a172",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventGridTopicModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-EventGrid",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-EventGrid",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-eventhub": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Event Hub",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Event Hub is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Event Hub",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7221366Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "eventHubAuthRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "eventHubNamespacesLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "eventHubNamespacesModifyLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "eventHubNamespacesDoubleEncryption": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-EH-Double-Encryption",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/836cd60e-87f3-4e6a-a27c-29d687f01a4c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventHubNamespacesDoubleEncryption')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-EH-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/57f35901-8389-40bb-ac49-3ba4f86d889d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventHubNamespacesModifyLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EH-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5d4e3c65-4873-47be-94f3-6f8b953a3598",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventHubNamespacesLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-EH-Auth-Rules",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b278e460-7cfc-4451-8294-cccc40a940d7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('eventHubAuthRules')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-EventHub",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-EventHub",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-keyvault": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Azure Key Vault",
              "policyType": "Custom",
              "description": "Enforce recommended guardrails for Azure Key Vault.",
              "metadata": {
                "version": "2.0.0",
                "category": "Key Vault",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.875113Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "effectKvSoftDelete": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "effectKvPurgeProtection": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "effectKvSecretsExpire": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "effectKvKeysExpire": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "effectKvFirewallEnabled": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "effectKvCertLifetime": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "audit",
                    "Audit",
                    "deny",
                    "Deny",
                    "disabled",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "maximumCertLifePercentageLife": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "The maximum lifetime percentage",
                    "description": "Enter the percentage of lifetime of the certificate when you want to trigger the policy action. For example, to trigger a policy action at 80% of the certificate's valid life, enter '80'."
                  },
                  "defaultValue": 80
                },
                "minimumCertLifeDaysBeforeExpiry": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "The minimum days before expiry",
                    "description": "Enter the days before expiration of the certificate when you want to trigger the policy action. For example, to trigger a policy action 90 days before the certificate's expiration, enter '90'."
                  },
                  "defaultValue": 90
                },
                "effectKvKeysLifetime": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "minimumKeysLifeDaysBeforeExpiry": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "The minimum days before expiry",
                    "description": "Enter the days before expiration of the certificate when you want to trigger the policy action. For example, to trigger a policy action 90 days before the certificate's expiration, enter '90'."
                  },
                  "defaultValue": 90
                },
                "effectKvSecretsLifetime": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "minimumSecretsLifeDaysBeforeExpiry": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "The minimum days before expiry",
                    "description": "Enter the days before expiration of the certificate when you want to trigger the policy action. For example, to trigger a policy action 90 days before the certificate's expiration, enter '90'."
                  },
                  "defaultValue": 90
                },
                "keyVaultCheckMinimumRSACertificateSize": {
                  "type": "string",
                  "allowedValues": [
                    "audit",
                    "Audit",
                    "deny",
                    "Deny",
                    "disabled",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultMinimumRSACertificateSizeValue": {
                  "type": "integer",
                  "allowedValues": [
                    2048,
                    3072,
                    4096
                  ],
                  "defaultValue": 2048
                },
                "keyVaultManagedHsmCheckMinimumRSAKeySize": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultManagedHsmMinimumRSAKeySizeValue": {
                  "type": "integer",
                  "allowedValues": [
                    2048,
                    3072,
                    4096
                  ],
                  "defaultValue": 2048
                },
                "keyVaultCheckMinimumRSAKeySize": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultMinimumRSAKeySizeValue": {
                  "type": "integer",
                  "allowedValues": [
                    2048,
                    3072,
                    4096
                  ],
                  "defaultValue": 2048
                },
                "keyVaultArmRbac": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultHmsPurgeProtection": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultCertificatesPeriod": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                },
                "keyVaultCertValidPeriod": {
                  "type": "integer",
                  "defaultValue": 12
                },
                "keyVaultHmsKeysExpiration": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keysValidPeriod": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                },
                "keysValidityInDays": {
                  "type": "integer",
                  "defaultValue": 90
                },
                "secretsValidPeriod": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "secretsValidityInDays": {
                  "type": "integer",
                  "defaultValue": 90
                },
                "keyVaultCertKeyTypes": {
                  "type": "string",
                  "allowedValues": [
                    "audit",
                    "Audit",
                    "deny",
                    "Deny",
                    "disabled",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultEllipticCurve": {
                  "type": "string",
                  "allowedValues": [
                    "audit",
                    "Audit",
                    "deny",
                    "Deny",
                    "disabled",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultCryptographicType": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keysActive": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                },
                "keysActiveInDays": {
                  "type": "integer",
                  "defaultValue": 90
                },
                "keysCurveNames": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "secretsActiveInDays": {
                  "type": "integer",
                  "defaultValue": 90
                },
                "secretsActive": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                },
                "keyVaultSecretContentType": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultNonIntegratedCa": {
                  "type": "string",
                  "allowedValues": [
                    "audit",
                    "Audit",
                    "deny",
                    "Deny",
                    "disabled",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                },
                "keyVaultNonIntegratedCaValue": {
                  "type": "string",
                  "metadata": {
                    "displayName": "The common name of the certificate authority",
                    "description": "The common name (CN) of the Certificate Authority (CA) provider. For example, for an issuer CN = Contoso, OU = .., DC = .., you can specify Contoso"
                  },
                  "defaultValue": ""
                },
                "keyVaultIntegratedCa": {
                  "type": "string",
                  "allowedValues": [
                    "audit",
                    "Audit",
                    "deny",
                    "Deny",
                    "disabled",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultIntegratedCaValue": {
                  "type": "array",
                  "defaultValue": [
                    "DigiCert",
                    "GlobalSign"
                  ]
                },
                "keyVaultHsmMinimumDaysBeforeExpiration": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultHsmMinimumDaysBeforeExpirationValue": {
                  "type": "integer",
                  "defaultValue": 90
                },
                "keyVaultHmsCurveNames": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultHmsCurveNamesValue": {
                  "type": "array",
                  "defaultValue": [
                    "P-256",
                    "P-256K",
                    "P-384",
                    "P-521"
                  ]
                },
                "keyVaultCertificateNotExpireWithinSpecifiedNumberOfDays": {
                  "type": "string",
                  "allowedValues": [
                    "audit",
                    "Audit",
                    "deny",
                    "Deny",
                    "disabled",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "keyVaultCertificateNotExpireWithinSpecifiedNumberOfDaysValue": {
                  "type": "integer",
                  "defaultValue": 90
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "KvSoftDelete",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectKvSoftDelete')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "KvPurgeProtection",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0b60c0b2-2dc2-4e1c-b5c9-abbed971de53",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectKvPurgeProtection')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "KvSecretsExpire",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/98728c90-32c7-4049-8429-847dc0f4fe37",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectKvSecretsExpire')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "KvKeysExpire",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/152b15f7-8e1f-4c1f-ab71-8c010ba5dbc0",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectKvKeysExpire')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "KvFirewallEnabled",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/55615ac9-af46-4a59-874e-391cc3dfb490",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectKvFirewallEnabled')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "KvCertLifetime",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/12ef42cb-9903-4e39-9c26-422d29570417",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectKvCertLifetime')]"
                    },
                    "maximumPercentageLife": {
                      "value": "[parameters('maximumCertLifePercentageLife')]"
                    },
                    "minimumDaysBeforeExpiry": {
                      "value": "[parameters('minimumCertLifeDaysBeforeExpiry')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "KvKeysLifetime",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5ff38825-c5d8-47c5-b70e-069a21955146",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectKvKeysLifetime')]"
                    },
                    "minimumDaysBeforeExpiration": {
                      "value": "[parameters('minimumKeysLifeDaysBeforeExpiry')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "KvSecretsLifetime",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0eb591a-5e70-4534-a8bf-04b9c489584a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('effectKvSecretsLifetime')]"
                    },
                    "minimumDaysBeforeExpiration": {
                      "value": "[parameters('minimumSecretsLifeDaysBeforeExpiry')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-RSA-Keys-without-MinCertSize",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cee51871-e572-4576-855c-047c820360f0",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultCheckMinimumRSACertificateSize')]"
                    },
                    "minimumRSAKeySize": {
                      "value": "[parameters('keyVaultMinimumRSACertificateSizeValue')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-keyVaultManagedHsm-RSA-Keys-without-MinKeySize",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86810a98-8e91-4a44-8386-ec66d0de5d57",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultManagedHsmCheckMinimumRSAKeySize')]"
                    },
                    "minimumRSAKeySize": {
                      "value": "[parameters('keyVaultManagedHsmMinimumRSAKeySizeValue')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-RSA-Keys-without-MinKeySize",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/82067dbb-e53b-4e06-b631-546d197452d9",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultCheckMinimumRSAKeySize')]"
                    },
                    "minimumRSAKeySize": {
                      "value": "[parameters('keyVaultMinimumRSAKeySizeValue')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-without-ArmRbac",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/12d4fa5e-1f9f-4c21-97a9-b99b3c6611b5",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultArmRbac')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Hms-PurgeProtection",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c39ba22d-4428-4149-b981-70acb31fc383",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultHmsPurgeProtection')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Cert-Period",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a075868-4c26-42ef-914c-5bc007359560",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultCertificatesPeriod')]"
                    },
                    "maximumValidityInMonths": {
                      "value": "[parameters('keyVaultCertValidPeriod')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Hms-Key-Expire",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1d478a74-21ba-4b9f-9d8f-8e6fced0eec5",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultHmsKeysExpiration')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Keys-Expire",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/49a22571-d204-4c91-a7b6-09b1a586fbc9",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keysValidPeriod')]"
                    },
                    "maximumValidityInDays": {
                      "value": "[parameters('keysValidityInDays')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Secrets-ValidityDays",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/342e8053-e12e-4c44-be01-c3c2f318400f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('secretsValidPeriod')]"
                    },
                    "maximumValidityInDays": {
                      "value": "[parameters('secretsValidityInDays')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Key-Types",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1151cede-290b-4ba0-8b38-0ad145ac888f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultCertKeyTypes')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Elliptic-Curve",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bd78111f-4953-4367-9fd5-7e08808b54bf",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultEllipticCurve')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Cryptographic-Type",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/75c4f823-d65c-4f29-a733-01d0077fdbcb",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultCryptographicType')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Key-Active",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c26e4b24-cf98-4c67-b48b-5a25c4c69eb9",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keysActive')]"
                    },
                    "maximumValidityInDays": {
                      "value": "[parameters('keysActiveInDays')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Curve-Names",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ff25f3c8-b739-4538-9d07-3d6d25cfb255",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keysCurveNames')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-KV-Secret-ActiveDays",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e8d99835-8a06-45ae-a8e0-87a91941ccfe",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('secretsActive')]"
                    },
                    "maximumValidityInDays": {
                      "value": "[parameters('secretsActiveInDays')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Kv-Secret-Content-Type",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/75262d3e-ba4a-4f43-85f8-9f72c090e5e3",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultSecretContentType')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Kv-Non-Integrated-Ca",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a22f4a40-01d3-4c7d-8071-da157eeff341",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultNonIntegratedCa')]"
                    },
                    "caCommonName": {
                      "value": "[parameters('keyVaultNonIntegratedCaValue')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Kv-Integrated-Ca",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8e826246-c976-48f6-b03e-619bb92b3d82",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultIntegratedCa')]"
                    },
                    "allowedCAs": {
                      "value": "[parameters('keyVaultIntegratedCaValue')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Kv-Hsm-MinimumDays-Before-Expiration",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ad27588c-0198-4c84-81ef-08efd0274653",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultHsmMinimumDaysBeforeExpiration')]"
                    },
                    "minimumDaysBeforeExpiration": {
                      "value": "[parameters('keyVaultHsmMinimumDaysBeforeExpirationValue')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Kv-Hsm-Curve-Names",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e58fd0c1-feac-4d12-92db-0a7e9421f53e",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultHmsCurveNames')]"
                    },
                    "allowedECNames": {
                      "value": "[parameters('keyVaultHmsCurveNamesValue')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Kv-Cert-Expiration-Within-Specific-Number-Days",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f772fb64-8e40-40ad-87bc-7706e1949427",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultCertificateNotExpireWithinSpecifiedNumberOfDays')]"
                    },
                    "daysToExpire": {
                      "value": "[parameters('keyVaultCertificateNotExpireWithinSpecifiedNumberOfDaysValue')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-KeyVault",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-KeyVault",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-keyvault-sup": {
            "properties": {
              "displayName": "Enforce additional recommended guardrails for Key Vault",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Key Vault is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Key Vault",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.728723Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "keyVaultManagedHsmDisablePublicNetworkModify": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "keyVaultModifyFw": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Modify-KV-PublicNetworkAccess",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/84d327c3-164a-4685-b453-900478614456",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultManagedHsmDisablePublicNetworkModify')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-KV-Fw",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac673a9a-f77d-4846-b2d8-a57f8e1c01dc",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('keyVaultModifyFw')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-KeyVault-Sup",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-KeyVault-Sup",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-kubernetes": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Kubernetes",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Kubernetes is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Kubernetes",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.9420233Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "aksKms": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "aksCni": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "aksLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksPrivateCluster": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksPolicy": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "aksCommandInvoke": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "aksReadinessOrLivenessProbes": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksPrivContainers": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksPrivEscalation": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksAllowedCapabilities": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksTempDisk": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksInternalLb": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksDefaultNamespace": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksNakedPods": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksShareHostProcessAndNamespace": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "aksWindowsContainerAdministrator": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Windows-Container-Administrator",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5485eac0-7e8f-4964-998b-a44f4f0c1e75",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksWindowsContainerAdministrator')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Shared-Host-Process-Namespace",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksShareHostProcessAndNamespace')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Naked-Pods",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/65280eef-c8b4-425e-9aec-af55e55bf581",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksNakedPods')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Default-Namespace",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9f061a12-e40d-4183-a00e-171812443373",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksDefaultNamespace')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Internal-Lb",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3fc4dc25-5baf-40d8-9b05-7fe74c1bc64e",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksInternalLb')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Temp-Disk-Encryption",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/41425d9f-d1a5-499a-9932-f8ed8453932c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksTempDisk')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Allowed-Capabilities",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c26596ff-4d70-4e6a-9a30-c2506bd2f80c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksAllowedCapabilities')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Priv-Escalation",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksPrivEscalation')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Priv-Containers",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksPrivContainers')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-ReadinessOrLiveness-Probes",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b1a9997f-2883-4f12-bdff-2280f99b5915",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksReadinessOrLivenessProbes')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Dine-Aks-Command-Invoke",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1b708b0a-3380-40e9-8b79-821f9fa224cc",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksCommandInvoke')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Dine-Aks-Policy",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksPolicy')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Private-Cluster",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/040732e8-d947-40b8-95d6-854c95024bf8",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksPrivateCluster')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/993c2fcd-2b29-49d2-9eb0-df2c3a730c32",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Kms",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/dbbdc317-9734-4dd8-9074-993b29c69008",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksKms')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Aks-Cni",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/46238e2f-3f6f-4589-9f3f-77bed4116e67",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('aksCni')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Kubernetes",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-Kubernetes",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-machinelearning": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Machine Learning",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Machine Learning is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Machine Learning",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7760857Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "mlUserAssignedIdentity": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "mlModifyLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "mlLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "mlOutdatedOS": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "mlModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-ML-Outdated-Os",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f110a506-2dcb-422e-bcea-d533fc8c35e2",
                  "parameters": {
                    "effects": {
                      "value": "[parameters('mlOutdatedOS')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ML-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e96a9a5f-07ca-471b-9bc5-6a0f33cbd68f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('mlLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-ML-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a6f9a2d0-cff7-4855-83ad-4cd750666512",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('mlModifyLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-ML-User-Assigned-Identity",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5f0c7d88-c7de-45b8-ac49-db49e72eaa78",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('mlUserAssignedIdentity')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-ML-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a10ee784-7409-4941-b091-663697637c0f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('mlModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-MachineLearning",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-MachineLearning",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-mysql": {
            "properties": {
              "displayName": "Enforce recommended guardrails for MySQL",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures MySQL is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "MySQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.783792Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "mySqlInfraEncryption": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "mySqlAdvThreatProtection": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Dine-MySql-Adv-Threat-Protection",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/80ed5239-4122-41ed-b54a-6f1fa7552816",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('mySqlAdvThreatProtection')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-MySql-Infra-Encryption",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3a58212a-c829-4f13-9872-6371df2fd0b4",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('mySqlInfraEncryption')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-MySQL",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-MySQL",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-network": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Network and Networking services",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Network and Networking services are compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Network",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.9522587Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "subnetUdr": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "subnetNsg": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "subnetServiceEndpoint": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appGwWaf": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "vnetModifyDdos": {
                  "type": "string",
                  "defaultValue": "Modify"
                },
                "ddosPlanResourceId": {
                  "type": "string",
                  "defaultValue": ""
                },
                "wafMode": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "wafModeRequirement": {
                  "type": "string",
                  "defaultValue": "Prevention"
                },
                "wafFwRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "wafModeAppGw": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "wafModeAppGwRequirement": {
                  "type": "string",
                  "defaultValue": "Prevention"
                },
                "denyMgmtFromInternet": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "denyMgmtFromInternetPorts": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Ports",
                    "description": "Ports to be blocked"
                  },
                  "defaultValue": [
                    "22",
                    "3389"
                  ]
                },
                "afwEnbaleTlsForAllAppRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "afwEnableTlsInspection": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "afwEmptyIDPSBypassList": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "afwEnableAllIDPSSignatureRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "afwEnableIDPS": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "wafAfdEnabled": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "vpnAzureAD": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "appGwTlsVersion": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "modifyUdr": {
                  "type": "string",
                  "defaultValue": "Disabled"
                },
                "modifyUdrNextHopIpAddress": {
                  "type": "string",
                  "defaultValue": ""
                },
                "modifyUdrNextHopType": {
                  "type": "string",
                  "defaultValue": "None"
                },
                "modifyUdrAddressPrefix": {
                  "type": "string",
                  "defaultValue": "0.0.0.0/0"
                },
                "modifyNsg": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                },
                "modifyNsgRuleName": {
                  "type": "string",
                  "defaultValue": "DenyAnyInternetOutbound"
                },
                "modifyNsgRulePriority": {
                  "type": "integer",
                  "defaultValue": 1000
                },
                "modifyNsgRuleDirection": {
                  "type": "string",
                  "defaultValue": "Outbound"
                },
                "modifyNsgRuleAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "modifyNsgRuleProtocol": {
                  "type": "string",
                  "defaultValue": "*"
                },
                "modifyNsgRuleSourceAddressPrefix": {
                  "type": "string",
                  "defaultValue": "*"
                },
                "modifyNsgRuleSourcePortRange": {
                  "type": "string",
                  "defaultValue": "*"
                },
                "modifyNsgRuleDestinationAddressPrefix": {
                  "type": "string",
                  "defaultValue": "Internet"
                },
                "modifyNsgRuleDestinationPortRange": {
                  "type": "string",
                  "defaultValue": "*"
                },
                "modifyNsgRuleDescription": {
                  "type": "string",
                  "defaultValue": "Deny any outbound traffic to the Internet"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-Nsg-GW-subnet",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/35f9c03a-cc27-418e-9c0c-539ff999d010",
                  "parameters": {},
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-VPN-AzureAD",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/21a6bc25-125e-4d13-b82d-2e19b7208ab7",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('vpnAzureAD')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Waf-Afd-Enabled",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/055aa869-bc98-4af8-bafc-23f1ab6ffe2c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('wafAfdEnabled')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Waf-IDPS",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6484db87-a62d-4327-9f07-80a2cbdf333a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('afwEnableIDPS')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-FW-AllIDPSS",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/610b6183-5f00-4d68-86d2-4ab4cb3a67a5",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('afwEnableAllIDPSSignatureRules')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-FW-EmpIDPSBypass",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f516dc7a-4543-4d40-aad6-98f76a706b50",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('afwEmptyIDPSBypassList')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-FW-TLS-Inspection",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/711c24bb-7f18-4578-b192-81a6161e1f17",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('afwEnableTlsInspection')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-FW-TLS-AllApp",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a58ac66d-92cb-409c-94b8-8e48d7a96596",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('afwEnbaleTlsForAllAppRules')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Waf-AppGw-mode",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/12430be1-6cc8-4527-a9a8-e3d38f250096",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('wafModeAppGw')]"
                    },
                    "modeRequirement": {
                      "value": "[parameters('wafModeAppGwRequirement')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Waf-Fw-rules",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/632d3993-e2c0-44ea-a7db-2eca131f356d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('wafFwRules')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Waf-mode",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/425bea59-a659-4cbb-8d31-34499bd030b8",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('wafMode')]"
                    },
                    "modeRequirement": {
                      "value": "[parameters('wafModeRequirement')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-vNet-DDoS",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/94de2ad3-e0c1-4caf-ad78-5d47bbc83d3d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('vnetModifyDdos')]"
                    },
                    "ddosPlan": {
                      "value": "[parameters('ddosPlanResourceId')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Ip-Forwarding",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/88c0b9da-ce96-4b03-9635-f29a937e2900",
                  "parameters": {},
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-vNic-Pip",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83a86a26-fd1f-447c-b59d-e51f44264114",
                  "parameters": {},
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppGw-Without-Waf",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appGwWaf')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Subnet-Without-Udr",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('subnetUdr')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Subnet-Without-NSG",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('subnetNsg')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Subnet-with-Service-Endpoints",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Service-Endpoints",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('subnetServiceEndpoint')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Mgmt-From-Internet",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MgmtPorts-From-Internet",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('denyMgmtFromInternet')]"
                    },
                    "ports": {
                      "value": "[parameters('denyMgmtFromInternetPorts')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-AppGw-Without-Tls",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGw-Without-Tls",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('appGwTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Udr",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Modify-UDR",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('modifyUdr')]"
                    },
                    "nextHopIpAddress": {
                      "value": "[parameters('modifyUdrNextHopIpAddress')]"
                    },
                    "nextHopType": {
                      "value": "[parameters('modifyUdrNextHopType')]"
                    },
                    "addressPrefix": {
                      "value": "[parameters('modifyUdrAddressPrefix')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Nsg",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Modify-NSG",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('modifyNsg')]"
                    },
                    "nsgRuleName": {
                      "value": "[parameters('modifyNsgRuleName')]"
                    },
                    "nsgRulePriority": {
                      "value": "[parameters('modifyNsgRulePriority')]"
                    },
                    "nsgRuleDirection": {
                      "value": "[parameters('modifyNsgRuleDirection')]"
                    },
                    "nsgRuleAccess": {
                      "value": "[parameters('modifyNsgRuleAccess')]"
                    },
                    "nsgRuleProtocol": {
                      "value": "[parameters('modifyNsgRuleProtocol')]"
                    },
                    "nsgRuleSourceAddressPrefix": {
                      "value": "[parameters('modifyNsgRuleSourceAddressPrefix')]"
                    },
                    "nsgRuleSourcePortRange": {
                      "value": "[parameters('modifyNsgRuleSourcePortRange')]"
                    },
                    "nsgRuleDestinationAddressPrefix": {
                      "value": "[parameters('modifyNsgRuleDestinationAddressPrefix')]"
                    },
                    "nsgRuleDestinationPortRange": {
                      "value": "[parameters('modifyNsgRuleDestinationPortRange')]"
                    },
                    "nsgRuleDescription": {
                      "value": "[parameters('modifyNsgRuleDescription')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Network",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-Network",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-openai": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Open AI (Cognitive Service)",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Open AI (Cognitive Service) is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Cognitive Services",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7685002Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "cognitiveServicesOutboundNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cognitiveServicesNetworkAcls": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cognitiveServicesModifyDisableLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "cognitiveServicesDisableLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cognitiveServicesCustomerStorage": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "cognitiveServicesManagedIdentity": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-OpenAi-OutboundNetworkAccess",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-CognitiveServices-RestrictOutboundNetworkAccess",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveServicesOutboundNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-OpenAi-NetworkAcls",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-CognitiveServices-NetworkAcls",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveServicesNetworkAcls')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Cognitive-Services-Managed-Identity",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fe3fd216-4f83-4fc1-8984-2bbec80a3418",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveServicesManagedIdentity')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Cognitive-Services-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/71ef260a-8f18-47b7-abcb-62d0673d94dc",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveServicesDisableLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Cognitive-Services-Cust-Storage",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/46aa9b05-0e60-4eae-a88b-1e9d374fa515",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveServicesCustomerStorage')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Cognitive-Services-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/14de9e63-1b31-492e-a5a3-c3f7fd57f555",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('cognitiveServicesModifyDisableLocalAuth')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-OpenAI",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-OpenAI",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-postgresql": {
            "properties": {
              "displayName": "Enforce recommended guardrails for PostgreSQL",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures PostgreSQL is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "PostgreSQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7361374Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "postgreSqlAdvThreatProtection": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Dine-PostgreSql-Adv-Threat-Protection",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/db048e65-913c-49f9-bb5f-1084184671d3",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('postgreSqlAdvThreatProtection')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-PostgreSQL",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-PostgreSQL",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-servicebus": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Service Bus",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Service Bus is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Service Bus",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8476131Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "serviceBusModifyDisableLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "serviceBusDenyDisabledLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "serviceBusDoubleEncryption": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "serviceBusAuthzRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-Sb-Authz-Rules",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a1817ec0-a368-432a-8057-8371e17ac6ee",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('serviceBusAuthzRules')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Sb-Encryption",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ebaf4f25-a4e8-415f-86a8-42d9155bef0b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('serviceBusDoubleEncryption')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Sb-LocalAuth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cfb11c26-f069-4c14-8e36-56c394dae5af",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('serviceBusDenyDisabledLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Sb-LocalAuth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/910711a6-8aa2-4f15-ae62-1e5b2ed3ef9e",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('serviceBusModifyDisableLocalAuth')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ServiceBus",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-ServiceBus",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-sql": {
            "properties": {
              "displayName": "Enforce recommended guardrails for SQL and SQL Managed Instance",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures SQL and SQL Managed Instance is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "SQL",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7763725Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "sqlManagedAadOnly": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "sqlAadOnly": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "sqlManagedDefender": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "modifySqlPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Dine-Sql-Managed-Defender",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c5a62eb0-c65a-4220-8a4d-f70dd4ca95dd",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('sqlManagedDefender')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Sql-Aad-Only",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/abda6d70-9778-44e7-84a8-06713e6db027",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('sqlAadOnly')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Sql-Managed-Aad-Only",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/78215662-041e-49ed-a9dd-5385911b3a1f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('sqlManagedAadOnly')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Dine-Sql-Adv-Data",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6134c3db-786f-471e-87bc-8f479dc890f6",
                  "parameters": {},
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Sql-PublicNetworkAccess",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/28b0b1e5-17ba-4963-a7a4-5a1ab4400a0b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('modifySqlPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-SQL",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-SQL",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-storage": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Storage Account",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Storage is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Storage",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8681751Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "storageKeysExpiration": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountNetworkRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountRestrictNetworkRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageThreatProtection": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "storageClassicToArm": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountsInfraEncryption": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountSharedKey": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountsCrossTenant": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountsDoubleEncryption": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountsCopyScope": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAccountsAllowedCopyScope": {
                  "type": "string",
                  "defaultValue": "AAD"
                },
                "storageServicesEncryption": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageLocalUser": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Disabled"
                },
                "storageSftp": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageNetworkAclsBypass": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageAllowedNetworkAclsBypass": {
                  "type": "array",
                  "defaultValue": [
                    "None"
                  ]
                },
                "storageResourceAccessRulesTenantId": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageResourceAccessRulesResourceId": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageNetworkAclsVirtualNetworkRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageContainerDeleteRetentionPolicy": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "storageMinContainerDeleteRetentionInDays": {
                  "type": "Integer",
                  "defaultValue": 7
                },
                "storageCorsRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "modifyStorageFileSyncPublicEndpoint": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "modifyStorageAccountPublicEndpoint": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "storageAccountsModifyDisablePublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Deny-Storage-CopyScope",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-CopyScope",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountsCopyScope')]"
                    },
                    "allowedCopyScope": {
                      "value": "[parameters('storageAccountsAllowedCopyScope')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-ServicesEncryption",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-ServicesEncryption",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageServicesEncryption')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-LocalUser",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-LocalUser",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageLocalUser')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-SFTP",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-SFTP",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageSftp')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-NetworkAclsBypass",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-NetworkAclsBypass",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageNetworkAclsBypass')]"
                    },
                    "allowedBypassOptions": {
                      "value": "[parameters('storageAllowedNetworkAclsBypass')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-ResourceAccessRulesTenantId",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-ResourceAccessRulesTenantId",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageResourceAccessRulesTenantId')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-ResourceAccessRulesResourceId",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-ResourceAccessRulesResourceId",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageResourceAccessRulesResourceId')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-NetworkAclsVirtualNetworkRules",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-NetworkAclsVirtualNetworkRules",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageNetworkAclsVirtualNetworkRules')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-ContainerDeleteRetentionPolicy",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-ContainerDeleteRetentionPolicy",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageContainerDeleteRetentionPolicy')]"
                    },
                    "minContainerDeleteRetentionInDays": {
                      "value": "[parameters('storageMinContainerDeleteRetentionInDays')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-CorsRules",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-CorsRules",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageCorsRules')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Account-Encryption",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bfecdea6-31c4-4045-ad42-71b9dc87247d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountsDoubleEncryption')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Cross-Tenant",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/92a89a79-6c52-4a7e-a03f-61306fc49312",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountsCrossTenant')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Shared-Key",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8c6a50c6-9ffd-4ae7-986f-5fa6111f9a54",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountSharedKey')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Infra-Encryption",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4733ea7b-a883-42fe-8cac-97454c2a9e4a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountsInfraEncryption')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Classic",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/37e0d2fe-28a5-43d6-a273-67d37d1f5606",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageClassicToArm')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Dine-Storage-Threat-Protection",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/361c2074-3595-4e5d-8cab-4f21dffc835c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageThreatProtection')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Restrict-NetworkRules",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountRestrictNetworkRules')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-NetworkRules",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2a1a9cdf-e04d-429a-8416-3bfb72a1b26f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountNetworkRules')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Storage-Account-Keys-Expire",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/044985bb-afe1-42cd-8a36-9d5d42424537",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageKeysExpiration')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Storage-FileSync-PublicEndpoint",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e07b2e9-6cd9-4c40-9ccb-52817b95133b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('modifyStorageFileSyncPublicEndpoint')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Blob-Storage-Account-PublicEndpoint",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/13502221-8df0-4414-9937-de9c5c4e396b",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('modifyStorageAccountPublicEndpoint')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Storage-Account-PublicEndpoint",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a06d0189-92e8-4dba-b0c4-08d7669fce7d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('storageAccountsModifyDisablePublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Storage",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-Storage",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6355392Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6355392Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-synapse": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Synapse workspaces",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Synapse workspaces is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Synapse",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.8193894Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "synapseLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "synapseManagedVnet": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "synapseDataTraffic": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "synapseTenants": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Deny"
                },
                "synapseAllowedTenantIds": {
                  "type": "array",
                  "defaultValue": [
                    "[subscription().tenantId]"
                  ]
                },
                "synapseFwRules": {
                  "type": "string",
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "synapseModifyLocalAuth": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "synapseDefender": {
                  "type": "string",
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "synapseModifyTlsVersion": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "synapseModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Dine-Synapse-Defender",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/951c1558-50a5-4ca3-abb6-a93e3e2367a6",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapseDefender')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Synapse-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c3624673-d2ff-48e0-b28c-5de1c6767c3c",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapseModifyLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Synapse-Fw-Rules",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/56fd377d-098c-4f02-8406-81eb055902b8",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapseFwRules')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Synapse-Tenant-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3a003702-13d2-4679-941b-937e58c443f0",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapseTenants')]"
                    },
                    "allowedTenantIds": {
                      "value": "[parameters('synapseAllowedTenantIds')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Synapse-Data-Traffic",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3484ce98-c0c5-4c83-994b-c5ac24785218",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapseDataTraffic')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Synapse-Managed-Vnet",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2d9dbfa3-927b-4cf0-9d0f-08747f971650",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapseManagedVnet')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Deny-Synapse-Local-Auth",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2158ddbe-fefa-408e-b43f-d4faef8ff3b8",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapseLocalAuth')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Synapse-Tls-Version",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8b5c654c-fb07-471b-aa8f-15fea733f140",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapseModifyTlsVersion')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Synapse-Public-Network-Access",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5c8cad01-ef30-4891-b230-652dadb4876a",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('synapseModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Synapse",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-Synapse",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.6199133Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.6199133Z"
            }
          },
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/policysetdefinitions/enforce-guardrails-virtualdesktop": {
            "properties": {
              "displayName": "Enforce recommended guardrails for Virtual Desktop",
              "policyType": "Custom",
              "description": "This policy initiative is a group of policies that ensures Virtual Desktop is compliant per regulated Landing Zones.",
              "metadata": {
                "version": "1.0.0",
                "category": "Desktop Virtualization",
                "source": "https://github.com/Azure/Enterprise-Scale/",
                "alzCloudEnvironments": [
                  "AzureCloud",
                  "AzureChinaCloud",
                  "AzureUSGovernment"
                ],
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:59:04.7334658Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "parameters": {
                "avdWorkspaceModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "avdHostPoolModifyPublicNetworkAccess": {
                  "type": "string",
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                }
              },
              "policyDefinitions": [
                {
                  "policyDefinitionReferenceId": "Modify-Workspace-PublicNetworkAccess",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ce6ebf1d-0b94-4df9-9257-d8cacc238b4f",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('avdWorkspaceModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                },
                {
                  "policyDefinitionReferenceId": "Modify-Hostpool-PublicNetworkAccess",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2a0913ff-51e7-47b8-97bb-ea17127f7c8d",
                  "parameters": {
                    "effect": {
                      "value": "[parameters('avdHostPoolModifyPublicNetworkAccess')]"
                    }
                  },
                  "groupNames": []
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-VirtualDesktop",
            "type": "Microsoft.Authorization/policySetDefinitions",
            "name": "Enforce-Guardrails-VirtualDesktop",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:59:04.604289Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:59:04.604289Z"
            }
          }
        },
        "BlueprintDefinitions": {},
        "PolicyAssignments": {
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Audit-ResourceRGLocation": {
            "properties": {
              "displayName": "Resource Group and Resource locations should match",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a914e76-4921-4c19-b460-a2d36003525a",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {},
              "description": "Resource Group and Resource locations should match.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:13:43.2143229Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Resources must be deployed in the same region as the Resource Group."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Audit-ResourceRGLocation",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Audit-ResourceRGLocation",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:13:43.142808Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:13:43.142808Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Audit-TrustedLaunch": {
            "properties": {
              "displayName": "Audit virtual machines for Trusted Launch support",
              "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Audit-TrustedLaunch",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {
                "effect": {
                  "value": "Audit"
                }
              },
              "description": "Trusted Launch improves security of a Virtual Machine which requires VM SKU, OS Disk & OS Image to support it (Gen 2). To learn more about Trusted Launch, visit https://aka.ms/trustedlaunch.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:13:43.100933Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Trust Launch must be used on supported virtual machines for enhanced security."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Audit-TrustedLaunch",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Audit-TrustedLaunch",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:13:42.7474614Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:13:42.7474614Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Audit-UnusedResources": {
            "properties": {
              "displayName": "Unused resources driving cost should be avoided",
              "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Audit-UnusedResourcesCostOptimization",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {
                "EffectDisks": {
                  "value": "Audit"
                },
                "EffectPublicIpAddresses": {
                  "value": "Audit"
                },
                "EffectServerFarms": {
                  "value": "Audit"
                }
              },
              "description": "This Policy initiative is a group of Policy definitions that help optimize cost by detecting unused but chargeable resources. Leverage this Policy initiative as a cost control to reveal orphaned resources that are driving cost.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:13:42.7029297Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Unused resources driving cost must be avoided."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Audit-UnusedResources",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Audit-UnusedResources",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:13:42.6450833Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:13:42.6450833Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Audit-ZoneResiliency": {
            "properties": {
              "displayName": "Resources should be Zone Resilient",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/130fb88f-0fc9-4678-bfe1-31022d71c7d5",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {
                "effect": {
                  "value": "Audit"
                },
                "allow": {
                  "value": "Both"
                }
              },
              "description": "Resources should be Zone Resilient.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:13:42.4465534Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Resources must be Zone Resilient."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Audit-ZoneResiliency",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Audit-ZoneResiliency",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:13:42.3456836Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:13:42.3456836Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deny-Classic-Resources": {
            "properties": {
              "displayName": "Deny the deployment of classic resources",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {
                "listOfResourceTypesNotAllowed": {
                  "value": [
                    "Microsoft.ClassicCompute/capabilities",
                    "Microsoft.ClassicCompute/checkDomainNameAvailability",
                    "Microsoft.ClassicCompute/domainNames",
                    "Microsoft.ClassicCompute/domainNames/capabilities",
                    "Microsoft.ClassicCompute/domainNames/internalLoadBalancers",
                    "Microsoft.ClassicCompute/domainNames/serviceCertificates",
                    "Microsoft.ClassicCompute/domainNames/slots",
                    "Microsoft.ClassicCompute/domainNames/slots/roles",
                    "Microsoft.ClassicCompute/domainNames/slots/roles/metricDefinitions",
                    "Microsoft.ClassicCompute/domainNames/slots/roles/metrics",
                    "Microsoft.ClassicCompute/moveSubscriptionResources",
                    "Microsoft.ClassicCompute/operatingSystemFamilies",
                    "Microsoft.ClassicCompute/operatingSystems",
                    "Microsoft.ClassicCompute/operations",
                    "Microsoft.ClassicCompute/operationStatuses",
                    "Microsoft.ClassicCompute/quotas",
                    "Microsoft.ClassicCompute/resourceTypes",
                    "Microsoft.ClassicCompute/validateSubscriptionMoveAvailability",
                    "Microsoft.ClassicCompute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines/diagnosticSettings",
                    "Microsoft.ClassicCompute/virtualMachines/metricDefinitions",
                    "Microsoft.ClassicCompute/virtualMachines/metrics",
                    "Microsoft.ClassicInfrastructureMigrate/classicInfrastructureResources",
                    "Microsoft.ClassicNetwork/capabilities",
                    "Microsoft.ClassicNetwork/expressRouteCrossConnections",
                    "Microsoft.ClassicNetwork/expressRouteCrossConnections/peerings",
                    "Microsoft.ClassicNetwork/gatewaySupportedDevices",
                    "Microsoft.ClassicNetwork/networkSecurityGroups",
                    "Microsoft.ClassicNetwork/operations",
                    "Microsoft.ClassicNetwork/quotas",
                    "Microsoft.ClassicNetwork/reservedIps",
                    "Microsoft.ClassicNetwork/virtualNetworks",
                    "Microsoft.ClassicNetwork/virtualNetworks/remoteVirtualNetworkPeeringProxies",
                    "Microsoft.ClassicNetwork/virtualNetworks/virtualNetworkPeerings",
                    "Microsoft.ClassicStorage/capabilities",
                    "Microsoft.ClassicStorage/checkStorageAccountAvailability",
                    "Microsoft.ClassicStorage/disks",
                    "Microsoft.ClassicStorage/images",
                    "Microsoft.ClassicStorage/operations",
                    "Microsoft.ClassicStorage/osImages",
                    "Microsoft.ClassicStorage/osPlatformImages",
                    "Microsoft.ClassicStorage/publicImages",
                    "Microsoft.ClassicStorage/quotas",
                    "Microsoft.ClassicStorage/storageAccounts",
                    "Microsoft.ClassicStorage/storageAccounts/blobServices",
                    "Microsoft.ClassicStorage/storageAccounts/fileServices",
                    "Microsoft.ClassicStorage/storageAccounts/metricDefinitions",
                    "Microsoft.ClassicStorage/storageAccounts/metrics",
                    "Microsoft.ClassicStorage/storageAccounts/queueServices",
                    "Microsoft.ClassicStorage/storageAccounts/services",
                    "Microsoft.ClassicStorage/storageAccounts/services/diagnosticSettings",
                    "Microsoft.ClassicStorage/storageAccounts/services/metricDefinitions",
                    "Microsoft.ClassicStorage/storageAccounts/services/metrics",
                    "Microsoft.ClassicStorage/storageAccounts/tableServices",
                    "Microsoft.ClassicStorage/storageAccounts/vmImages",
                    "Microsoft.ClassicStorage/vmImages",
                    "Microsoft.ClassicSubscription/operations"
                  ]
                },
                "effect": {
                  "value": "Deny"
                }
              },
              "description": "Denies deployment of classic resource types under the assigned scope.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T08:58:28.4630934Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Classic resources must not be deployed."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deny-Classic-Resources",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Deny-Classic-Resources",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T08:58:28.4249992Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T08:58:28.4249992Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deny-UnmanagedDisk": {
            "properties": {
              "displayName": "Deny virtual machines and virtual machine scale sets that do not use managed disk",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "description": "Deny virtual machines that do not use managed disk. It checks the managed disk property on virtual machine OS Disk fields.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:13:42.9339398Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Virtual machines and virtual machine scales sets must use a managed disk."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deny-UnmanagedDisk",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Deny-UnmanagedDisk",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:13:42.88031Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:13:42.88031Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring": {
            "identity": {
              "principalId": "6fba3b26-9811-4bb0-b7cc-a02b2c441843",
              "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
              "type": "SystemAssigned"
            },
            "properties": {
              "displayName": "Microsoft Cloud Security Benchmark",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {},
              "description": "Microsoft Cloud Security Benchmark policy initiative.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:14:25.4851421Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Microsoft Cloud Security Benchmark must be met."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Deploy-ASC-Monitoring",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:14:22.8700267Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:14:22.8700267Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log": {
            "identity": {
              "principalId": "a6a31034-56d2-4f3e-a77e-bd7169921066",
              "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
              "type": "SystemAssigned"
            },
            "properties": {
              "displayName": "Configure Azure Activity logs to stream to specified Log Analytics workspace",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2465583e-4e78-4c15-b6be-a36cbc7c8b0f",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {
                "logAnalytics": {
                  "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law"
                },
                "logsEnabled": {
                  "value": "True"
                }
              },
              "description": "Deploys the diagnostic settings for Azure Activity to stream subscriptions audit logs to a Log Analytics workspace to monitor subscription-level events",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:14:25.0721858Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Azure Activity logs must be configured to stream to specified Log Analytics workspace."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Deploy-AzActivity-Log",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:14:22.939681Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:14:22.939681Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-Diag-Logs": {
            "identity": {
              "principalId": "64bfe7b2-0cdf-49d7-9d69-ae20bc595173",
              "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
              "type": "SystemAssigned"
            },
            "properties": {
              "displayName": "Enable allLogs category group resource logging for supported resources to Log Analytics",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/0884adba-2312-4468-abeb-5422caed1038",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {
                "logAnalytics": {
                  "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law"
                }
              },
              "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This initiative deploys diagnostic setting using the allLogs category group to route logs to an Event Hub for all supported resources.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:14:25.0292442Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Diagnostic settings must be deployed to Azure services to forward logs to Log Analytics."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-Diag-Logs",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Deploy-Diag-Logs",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:14:22.777451Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:14:22.777451Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-MDEndpoints": {
            "identity": {
              "principalId": "9f718ddf-22d1-4a57-9d51-79c2bb179c4f",
              "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
              "type": "SystemAssigned"
            },
            "properties": {
              "displayName": "[Preview]: Deploy Microsoft Defender for Endpoint agent",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/e20d08c5-6d64-656d-6465-ce9e37fd0ebc",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {
                "microsoftDefenderForEndpointWindowsVmAgentDeployEffect": {
                  "value": "DeployIfNotExists"
                },
                "microsoftDefenderForEndpointLinuxVmAgentDeployEffect": {
                  "value": "DeployIfNotExists"
                },
                "microsoftDefenderForEndpointWindowsArcAgentDeployEffect": {
                  "value": "DeployIfNotExists"
                },
                "microsoftDefenderForEndpointLinuxArcAgentDeployEffect": {
                  "value": "DeployIfNotExists"
                }
              },
              "description": "Deploy Microsoft Defender for Endpoint agent on applicable images.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:14:23.8110656Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Microsoft Defender for Endpoint agent must be deployed on applicable images."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-MDEndpoints",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Deploy-MDEndpoints",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:14:22.9710456Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:14:22.9710456Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-MDEndpointsAMA": {
            "identity": {
              "principalId": "a46689dd-9a69-4714-84f9-45256fcf146a",
              "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
              "type": "SystemAssigned"
            },
            "properties": {
              "displayName": "Configure multiple Microsoft Defender for Endpoint integration settings with Microsoft Defender for Cloud",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/77b391e3-2d5d-40c3-83bf-65c846b3c6a3",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {},
              "description": "Configure the multiple Microsoft Defender for Endpoint integration settings with Microsoft Defender for Cloud (WDATP, WDATP_EXCLUDE_LINUX_PUBLIC_PREVIEW, WDATP_UNIFIED_SOLUTION etc.). See: https://learn.microsoft.com/azure/defender-for-cloud/integration-defender-for-endpoint for more information.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:14:24.8531876Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Microsoft Defender for Endpoint must be deployed."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-MDEndpointsAMA",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Deploy-MDEndpointsAMA",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:14:22.9603434Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:14:22.9603434Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config-H224": {
            "identity": {
              "principalId": "51444b18-70dd-4bbe-905a-c8c8f507fecd",
              "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
              "type": "SystemAssigned"
            },
            "properties": {
              "displayName": "Deploy Microsoft Defender for Cloud configuration",
              "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config_20240319",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {
                "emailSecurityContact": {
                  "value": "sachana@microsoft.com"
                },
                "logAnalytics": {
                  "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law"
                },
                "ascExportResourceGroupName": {
                  "value": "ALZ-asc-export"
                },
                "ascExportResourceGroupLocation": {
                  "value": "uksouth"
                },
                "enableAscForServers": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForServersVulnerabilityAssessments": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForSql": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForAppServices": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForStorage": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForContainers": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForKeyVault": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForSqlOnVm": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForArm": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForOssDb": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForCosmosDbs": {
                  "value": "DeployIfNotExists"
                },
                "enableAscForCspm": {
                  "value": "DeployIfNotExists"
                }
              },
              "description": "Deploy Microsoft Defender for Cloud and Security Contacts",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:14:25.1260744Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Microsoft Defender for Cloud and Security Contacts must be deployed."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config-H224",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Deploy-MDFC-Config-H224",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:14:23.033367Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:14:23.033367Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-OssDb": {
            "identity": {
              "principalId": "43c536f9-6f72-4086-bde7-8cbdf604c64d",
              "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
              "type": "SystemAssigned"
            },
            "properties": {
              "displayName": "Configure Advanced Threat Protection to be enabled on open-source relational databases",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/e77fc0b3-f7e9-4c58-bc13-cb753ed8e46e",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {},
              "description": "Enable Advanced Threat Protection on your non-Basic tier open-source relational databases to detect anomalous activities indicating unusual and potentially harmful attempts to access or exploit databases. See https://aka.ms/AzDforOpenSourceDBsDocu.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:14:25.1402499Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Advanced Threat Protection must be enabled on open-source relational databases."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-OssDb",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Deploy-MDFC-OssDb",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:14:23.2032178Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:14:23.2032178Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-SqlAtp": {
            "identity": {
              "principalId": "4d20fbdc-1c61-4280-98fe-5e53277fcf85",
              "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
              "type": "SystemAssigned"
            },
            "properties": {
              "displayName": "Configure Azure Defender to be enabled on SQL Servers and SQL Managed Instances",
              "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/9cb3cc7a-b39b-4b82-bc89-e5a5d9ff7b97",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "parameters": {},
              "description": "Enable Azure Defender on your SQL Servers and SQL Managed Instances to detect anomalous activities indicating unusual and potentially harmful attempts to access or exploit databases.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:14:25.1824599Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Azure Defender must be enabled on SQL Servers and SQL Managed Instances."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-SqlAtp",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Deploy-MDFC-SqlAtp",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:14:23.0723069Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:14:23.0723069Z"
            }
          },
          "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Enforce-ACSB": {
            "identity": {
              "principalId": "2d32f9ff-6d30-4b31-8470-ab76d790fdb3",
              "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
              "type": "SystemAssigned"
            },
            "properties": {
              "displayName": "Enforce Azure Compute Security Baseline compliance auditing",
              "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ACSB",
              "scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "description": "This initiative assignment enables Azure Compute Security Baseline compliance auditing for Windows and Linux virtual machines.",
              "metadata": {
                "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                "createdOn": "2024-06-10T09:13:46.2345251Z",
                "updatedBy": null,
                "updatedOn": null
              },
              "enforcementMode": "Default",
              "nonComplianceMessages": [
                {
                  "message": "Azure Compute Security Baseline compliance auditing must be enforced."
                }
              ]
            },
            "id": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyAssignments/Enforce-ACSB",
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "Enforce-ACSB",
            "location": "uksouth",
            "systemData": {
              "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "createdByType": "User",
              "createdAt": "2024-06-10T09:13:43.3718935Z",
              "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2024-06-10T09:13:43.3718935Z"
            }
          }
        },
        "RoleAssignments": {
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/1dfa30c5-dcc2-54aa-9835-38d6d4fbe2e9": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/1dfa30c5-dcc2-54aa-9835-38d6d4fbe2e9",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "Deploy-MDEndpointsAMA",
              "SignInName": null,
              "RoleDefinitionName": "Security Admin",
              "RoleDefinitionId": "fb1c8493-542b-48eb-b624-b4c8fea62acd",
              "ObjectId": "a46689dd-9a69-4714-84f9-45256fcf146a",
              "ObjectType": "ServicePrincipal",
              "PIM": "false"
            }
          ],
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/27ec7992-150f-54c3-8b5f-27d9c3fa4dbf": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/27ec7992-150f-54c3-8b5f-27d9c3fa4dbf",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "Enforce-ACSB",
              "SignInName": null,
              "RoleDefinitionName": "Contributor",
              "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
              "ObjectId": "2d32f9ff-6d30-4b31-8470-ab76d790fdb3",
              "ObjectType": "ServicePrincipal",
              "PIM": "false"
            }
          ],
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/2d110b93-7a4a-5d3a-bca2-62ebd0dfa8c4": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/2d110b93-7a4a-5d3a-bca2-62ebd0dfa8c4",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "Deploy-MDFC-Config-H224",
              "SignInName": null,
              "RoleDefinitionName": "Owner",
              "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
              "ObjectId": "51444b18-70dd-4bbe-905a-c8c8f507fecd",
              "ObjectType": "ServicePrincipal",
              "PIM": "false"
            }
          ],
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/3530da2a-f528-5735-9069-31e7579fd78f": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/3530da2a-f528-5735-9069-31e7579fd78f",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "Deploy-MDFC-SqlAtp",
              "SignInName": null,
              "RoleDefinitionName": "SQL Security Manager",
              "RoleDefinitionId": "056cd41c-7e88-42e1-933e-88ba6a50c9c3",
              "ObjectId": "4d20fbdc-1c61-4280-98fe-5e53277fcf85",
              "ObjectType": "ServicePrincipal",
              "PIM": "false"
            }
          ],
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/35eaf8f4-aa72-5302-9ae5-1ce751444bc6": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/35eaf8f4-aa72-5302-9ae5-1ce751444bc6",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "Deploy-AzActivity-Log",
              "SignInName": null,
              "RoleDefinitionName": "Log Analytics Contributor",
              "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
              "ObjectId": "a6a31034-56d2-4f3e-a77e-bd7169921066",
              "ObjectType": "ServicePrincipal",
              "PIM": "false"
            }
          ],
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/61b232e2-57b3-56dc-b60a-1569b1109b9a": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/61b232e2-57b3-56dc-b60a-1569b1109b9a",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "Deploy-AzActivity-Log",
              "SignInName": null,
              "RoleDefinitionName": "Monitoring Contributor",
              "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "ObjectId": "a6a31034-56d2-4f3e-a77e-bd7169921066",
              "ObjectType": "ServicePrincipal",
              "PIM": "false"
            }
          ],
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/6c29ee4e-17f0-47e0-b9df-196fd1f1b2c4": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/6c29ee4e-17f0-47e0-b9df-196fd1f1b2c4",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "System Administrator",
              "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
              "RoleDefinitionName": "Owner",
              "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
              "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
              "ObjectType": "User",
              "PIM": "false"
            }
          ],
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/72c409df-4b31-5344-9558-92df4707b943": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/72c409df-4b31-5344-9558-92df4707b943",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "Deploy-MDEndpoints",
              "SignInName": null,
              "RoleDefinitionName": "Contributor",
              "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
              "ObjectId": "9f718ddf-22d1-4a57-9d51-79c2bb179c4f",
              "ObjectType": "ServicePrincipal",
              "PIM": "false"
            }
          ],
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/a7f757eb-adb0-5ec0-814e-e4d8ced6ac23": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/a7f757eb-adb0-5ec0-814e-e4d8ced6ac23",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "Deploy-Diag-Logs",
              "SignInName": null,
              "RoleDefinitionName": "Log Analytics Contributor",
              "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
              "ObjectId": "64bfe7b2-0cdf-49d7-9d69-ae20bc595173",
              "ObjectType": "ServicePrincipal",
              "PIM": "false"
            }
          ],
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/aa6b5c84-3dbd-55b2-b668-a6349ab2a699": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/aa6b5c84-3dbd-55b2-b668-a6349ab2a699",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "Deploy-MDFC-OssDb",
              "SignInName": null,
              "RoleDefinitionName": "Contributor",
              "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
              "ObjectId": "43c536f9-6f72-4086-bde7-8cbdf604c64d",
              "ObjectType": "ServicePrincipal",
              "PIM": "false"
            }
          ],
          "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/f3606812-21d7-5230-9803-aed235762258": [
            {
              "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz/providers/microsoft.authorization/roleassignments/f3606812-21d7-5230-9803-aed235762258",
              "Scope": "/providers/Microsoft.Management/managementGroups/ALZ",
              "DisplayName": "Deploy-Diag-Logs",
              "SignInName": null,
              "RoleDefinitionName": "Monitoring Contributor",
              "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "ObjectId": "64bfe7b2-0cdf-49d7-9d69-ae20bc595173",
              "ObjectType": "ServicePrincipal",
              "PIM": "false"
            }
          ]
        },
        "DiagnosticSettings": {
          "toLa": {
            "Name": "toLa",
            "Type": "LA",
            "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
            "Settings": [
              {
                "Category": "Administrative",
                "Enabled": true
              },
              {
                "Category": "Policy",
                "Enabled": true
              }
            ]
          }
        },
        "Subscriptions": {},
        "ManagementGroups": {
          "ALZ-decommissioned": {
            "MgId": "ALZ-decommissioned",
            "MgName": "ALZ-decommissioned",
            "mgParentId": "ALZ",
            "mgParentName": "ALZ",
            "level": "2",
            "PolicyDefinitionsCustom": {},
            "PolicySetDefinitionsCustom": {},
            "BlueprintDefinitions": {},
            "PolicyAssignments": {
              "/providers/Microsoft.Management/managementGroups/ALZ-decommissioned/providers/Microsoft.Authorization/policyAssignments/Enforce-ALZ-Decomm": {
                "identity": {
                  "principalId": "fa0075cd-e802-4a9b-b12d-b24a1b5a0fb6",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce ALZ Decommissioned Guardrails",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ALZ-Decomm",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-decommissioned",
                  "parameters": {
                    "listOfResourceTypesAllowed": {
                      "value": [
                        "microsoft.consumption/tags",
                        "microsoft.authorization/roleassignments",
                        "microsoft.authorization/roledefinitions",
                        "microsoft.authorization/policyassignments",
                        "microsoft.authorization/locks",
                        "microsoft.authorization/policydefinitions",
                        "microsoft.authorization/policysetdefinitions",
                        "microsoft.resources/tags",
                        "microsoft.authorization/roleeligibilityschedules",
                        "microsoft.authorization/roleeligibilityscheduleinstances",
                        "microsoft.authorization/roleassignmentschedules",
                        "microsoft.authorization/roleassignmentscheduleinstances"
                      ]
                    }
                  },
                  "description": "This initiative will help enforce and govern subscriptions that are placed within the decommissioned Management Group as part of your Subscription decommissioning process. See https://aka.ms/alz/policies for more information.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:46.3282177Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-decommissioned/providers/Microsoft.Authorization/policyAssignments/Enforce-ALZ-Decomm",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-ALZ-Decomm",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.3120058Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.3120058Z"
                }
              }
            },
            "RoleAssignments": {
              "/providers/microsoft.management/managementgroups/alz-decommissioned/providers/microsoft.authorization/roleassignments/762686db-ab39-4a4b-832e-eb6de8b216b0": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-decommissioned/providers/microsoft.authorization/roleassignments/762686db-ab39-4a4b-832e-eb6de8b216b0",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-decommissioned",
                  "DisplayName": "System Administrator",
                  "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "RoleDefinitionName": "Owner",
                  "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                  "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                  "ObjectType": "User",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-decommissioned/providers/microsoft.authorization/roleassignments/ba1ee478-dd2d-575b-bc90-aab3f6d9a2bd": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-decommissioned/providers/microsoft.authorization/roleassignments/ba1ee478-dd2d-575b-bc90-aab3f6d9a2bd",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-decommissioned",
                  "DisplayName": "Enforce-ALZ-Decomm",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "fa0075cd-e802-4a9b-b12d-b24a1b5a0fb6",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ]
            },
            "DiagnosticSettings": {
              "toLa": {
                "Name": "toLa",
                "Type": "LA",
                "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                "Settings": [
                  {
                    "Category": "Administrative",
                    "Enabled": true
                  },
                  {
                    "Category": "Policy",
                    "Enabled": true
                  }
                ]
              }
            },
            "Subscriptions": {},
            "ManagementGroups": {}
          },
          "ALZ-landingzones": {
            "MgId": "ALZ-landingzones",
            "MgName": "ALZ-landingzones",
            "mgParentId": "ALZ",
            "mgParentName": "ALZ",
            "level": "2",
            "PolicyDefinitionsCustom": {},
            "PolicySetDefinitionsCustom": {},
            "BlueprintDefinitions": {},
            "PolicyAssignments": {
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Audit-AppGW-WAF": {
                "properties": {
                  "displayName": "Web Application Firewall (WAF) should be enabled for Application Gateway",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "effect": {
                      "value": "Audit"
                    }
                  },
                  "description": "Assign the WAF should be enabled for Application Gateway audit policy.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:43.9962993Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Web Application Firewall (WAF) must be enabled for Application Gateway."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Audit-AppGW-WAF",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Audit-AppGW-WAF",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:43.9272318Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:43.9272318Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-forwarding": {
                "properties": {
                  "displayName": "Network interfaces should disable IP forwarding",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/88c0b9da-ce96-4b03-9635-f29a937e2900",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This policy denies the network interfaces which enabled IP forwarding. The setting of IP forwarding disables Azure's check of the source and destination for a network interface. This should be reviewed by the network security team.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.1643543Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Network interfaces must disable IP forwarding."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-forwarding",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deny-IP-forwarding",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.1274062Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.1274062Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-MgmtPorts-Internet": {
                "properties": {
                  "displayName": "Management port access from the Internet should be blocked",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MgmtPorts-From-Internet",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This policy denies any network security rule that allows management port access from the Internet",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:43.9704579Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Management port access from the Internet must be blocked."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-MgmtPorts-Internet",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deny-MgmtPorts-Internet",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:43.9084132Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:43.9084132Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Esc-AKS": {
                "properties": {
                  "displayName": "Kubernetes clusters should not allow container privilege escalation",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "effect": {
                      "value": "deny"
                    }
                  },
                  "description": "Do not allow containers to run with privilege escalation to root in a Kubernetes cluster. This recommendation is part of CIS 5.2.5 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.2142197Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Esc-AKS",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deny-Priv-Esc-AKS",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.173032Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.173032Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Privileged-AKS": {
                "properties": {
                  "displayName": "Kubernetes cluster should not allow privileged containers",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "effect": {
                      "value": "deny"
                    }
                  },
                  "description": "Do not allow privileged containers creation in a Kubernetes cluster. This recommendation is part of CIS 5.2.1 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.2151672Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Privileged-AKS",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deny-Privileged-AKS",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.173032Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.173032Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http": {
                "properties": {
                  "displayName": "Secure transfer to storage accounts should be enabled",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "effect": {
                      "value": "Deny"
                    }
                  },
                  "description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.3267285Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Secure transfer to storage accounts must be enabled."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deny-Storage-http",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.2713194Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.2713194Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg": {
                "properties": {
                  "displayName": "Subnets should have a Network Security Group",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This policy denies the creation of a subnet without a Network Security Group to protect traffic across subnets.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.4124115Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Subnets must have a Network Security Group."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deny-Subnet-Without-Nsg",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.358518Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.358518Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy": {
                "identity": {
                  "principalId": "bbc34170-d9a8-4949-b1d8-c17411078f7b",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deploy Azure Policy Add-on to Azure Kubernetes Service clusters",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "Use Azure Policy Add-on to manage and report on the compliance state of your Azure Kubernetes Service (AKS) clusters. For more information, see https://aka.ms/akspolicydoc.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:46.2172037Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-AKS-Policy",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:43.9272318Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:43.9272318Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AzSqlDb-Auditing": {
                "identity": {
                  "principalId": "49221f93-fbcc-4900-9360-3af2db51bde5",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Configure SQL servers to have auditing enabled to Log Analytics workspace",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/25da7dfb-0666-4a15-a8f5-402127efd8bb",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "logAnalyticsWorkspaceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law"
                    }
                  },
                  "description": "To ensure the operations performed against your SQL assets are captured, SQL servers should have auditing enabled. If auditing is not enabled, this policy will configure auditing events to flow to the specified Log Analytics workspace.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:24.3452564Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "SQL servers must have auditing enabled to Log Analytics workspace."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AzSqlDb-Auditing",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-AzSqlDb-Auditing",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:22.2309422Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:22.2309422Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-DefSQL-AMA": {
                "identity": {
                  "principalId": "473eb78e-6726-4d88-9775-feb244d55055",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "workspaceRegion": {
                      "value": "uksouth"
                    },
                    "userWorkspaceResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law"
                    },
                    "bringYourOwnDcr": {
                      "value": true
                    },
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-defendersql-prod-uksouth-001"
                    },
                    "enableCollectionOfSqlQueriesForSecurityResearch": {
                      "value": false
                    },
                    "bringYourOwnUserAssignedManagedIdentity": {
                      "value": true
                    },
                    "userAssignedIdentityResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-ama-prod-uksouth-001"
                    }
                  },
                  "description": "Microsoft Defender for SQL collects events from the agents and uses them to provide security alerts and tailored hardening tasks (recommendations).",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:02.2996963Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Microsoft Defender for SQL must be deployed."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-DefSQL-AMA",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-MDFC-DefSQL-AMA",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:01.3754634Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:01.3754634Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-TDE": {
                "identity": {
                  "principalId": "c1ee23ef-1318-45fc-b098-6dfd4125e5ed",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deploy TDE on SQL servers",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86a912f6-9a06-4e26-b447-11b16ba8659f",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This policy ensures that Transparent Data Encryption is enabled on SQL Servers.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:45.9329538Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "TDE must be deployed on SQL servers."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-TDE",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-SQL-TDE",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:43.942845Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:43.942845Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat": {
                "identity": {
                  "principalId": "dc894fc8-b3b5-473b-9629-a23283422141",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deploy Threat Detection on SQL servers",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/36d49e87-48c4-4f2e-beed-ba4ed02b71f5",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This policy ensures that Threat Detection is enabled on SQL Servers.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:46.4712974Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Threat Detection must be deployed on SQL servers."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-SQL-Threat",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.4187842Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.4187842Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup": {
                "identity": {
                  "principalId": "b516c41f-17f9-46ee-9171-6b34175425cd",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Configure backup on virtual machines without a given tag to a new recovery services vault with a default policy",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {},
                  "description": "Enforce backup for all virtual machines by deploying a recovery services vault in the same location and resource group as the virtual machine. Doing this is useful when different application teams in your organization are allocated separate resource groups and need to manage their own backups and restores. You can optionally exclude virtual machines containing a specified tag to control the scope of assignment. See https://aka.ms/AzureVMAppCentricBackupExcludeTag.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:46.2619242Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Backup on virtual machines without a given tag must be configured to a new recovery services vault with a default policy."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VM-Backup",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.2804018Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.2804018Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-ChangeTrack": {
                "identity": {
                  "principalId": "95610fab-0c83-45d3-89f9-94d0ed18d42d",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable ChangeTracking and Inventory for virtual machines",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/92a36f05-ebc9-4bba-9128-b47ad2ea3354",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-changetracking-prod-uksouth-001"
                    },
                    "bringYourOwnUserAssignedManagedIdentity": {
                      "value": true
                    },
                    "restrictBringYourOwnUserAssignedIdentityToSubscription": {
                      "value": false
                    },
                    "userAssignedIdentityResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-ama-prod-uksouth-001"
                    },
                    "effect": {
                      "value": "DeployIfNotExists"
                    }
                  },
                  "description": "Enable ChangeTracking and Inventory for virtual machines. Takes Data Collection Rule ID as parameter and asks for an option to input applicable locations and user-assigned identity for Azure Monitor Agent.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:01.914901Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Change Tracking must be enabled for Virtual Machines."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-ChangeTrack",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VM-ChangeTrack",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.3578292Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.3578292Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring": {
                "identity": {
                  "principalId": "75d7e527-24fe-4ed8-83a8-153ef38f3985",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable Azure Monitor for VMs",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/924bfe3a-762f-40e7-86dd-5c8b95eb09e6",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-vminsights-prod-uksouth-001"
                    },
                    "bringYourOwnUserAssignedManagedIdentity": {
                      "value": true
                    },
                    "restrictBringYourOwnUserAssignedIdentityToSubscription": {
                      "value": false
                    },
                    "userAssignedIdentityResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-ama-prod-uksouth-001"
                    },
                    "enableProcessesAndDependencies": {
                      "value": true
                    },
                    "scopeToSupportedImages": {
                      "value": false
                    }
                  },
                  "description": "Enable Azure Monitor for the virtual machines (VMs) in the specified scope (management group, subscription or resource group). Takes Log Analytics workspace as parameter.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:02.894003Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Azure Monitor must be enabled for Virtual Machines."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VM-Monitoring",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:01.4400393Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:01.4400393Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-vmArc-ChangeTrack": {
                "identity": {
                  "principalId": "bff5d517-6a39-4c0c-8568-0fa3df70ce2c",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable ChangeTracking and Inventory for Arc-enabled virtual machines",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/53448c70-089b-4f52-8f38-89196d7f2de1",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-changetracking-prod-uksouth-001"
                    },
                    "effect": {
                      "value": "DeployIfNotExists"
                    }
                  },
                  "description": "Enable ChangeTracking and Inventory for Arc-enabled virtual machines. Takes Data Collection Rule ID as parameter and asks for an option to input applicable locations.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:00.8317851Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Change Tracking must be enabled for Arc-enabled Virtual Machines."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-vmArc-ChangeTrack",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-vmArc-ChangeTrack",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.0099763Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.0099763Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-vmHybr-Monitoring": {
                "identity": {
                  "principalId": "d1540b7f-6d11-4083-a7b3-fba89bcd5c07",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable Azure Monitor for Hybrid Virtual Machines",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/2b00397d-c309-49c4-aa5a-f0b2c5bc6321",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-vminsights-prod-uksouth-001"
                    },
                    "enableProcessesAndDependencies": {
                      "value": true
                    }
                  },
                  "description": "Enable Azure Monitor for Hybrid Virtual Machines in the specified scope (Management group, Subscription or resource group).",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:01.0223321Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Azure Monitor must be enabled for Hybrid Virtual Machines."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-vmHybr-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-vmHybr-Monitoring",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.1667029Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.1667029Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-ChangeTrack": {
                "identity": {
                  "principalId": "6494752e-1851-45ab-afee-72733fe8c22c",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable ChangeTracking and Inventory for virtual machine scale sets",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/c4a70814-96be-461c-889f-2b27429120dc",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-changetracking-prod-uksouth-001"
                    },
                    "bringYourOwnUserAssignedManagedIdentity": {
                      "value": true
                    },
                    "restrictBringYourOwnUserAssignedIdentityToSubscription": {
                      "value": false
                    },
                    "userAssignedIdentityResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-ama-prod-uksouth-001"
                    },
                    "effect": {
                      "value": "DeployIfNotExists"
                    }
                  },
                  "description": "Enable ChangeTracking and Inventory for virtual machine scale sets. Takes Data Collection Rule ID as parameter and asks for an option to input applicable locations and user-assigned identity for Azure Monitor Agent.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:01.5547367Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Change Tracking must be enabled for Virtual Machines Scales Sets."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-ChangeTrack",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VMSS-ChangeTrack",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.5027237Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.5027237Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring": {
                "identity": {
                  "principalId": "96b885d6-e9bd-4461-a065-6b96fe499356",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable Azure Monitor for Virtual Machine Scale Sets",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/f5bf694c-cca7-4033-b883-3a23327d5485",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-vminsights-prod-uksouth-001"
                    },
                    "bringYourOwnUserAssignedManagedIdentity": {
                      "value": true
                    },
                    "restrictBringYourOwnUserAssignedIdentityToSubscription": {
                      "value": false
                    },
                    "userAssignedIdentityResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-ama-prod-uksouth-001"
                    },
                    "enableProcessesAndDependencies": {
                      "value": true
                    },
                    "scopeToSupportedImages": {
                      "value": false
                    }
                  },
                  "description": "Enable Azure Monitor for the Virtual Machine Scale Sets in the specified scope (Management group, Subscription or resource group). Takes Log Analytics workspace as parameter. Note: if your scale set upgradePolicy is set to Manual, you need to apply the extension to the all VMs in the set by calling upgrade on them. In CLI this would be az vmss update-instances.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:02.7780824Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Azure Monitor must be enabled for Virtual Machines Scales Sets."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VMSS-Monitoring",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.5461395Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.5461395Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enable-AUM-CheckUpdates": {
                "identity": {
                  "principalId": "b2122350-e04b-4e30-8f31-f9bfd832b7c9",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Configure periodic checking for missing system updates on azure virtual machines and Arc-enabled virtual machines.",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-AUM-CheckUpdates",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "assessmentMode": {
                      "value": "AutomaticByPlatform"
                    },
                    "locations": {
                      "value": []
                    },
                    "tagValues": {
                      "value": {}
                    },
                    "tagOperator": {
                      "value": "Any"
                    }
                  },
                  "description": "Configure auto-assessment (every 24 hours) for OS updates. You can control the scope of assignment according to machine subscription, resource group, location or tag. Learn more about this for Windows: https://aka.ms/computevm-windowspatchassessmentmode, for Linux: https://aka.ms/computevm-linuxpatchassessmentmode.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:47.3032294Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Periodic checking of missing updates must be enabled."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enable-AUM-CheckUpdates",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enable-AUM-CheckUpdates",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:45.1505258Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:45.1505258Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-AKS-HTTPS": {
                "properties": {
                  "displayName": "Kubernetes clusters should be accessible only over HTTPS",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {
                    "effect": {
                      "value": "deny"
                    }
                  },
                  "description": "Use of HTTPS ensures authentication and protects data in transit from network layer eavesdropping attacks. This capability is currently generally available for Kubernetes Service (AKS), and in preview for AKS Engine and Azure Arc enabled Kubernetes. For more info, visit https://aka.ms/kubepolicydoc",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.6764897Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-AKS-HTTPS",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-AKS-HTTPS",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.619652Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.619652Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-ASR": {
                "properties": {
                  "displayName": "Enforce enhanced recovery and backup policies",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Backup",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables recommended ALZ guardrails for Azure Recovery Services.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.2421876Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Azure Recovery Services (Backup and Site Recovery)."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-ASR",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-ASR",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.1885209Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.1885209Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-Encrypt-CMK1": {
                "identity": {
                  "principalId": "19649251-645c-42be-9ef2-b6ef26c6421a",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Customer Managed Keys",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Customer Managed Keys.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.6086014Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Customer Managed Keys."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-Encrypt-CMK1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-Encrypt-CMK1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.9360362Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.9360362Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-APIM1": {
                "identity": {
                  "principalId": "7199c68e-e437-4445-be77-e059a1f9543b",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for API Management",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-APIM",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for API Management.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.2964401Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for API Management."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-APIM1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-APIM1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.1925427Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.1925427Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-AppServices1": {
                "identity": {
                  "principalId": "c0f11ad8-f25f-4228-8511-96bd05aac1df",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for App Services",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-AppServices",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for App Services.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:48.0645753Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for App Services."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-AppServices1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-AppServices1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.623464Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.623464Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Automation1": {
                "identity": {
                  "principalId": "15468394-e194-419d-86c3-aa7f79587022",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Automation Accounts",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Automation",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Automation Accounts.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.1971855Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Automation Accounts."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Automation1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-Automation1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.2668449Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.2668449Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-CogServ1": {
                "identity": {
                  "principalId": "44cc4bb0-0952-48f4-8f1c-cff1dad2e776",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Cognitive Services",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-CognitiveServices",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Cognitive Services.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.0211461Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Cognitive Services."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-CogServ1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-CogServ1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:46.2014872Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:46.2014872Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Compute1": {
                "identity": {
                  "principalId": "ad5fea4f-b9a9-45ae-8087-4b37b4892597",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Compute",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Compute",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Compute.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.1624077Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Compute."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Compute1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-Compute1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.1925427Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.1925427Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContApps1": {
                "identity": {
                  "principalId": "e2de3025-28d4-4797-9f70-3cbc525af807",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Container Apps",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ContainerApps",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Container Apps.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.2177038Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Container Apps."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContApps1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-ContApps1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.4796508Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.4796508Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContInst1": {
                "identity": {
                  "principalId": "ee085849-68fc-4e3e-bc81-d025bff69a25",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Container Instance",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ContainerInstance",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Container Instance.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.8891591Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Container Instance."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContInst1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-ContInst1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.0105445Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.0105445Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContReg1": {
                "identity": {
                  "principalId": "77d38384-5bb2-4a53-8fa4-b36ca3f7dfe1",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Container Registry",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ContainerRegistry",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Container Registry.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.5824964Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Container Registry."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContReg1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-ContReg1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.3501203Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.3501203Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-CosmosDb1": {
                "identity": {
                  "principalId": "a8a20da3-770e-425e-926d-4a88bcc24300",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Cosmos DB",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-CosmosDb",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Cosmos DB.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.522561Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Cosmos DB."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-CosmosDb1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-CosmosDb1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.1272434Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.1272434Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-DataExpl1": {
                "identity": {
                  "principalId": "882dad57-687f-4a86-8346-e33f1e22ab38",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Data Explorer",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-DataExplorer",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Data Explorer.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.3929703Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Data Explorer."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-DataExpl1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-DataExpl1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.924791Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.924791Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-DataFactory1": {
                "identity": {
                  "principalId": "a9339fde-b802-4bc1-9219-65583cac539b",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Data Factory",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-DataFactory",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Data Factory.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.2168835Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Data Factory."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-DataFactory1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-DataFactory1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.2668449Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.2668449Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-EventGrid1": {
                "identity": {
                  "principalId": "042e1123-09da-4b03-ae32-5cd2d4a4bbea",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Event Grid",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-EventGrid",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Event Grid.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.4472431Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Event Grid."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-EventGrid1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-EventGrid1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.571617Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.571617Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-EventHub1": {
                "identity": {
                  "principalId": "d16d34e9-4c8b-437b-af7f-424c0a14b2a8",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Event Hub",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-EventHub",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Event Hub.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:45.9942912Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Event Hub."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-EventHub1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-EventHub1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.1272434Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.1272434Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-KeyVault": {
                "properties": {
                  "displayName": "Enforce recommended guardrails for Azure Key Vault",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-KeyVault",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables recommended ALZ guardrails for Azure Key Vault.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.5031529Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-KeyVault",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-KeyVault",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.3120058Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.3120058Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-KeyVaultSup1": {
                "identity": {
                  "principalId": "853383cb-3d76-4536-a27e-358d6bcc3a8b",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Key Vault Supplementary",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-KeyVault-Sup",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Key Vault Supplementary.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.4388894Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Key Vault Supplementary."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-KeyVaultSup1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-KeyVaultSup1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.5356258Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.5356258Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Kubernetes1": {
                "identity": {
                  "principalId": "b7e65863-6af3-4cf6-b894-ddb7eebb7ac1",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Kubernetes",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Kubernetes",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Kubernetes.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.3326601Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Kubernetes."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Kubernetes1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-Kubernetes1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.2824978Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.2824978Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-MachLearn1": {
                "identity": {
                  "principalId": "9a6ab6c8-e2e1-47fa-b773-2bda38c3b83d",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Machine Learning",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-MachineLearning",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Machine Learning.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:48.0835793Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Machine Learning."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-MachLearn1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-MachLearn1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.623464Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.623464Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-OpenAI1": {
                "identity": {
                  "principalId": "b9bb295e-dbf6-4a76-b022-43e6c7bad639",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for OpenAI",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-OpenAI",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for OpenAI.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.7361154Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for OpenAI."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-OpenAI1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-OpenAI1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.4052045Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.4052045Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-PostgreSQL1": {
                "identity": {
                  "principalId": "4ec55ca6-e7fd-4d6d-8548-c4840c0a015b",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for PostgreSQL",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-PostgreSQL",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for PostgreSQL.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.8400027Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for PostgreSQL."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-PostgreSQL1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-PostgreSQL1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:46.1637796Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:46.1637796Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ServiceBus1": {
                "identity": {
                  "principalId": "f21e021c-59c5-4182-b3db-fa97d28dcf24",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Service Bus",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ServiceBus",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Service Bus.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.8393987Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Service Bus."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ServiceBus1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-ServiceBus1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.1851023Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.1851023Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-SQL1": {
                "identity": {
                  "principalId": "f5dcfa16-a9fc-4dfc-ad9b-dc735a7542c3",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for SQL",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-SQL",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for SQL.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.2207825Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for SQL."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-SQL1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-SQL1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.2824978Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.2824978Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Storage1": {
                "identity": {
                  "principalId": "7b8d3fe8-362c-414d-a117-a6f3ce0f7500",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Storage",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Storage",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Storage.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.293638Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Storage."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Storage1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-Storage1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.1711802Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.1711802Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Synapse1": {
                "identity": {
                  "principalId": "27d5d4d7-3067-4ff4-a21b-ee6d2500664f",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Synapse",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Synapse",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Synapse.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.7499586Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Synapse."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Synapse1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-Synapse1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.32705Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.32705Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-VirtualDesk1": {
                "identity": {
                  "principalId": "7246851f-4712-4634-990b-cf556d77a41a",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Virtual Desktop",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-VirtualDesktop",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "description": "This initiative assignment enables additional ALZ guardrails for Virtual Desktop.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.4471622Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Virtual Desktop."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-VirtualDesk1",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-VirtualDesk1",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.5200022Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.5200022Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL-H224": {
                "identity": {
                  "principalId": "4f873edb-f851-4545-a523-1d3ac0931089",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deny or Deploy and append TLS requirements and SSL enforcement on resources without Encryption in transit",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit_20240509",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "parameters": {},
                  "description": "Choose either Deploy if not exist and append in combination with audit or Select Deny in the Policy effect. Deny polices shift left. Deploy if not exist and append enforce but can be changed, and because missing existence condition require then the combination of Audit.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:45.9665375Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "TLS and SSL must be enabled for on resources without encryption in transit."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL-H224",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-TLS-SSL-H224",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:43.9116074Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:43.9116074Z"
                }
              }
            },
            "RoleAssignments": {
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/007b9ddf-ab91-59a2-a891-dd227112ac51": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/007b9ddf-ab91-59a2-a891-dd227112ac51",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-ContReg1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "77d38384-5bb2-4a53-8fa4-b36ca3f7dfe1",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/02c64f53-79df-59f1-b753-029f4bba99bd": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/02c64f53-79df-59f1-b753-029f4bba99bd",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-ServiceBus1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "f21e021c-59c5-4182-b3db-fa97d28dcf24",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/06ba1d74-635f-5191-bc58-9374e4dd4d37": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/06ba1d74-635f-5191-bc58-9374e4dd4d37",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VM-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "95610fab-0c83-45d3-89f9-94d0ed18d42d",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/08a964fa-4856-5fc3-984c-494ca6c82e61": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/08a964fa-4856-5fc3-984c-494ca6c82e61",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-CogServ1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "44cc4bb0-0952-48f4-8f1c-cff1dad2e776",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/0912264a-9ddf-577d-a639-3dea111b81a9": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/0912264a-9ddf-577d-a639-3dea111b81a9",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VM-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "95610fab-0c83-45d3-89f9-94d0ed18d42d",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/0a4a6a89-d5e8-5004-a9dd-b5aff64c70b7": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/0a4a6a89-d5e8-5004-a9dd-b5aff64c70b7",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-Storage1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "7b8d3fe8-362c-414d-a117-a6f3ce0f7500",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/0bc18d1f-7341-5323-90a7-462f5d5598a9": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/0bc18d1f-7341-5323-90a7-462f5d5598a9",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-Automation1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "15468394-e194-419d-86c3-aa7f79587022",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/1c1b17c7-79ef-5a35-97b4-8cee1fa689d2": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/1c1b17c7-79ef-5a35-97b4-8cee1fa689d2",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VM-Backup",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "b516c41f-17f9-46ee-9171-6b34175425cd",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/1dab4a78-7b25-5050-9a6f-53d875fe703e": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/1dab4a78-7b25-5050-9a6f-53d875fe703e",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enable-AUM-CheckUpdates",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "b2122350-e04b-4e30-8f31-f9bfd832b7c9",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/1e89b248-b61b-5e57-af19-d0eb1e07f5f2": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/1e89b248-b61b-5e57-af19-d0eb1e07f5f2",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "473eb78e-6726-4d88-9775-feb244d55055",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/24f69e5c-e17e-5d87-9d2c-194b4a071290": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/24f69e5c-e17e-5d87-9d2c-194b4a071290",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VM-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "75d7e527-24fe-4ed8-83a8-153ef38f3985",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/2aff826e-cb83-57f6-bf76-05ba56312fc4": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/2aff826e-cb83-57f6-bf76-05ba56312fc4",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-DataFactory1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "a9339fde-b802-4bc1-9219-65583cac539b",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/2d43f8e5-bc81-5b35-b0ec-429aa7e5be36": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/2d43f8e5-bc81-5b35-b0ec-429aa7e5be36",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-DataExpl1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "882dad57-687f-4a86-8346-e33f1e22ab38",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/2e73637a-9669-58b7-8d15-5fa8dd669bb0": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/2e73637a-9669-58b7-8d15-5fa8dd669bb0",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-MachLearn1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "9a6ab6c8-e2e1-47fa-b773-2bda38c3b83d",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/2f92986c-0f8f-5561-b4b5-e0895e86f2d1": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/2f92986c-0f8f-5561-b4b5-e0895e86f2d1",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VM-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "95610fab-0c83-45d3-89f9-94d0ed18d42d",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/30d3571b-f3af-52dc-b838-d6a8fa7f29ff": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/30d3571b-f3af-52dc-b838-d6a8fa7f29ff",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-AzSqlDb-Auditing",
                  "SignInName": null,
                  "RoleDefinitionName": "SQL Security Manager",
                  "RoleDefinitionId": "056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                  "ObjectId": "49221f93-fbcc-4900-9360-3af2db51bde5",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/3a0ab9cc-0f86-5f07-8675-4a34fcd98a5e": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/3a0ab9cc-0f86-5f07-8675-4a34fcd98a5e",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VM-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "75d7e527-24fe-4ed8-83a8-153ef38f3985",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/4212681b-46c1-5e54-9060-d1262d4f25c3": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/4212681b-46c1-5e54-9060-d1262d4f25c3",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-KeyVaultSup1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "853383cb-3d76-4536-a27e-358d6bcc3a8b",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/489ddf15-8240-5e3c-846c-e7e5e8bd0927": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/489ddf15-8240-5e3c-846c-e7e5e8bd0927",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "473eb78e-6726-4d88-9775-feb244d55055",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/4bc3b17f-2eef-5a1a-8392-5276d44a6f80": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/4bc3b17f-2eef-5a1a-8392-5276d44a6f80",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-ContInst1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "ee085849-68fc-4e3e-bc81-d025bff69a25",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/4d1c3e81-50e3-58c0-aa5b-877773f8413f": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/4d1c3e81-50e3-58c0-aa5b-877773f8413f",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VM-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "75d7e527-24fe-4ed8-83a8-153ef38f3985",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/53a771ad-6d69-5749-ad7d-efb4ee677afa": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/53a771ad-6d69-5749-ad7d-efb4ee677afa",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "473eb78e-6726-4d88-9775-feb244d55055",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/58c9bbd8-c02f-554a-8870-ee50139d76d9": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/58c9bbd8-c02f-554a-8870-ee50139d76d9",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-vmHybr-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "d1540b7f-6d11-4083-a7b3-fba89bcd5c07",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/6113b40d-6703-5775-8442-1262f4827bb4": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/6113b40d-6703-5775-8442-1262f4827bb4",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VMSS-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "6494752e-1851-45ab-afee-72733fe8c22c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/61d89eb8-ef12-5d3a-a236-6e4996f837c2": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/61d89eb8-ef12-5d3a-a236-6e4996f837c2",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VMSS-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "96b885d6-e9bd-4461-a065-6b96fe499356",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/6229d18b-9dbd-5ba7-b81f-0cd565228f45": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/6229d18b-9dbd-5ba7-b81f-0cd565228f45",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-EventHub1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "d16d34e9-4c8b-437b-af7f-424c0a14b2a8",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/63ab8539-6647-5c7a-aa9a-5b6a8a425c33": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/63ab8539-6647-5c7a-aa9a-5b6a8a425c33",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-AppServices1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "c0f11ad8-f25f-4228-8511-96bd05aac1df",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/6e38b93f-5f4d-5e84-8aaa-44553307b5a6": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/6e38b93f-5f4d-5e84-8aaa-44553307b5a6",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VMSS-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "6494752e-1851-45ab-afee-72733fe8c22c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/744884df-247c-57f0-87b1-a352e9eef0cc": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/744884df-247c-57f0-87b1-a352e9eef0cc",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-APIM1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "7199c68e-e437-4445-be77-e059a1f9543b",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/79a8eae1-1aae-5e2e-9347-c62162f5525d": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/79a8eae1-1aae-5e2e-9347-c62162f5525d",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-vmHybr-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "d1540b7f-6d11-4083-a7b3-fba89bcd5c07",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/7ced1abc-19aa-5404-83d5-2feb11817218": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/7ced1abc-19aa-5404-83d5-2feb11817218",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VMSS-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "6494752e-1851-45ab-afee-72733fe8c22c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/7db8d291-95cd-51b0-95e8-7c8232edb861": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/7db8d291-95cd-51b0-95e8-7c8232edb861",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-SQL-TDE",
                  "SignInName": null,
                  "RoleDefinitionName": "SQL DB Contributor",
                  "RoleDefinitionId": "9b7fa17d-e63e-47b0-bb0a-15c516ac86ec",
                  "ObjectId": "c1ee23ef-1318-45fc-b098-6dfd4125e5ed",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/8679e439-9af4-5beb-8dcf-2c4d2e4955ac": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/8679e439-9af4-5beb-8dcf-2c4d2e4955ac",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-ContApps1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "e2de3025-28d4-4797-9f70-3cbc525af807",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/8766c8b0-66ac-5937-a1b8-35c2b563617b": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/8766c8b0-66ac-5937-a1b8-35c2b563617b",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enable-AUM-CheckUpdates",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "b2122350-e04b-4e30-8f31-f9bfd832b7c9",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/8ae347c8-0bb5-5afa-a760-f0dabab4282a": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/8ae347c8-0bb5-5afa-a760-f0dabab4282a",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-Synapse1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "27d5d4d7-3067-4ff4-a21b-ee6d2500664f",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/9024f795-4b48-59d7-a6fa-dd13bb8ddbb5": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/9024f795-4b48-59d7-a6fa-dd13bb8ddbb5",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VMSS-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "96b885d6-e9bd-4461-a065-6b96fe499356",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/942b4215-1104-5492-b042-3f0ed5369c85": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/942b4215-1104-5492-b042-3f0ed5369c85",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-PostgreSQL1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "4ec55ca6-e7fd-4d6d-8548-c4840c0a015b",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/9477c294-069f-5061-8c8c-a4713cf37b66": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/9477c294-069f-5061-8c8c-a4713cf37b66",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VM-Backup",
                  "SignInName": null,
                  "RoleDefinitionName": "Backup Contributor",
                  "RoleDefinitionId": "5e467623-bb1f-42f4-a55d-6e525e11384b",
                  "ObjectId": "b516c41f-17f9-46ee-9171-6b34175425cd",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/9e74e0ea-4fbf-5f5f-9f89-16ea3eb4ea8b": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/9e74e0ea-4fbf-5f5f-9f89-16ea3eb4ea8b",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-SQL1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "f5dcfa16-a9fc-4dfc-ad9b-dc735a7542c3",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/a111d51b-a11f-5fb1-9800-b963c9380983": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/a111d51b-a11f-5fb1-9800-b963c9380983",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-vmArc-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "bff5d517-6a39-4c0c-8568-0fa3df70ce2c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/a62b5269-a255-5ec2-85d8-ba052d663e05": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/a62b5269-a255-5ec2-85d8-ba052d663e05",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-Kubernetes1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "b7e65863-6af3-4cf6-b894-ddb7eebb7ac1",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/a7c96bb4-4aa3-5bfe-a1c9-204af6ff745a": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/a7c96bb4-4aa3-5bfe-a1c9-204af6ff745a",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-CosmosDb1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "a8a20da3-770e-425e-926d-4a88bcc24300",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/b2b0650f-27c8-56aa-958a-3798cd769fdf": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/b2b0650f-27c8-56aa-958a-3798cd769fdf",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "473eb78e-6726-4d88-9775-feb244d55055",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/ba00866e-d5b0-51fd-9498-77bbbe6e0af3": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/ba00866e-d5b0-51fd-9498-77bbbe6e0af3",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-SQL-Threat",
                  "SignInName": null,
                  "RoleDefinitionName": "SQL Security Manager",
                  "RoleDefinitionId": "056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                  "ObjectId": "dc894fc8-b3b5-473b-9629-a23283422141",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/bf2a11aa-58ff-51b9-97d0-1e59a4bd073e": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/bf2a11aa-58ff-51b9-97d0-1e59a4bd073e",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-Encrypt-CMK1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "19649251-645c-42be-9ef2-b6ef26c6421a",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/c244957a-0bbe-54ff-92b4-cb065583ae6a": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/c244957a-0bbe-54ff-92b4-cb065583ae6a",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-OpenAI1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "b9bb295e-dbf6-4a76-b022-43e6c7bad639",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/c42599dd-6ce6-5f47-adb4-6d2ac062883b": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/c42599dd-6ce6-5f47-adb4-6d2ac062883b",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-VirtualDesk1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "7246851f-4712-4634-990b-cf556d77a41a",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/c67c0315-db46-5cad-8b83-fe25c9eb11d7": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/c67c0315-db46-5cad-8b83-fe25c9eb11d7",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-TLS-SSL-H224",
                  "SignInName": null,
                  "RoleDefinitionName": "Owner",
                  "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                  "ObjectId": "4f873edb-f851-4545-a523-1d3ac0931089",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/c8a04952-f944-470b-a592-e3e023d3d9b0": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/c8a04952-f944-470b-a592-e3e023d3d9b0",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "System Administrator",
                  "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "RoleDefinitionName": "Owner",
                  "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                  "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                  "ObjectType": "User",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/ca4e957f-4a26-51a5-bb0e-bc7c0b361f85": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/ca4e957f-4a26-51a5-bb0e-bc7c0b361f85",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-AzSqlDb-Auditing",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "49221f93-fbcc-4900-9360-3af2db51bde5",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/d076191f-a0f7-5d51-9319-6ab194f2e641": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/d076191f-a0f7-5d51-9319-6ab194f2e641",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VM-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "95610fab-0c83-45d3-89f9-94d0ed18d42d",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/d5bfef0b-b436-565c-8606-b52b4b38e88e": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/d5bfef0b-b436-565c-8606-b52b4b38e88e",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-EventGrid1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "042e1123-09da-4b03-ae32-5cd2d4a4bbea",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/d8dd4c5f-9283-5b30-b61e-dfbba1794934": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/d8dd4c5f-9283-5b30-b61e-dfbba1794934",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-AKS-Policy",
                  "SignInName": null,
                  "RoleDefinitionName": "Azure Kubernetes Service Policy Add-on Deployment",
                  "RoleDefinitionId": "18ed5180-3e48-46fd-8541-4ea054d57064",
                  "ObjectId": "bbc34170-d9a8-4949-b1d8-c17411078f7b",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/dab6308c-1847-58ba-8a7a-658d2157d781": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/dab6308c-1847-58ba-8a7a-658d2157d781",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VM-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "75d7e527-24fe-4ed8-83a8-153ef38f3985",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/dc645130-b6ab-5ca6-a369-3715a81bd4eb": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/dc645130-b6ab-5ca6-a369-3715a81bd4eb",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-AKS-Policy",
                  "SignInName": null,
                  "RoleDefinitionName": "Azure Kubernetes Service Contributor Role",
                  "RoleDefinitionId": "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
                  "ObjectId": "bbc34170-d9a8-4949-b1d8-c17411078f7b",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/e2a49d38-00fd-5264-932d-91e1641b71d1": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/e2a49d38-00fd-5264-932d-91e1641b71d1",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "473eb78e-6726-4d88-9775-feb244d55055",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/e45092e9-8e07-5597-8def-63dba8cb7abc": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/e45092e9-8e07-5597-8def-63dba8cb7abc",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enable-AUM-CheckUpdates",
                  "SignInName": null,
                  "RoleDefinitionName": "Azure Connected Machine Resource Administrator",
                  "RoleDefinitionId": "cd570a14-e51a-42ad-bac8-bafd67325302",
                  "ObjectId": "b2122350-e04b-4e30-8f31-f9bfd832b7c9",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/e470fed2-04f3-5353-b8c9-ce4401d3558b": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/e470fed2-04f3-5353-b8c9-ce4401d3558b",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-vmArc-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "bff5d517-6a39-4c0c-8568-0fa3df70ce2c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/e82a98c0-3be3-5608-b248-2f780b0efc45": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/e82a98c0-3be3-5608-b248-2f780b0efc45",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Enforce-GR-Compute1",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "ad5fea4f-b9a9-45ae-8087-4b37b4892597",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/e9f8b2cd-32f2-5944-9cce-a7dfca94f1b1": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/e9f8b2cd-32f2-5944-9cce-a7dfca94f1b1",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VMSS-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "96b885d6-e9bd-4461-a065-6b96fe499356",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/f5698c0f-a152-5ac3-8d1b-a6f68d7b9ee4": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/f5698c0f-a152-5ac3-8d1b-a6f68d7b9ee4",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VMSS-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "96b885d6-e9bd-4461-a065-6b96fe499356",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/fad30d31-d9e0-5864-b871-4747e9b79805": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-landingzones/providers/microsoft.authorization/roleassignments/fad30d31-d9e0-5864-b871-4747e9b79805",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-landingzones",
                  "DisplayName": "Deploy-VMSS-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "6494752e-1851-45ab-afee-72733fe8c22c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ]
            },
            "DiagnosticSettings": {
              "toLa": {
                "Name": "toLa",
                "Type": "LA",
                "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                "Settings": [
                  {
                    "Category": "Administrative",
                    "Enabled": true
                  },
                  {
                    "Category": "Policy",
                    "Enabled": true
                  }
                ]
              }
            },
            "Subscriptions": {},
            "ManagementGroups": {
              "ALZ-corp": {
                "MgId": "ALZ-corp",
                "MgName": "ALZ-corp",
                "mgParentId": "ALZ-landingzones",
                "mgParentName": "ALZ-landingzones",
                "level": "3",
                "PolicyDefinitionsCustom": {},
                "PolicySetDefinitionsCustom": {},
                "BlueprintDefinitions": {},
                "PolicyAssignments": {
                  "/providers/Microsoft.Management/managementGroups/ALZ-corp/providers/Microsoft.Authorization/policyAssignments/Audit-PeDnsZones": {
                    "properties": {
                      "displayName": "Audit Private Link Private DNS Zone resources",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Audit-PrivateLinkDnsZones",
                      "scope": "/providers/Microsoft.Management/managementGroups/ALZ-corp",
                      "parameters": {
                        "privateLinkDnsZones": {
                          "value": []
                        },
                        "effect": {
                          "value": "Audit"
                        }
                      },
                      "description": "Audits the deployment of Private Link Private DNS Zone resources in the Corp landing zone.",
                      "metadata": {
                        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                        "createdOn": "2024-06-10T09:13:44.3291739Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default",
                      "nonComplianceMessages": [
                        {
                          "message": "Private Link Private DNS Zone resources must be deployed in the Corp landing zone."
                        }
                      ]
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ALZ-corp/providers/Microsoft.Authorization/policyAssignments/Audit-PeDnsZones",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Audit-PeDnsZones",
                    "systemData": {
                      "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "createdByType": "User",
                      "createdAt": "2024-06-10T09:13:44.2713194Z",
                      "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "lastModifiedByType": "User",
                      "lastModifiedAt": "2024-06-10T09:13:44.2713194Z"
                    }
                  },
                  "/providers/Microsoft.Management/managementGroups/ALZ-corp/providers/Microsoft.Authorization/policyAssignments/Deny-HybridNetworking": {
                    "properties": {
                      "displayName": "Deny the deployment of vWAN/ER/VPN gateway resources",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
                      "scope": "/providers/Microsoft.Management/managementGroups/ALZ-corp",
                      "parameters": {
                        "listOfResourceTypesNotAllowed": {
                          "value": [
                            "microsoft.network/expressroutecircuits",
                            "microsoft.network/expressroutegateways",
                            "microsoft.network/expressrouteports",
                            "microsoft.network/virtualwans",
                            "microsoft.network/virtualhubs",
                            "microsoft.network/vpngateways",
                            "microsoft.network/p2svpngateways",
                            "microsoft.network/vpnsites",
                            "microsoft.network/virtualnetworkgateways"
                          ]
                        },
                        "effect": {
                          "value": "Deny"
                        }
                      },
                      "description": "Denies deployment of vWAN/ER/VPN gateway resources in the Corp landing zone.",
                      "metadata": {
                        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                        "createdOn": "2024-06-10T09:13:44.3146941Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default",
                      "nonComplianceMessages": [
                        {
                          "message": "vWAN/ER/VPN gateway resources must not be deployed in the Corp landing zone."
                        }
                      ]
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ALZ-corp/providers/Microsoft.Authorization/policyAssignments/Deny-HybridNetworking",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-HybridNetworking",
                    "systemData": {
                      "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "createdByType": "User",
                      "createdAt": "2024-06-10T09:13:44.251278Z",
                      "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "lastModifiedByType": "User",
                      "lastModifiedAt": "2024-06-10T09:13:44.251278Z"
                    }
                  },
                  "/providers/Microsoft.Management/managementGroups/ALZ-corp/providers/Microsoft.Authorization/policyAssignments/Deny-Public-Endpoints": {
                    "properties": {
                      "displayName": "Public network access should be disabled for PaaS services",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints",
                      "scope": "/providers/Microsoft.Management/managementGroups/ALZ-corp",
                      "parameters": {},
                      "description": "This policy initiative is a group of policies that prevents creation of Azure PaaS services with exposed public endpoints",
                      "metadata": {
                        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                        "createdOn": "2024-06-10T09:13:44.200069Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default",
                      "nonComplianceMessages": [
                        {
                          "message": "Public network access must be disabled for PaaS services."
                        }
                      ]
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ALZ-corp/providers/Microsoft.Authorization/policyAssignments/Deny-Public-Endpoints",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-Public-Endpoints",
                    "location": "uksouth",
                    "systemData": {
                      "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "createdByType": "User",
                      "createdAt": "2024-06-10T09:13:44.0287512Z",
                      "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "lastModifiedByType": "User",
                      "lastModifiedAt": "2024-06-10T09:13:44.0287512Z"
                    }
                  },
                  "/providers/Microsoft.Management/managementGroups/ALZ-corp/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP-On-NIC": {
                    "properties": {
                      "displayName": "Deny network interfaces having a public IP associated",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83a86a26-fd1f-447c-b59d-e51f44264114",
                      "scope": "/providers/Microsoft.Management/managementGroups/ALZ-corp",
                      "description": "This policy denies network interfaces from having a public IP associated to it under the assigned scope.",
                      "metadata": {
                        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                        "createdOn": "2024-06-10T09:13:44.3266708Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default",
                      "nonComplianceMessages": [
                        {
                          "message": "Network interfaces must not have a public IP associated."
                        }
                      ]
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ALZ-corp/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP-On-NIC",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-Public-IP-On-NIC",
                    "systemData": {
                      "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "createdByType": "User",
                      "createdAt": "2024-06-10T09:13:44.2713194Z",
                      "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "lastModifiedByType": "User",
                      "lastModifiedAt": "2024-06-10T09:13:44.2713194Z"
                    }
                  }
                },
                "RoleAssignments": {
                  "/providers/microsoft.management/managementgroups/alz-corp/providers/microsoft.authorization/roleassignments/6c5e6bdb-0c10-4078-91cb-19565e271b71": [
                    {
                      "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-corp/providers/microsoft.authorization/roleassignments/6c5e6bdb-0c10-4078-91cb-19565e271b71",
                      "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-corp",
                      "DisplayName": "System Administrator",
                      "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "RoleDefinitionName": "Owner",
                      "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                      "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                      "ObjectType": "User",
                      "PIM": "false"
                    }
                  ]
                },
                "DiagnosticSettings": {
                  "toLa": {
                    "Name": "toLa",
                    "Type": "LA",
                    "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                    "Settings": [
                      {
                        "Category": "Administrative",
                        "Enabled": true
                      },
                      {
                        "Category": "Policy",
                        "Enabled": true
                      }
                    ]
                  }
                },
                "Subscriptions": {},
                "ManagementGroups": {}
              },
              "ALZ-online": {
                "MgId": "ALZ-online",
                "MgName": "ALZ-online",
                "mgParentId": "ALZ-landingzones",
                "mgParentName": "ALZ-landingzones",
                "level": "3",
                "PolicyDefinitionsCustom": {},
                "PolicySetDefinitionsCustom": {},
                "BlueprintDefinitions": {},
                "PolicyAssignments": {},
                "RoleAssignments": {
                  "/providers/microsoft.management/managementgroups/alz-online/providers/microsoft.authorization/roleassignments/e903a77b-4031-4840-8f56-8ef7dcbe7791": [
                    {
                      "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-online/providers/microsoft.authorization/roleassignments/e903a77b-4031-4840-8f56-8ef7dcbe7791",
                      "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-online",
                      "DisplayName": "System Administrator",
                      "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "RoleDefinitionName": "Owner",
                      "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                      "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                      "ObjectType": "User",
                      "PIM": "false"
                    }
                  ]
                },
                "DiagnosticSettings": {
                  "toLa": {
                    "Name": "toLa",
                    "Type": "LA",
                    "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                    "Settings": [
                      {
                        "Category": "Administrative",
                        "Enabled": true
                      },
                      {
                        "Category": "Policy",
                        "Enabled": true
                      }
                    ]
                  }
                },
                "Subscriptions": {},
                "ManagementGroups": {}
              }
            }
          },
          "ALZ-platform": {
            "MgId": "ALZ-platform",
            "MgName": "ALZ-platform",
            "mgParentId": "ALZ",
            "mgParentName": "ALZ",
            "level": "2",
            "PolicyDefinitionsCustom": {},
            "PolicySetDefinitionsCustom": {},
            "BlueprintDefinitions": {},
            "PolicyAssignments": {
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/DenyAction-DeleteUAMIAMA": {
                "properties": {
                  "displayName": "Do not allow deletion of the User Assigned Managed Identity used by AMA",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/DenyAction-DeleteResources",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "parameters": {
                    "effect": {
                      "value": "DenyAction"
                    },
                    "resourceName": {
                      "value": "id-ama-prod-uksouth-001"
                    },
                    "resourceType": {
                      "value": "Microsoft.ManagedIdentity/userAssignedIdentities"
                    }
                  },
                  "description": "This policy provides a safeguard against accidental removal of the User Assigned Managed Identity used by AMA by blocking delete calls using deny action effect.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.4453137Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/DenyAction-DeleteUAMIAMA",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "DenyAction-DeleteUAMIAMA",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.389768Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.389768Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-DefSQL-AMA": {
                "identity": {
                  "principalId": "14700175-8113-4146-886a-18b9a42caa22",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "parameters": {
                    "workspaceRegion": {
                      "value": "uksouth"
                    },
                    "userWorkspaceResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law"
                    },
                    "bringYourOwnDcr": {
                      "value": true
                    },
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-defendersql-prod-uksouth-001"
                    },
                    "enableCollectionOfSqlQueriesForSecurityResearch": {
                      "value": false
                    },
                    "bringYourOwnUserAssignedManagedIdentity": {
                      "value": true
                    },
                    "userAssignedIdentityResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-ama-prod-uksouth-001"
                    }
                  },
                  "description": "Microsoft Defender for SQL collects events from the agents and uses them to provide security alerts and tailored hardening tasks (recommendations).",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:03.1791471Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Microsoft Defender for SQL must be deployed."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-DefSQL-AMA",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-MDFC-DefSQL-AMA",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:01.6751221Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:01.6751221Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-ChangeTrack": {
                "identity": {
                  "principalId": "33704ebf-56c4-4b65-9b6a-b4b4dacccc4a",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable ChangeTracking and Inventory for virtual machines",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/92a36f05-ebc9-4bba-9128-b47ad2ea3354",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-changetracking-prod-uksouth-001"
                    },
                    "bringYourOwnUserAssignedManagedIdentity": {
                      "value": true
                    },
                    "restrictBringYourOwnUserAssignedIdentityToSubscription": {
                      "value": false
                    },
                    "userAssignedIdentityResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-ama-prod-uksouth-001"
                    },
                    "effect": {
                      "value": "DeployIfNotExists"
                    }
                  },
                  "description": "Enable ChangeTracking and Inventory for virtual machines. Takes Data Collection Rule ID as parameter and asks for an option to input applicable locations and user-assigned identity for Azure Monitor Agent.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:02.7500808Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Change Tracking must be enabled for Virtual Machines."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-ChangeTrack",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VM-ChangeTrack",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.5461395Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.5461395Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring": {
                "identity": {
                  "principalId": "f90fb5ec-d513-4b4c-a210-3ad38b20e3c3",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable Azure Monitor for VMs",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/924bfe3a-762f-40e7-86dd-5c8b95eb09e6",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-vminsights-prod-uksouth-001"
                    },
                    "bringYourOwnUserAssignedManagedIdentity": {
                      "value": true
                    },
                    "restrictBringYourOwnUserAssignedIdentityToSubscription": {
                      "value": false
                    },
                    "userAssignedIdentityResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-ama-prod-uksouth-001"
                    },
                    "enableProcessesAndDependencies": {
                      "value": true
                    },
                    "scopeToSupportedImages": {
                      "value": false
                    }
                  },
                  "description": "Enable Azure Monitor for the virtual machines (VMs) in the specified scope (management group, subscription or resource group). Takes Log Analytics workspace as parameter.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:01.2138732Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Azure Monitor must be enabled for Virtual Machines."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VM-Monitoring",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.3578292Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.3578292Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-vmArc-ChangeTrack": {
                "identity": {
                  "principalId": "fd5a46de-dd16-4227-9a55-6cc4d3122aae",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable ChangeTracking and Inventory for Arc-enabled virtual machines",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/53448c70-089b-4f52-8f38-89196d7f2de1",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-changetracking-prod-uksouth-001"
                    },
                    "effect": {
                      "value": "DeployIfNotExists"
                    }
                  },
                  "description": "Enable ChangeTracking and Inventory for Arc-enabled virtual machines. Takes Data Collection Rule ID as parameter and asks for an option to input applicable locations.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:01.3388305Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Change Tracking must be enabled for Arc-enabled Virtual Machines."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-vmArc-ChangeTrack",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-vmArc-ChangeTrack",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.0099763Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.0099763Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-vmHybr-Monitoring": {
                "identity": {
                  "principalId": "fb5947d4-6040-4813-9e74-e45ae45b14ee",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable Azure Monitor for Hybrid Virtual Machines",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/2b00397d-c309-49c4-aa5a-f0b2c5bc6321",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-vminsights-prod-uksouth-001"
                    },
                    "enableProcessesAndDependencies": {
                      "value": true
                    }
                  },
                  "description": "Enable Azure Monitor for Hybrid Virtual Machines in the specified scope (Management group, Subscription or resource group).",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:01.4369438Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Azure Monitor must be enabled for Hybrid Virtual Machines."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-vmHybr-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-vmHybr-Monitoring",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.0028458Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.0028458Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-ChangeTrack": {
                "identity": {
                  "principalId": "de1afd48-59be-4295-a571-82667ff9e160",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable ChangeTracking and Inventory for virtual machine scale sets",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/c4a70814-96be-461c-889f-2b27429120dc",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-changetracking-prod-uksouth-001"
                    },
                    "bringYourOwnUserAssignedManagedIdentity": {
                      "value": true
                    },
                    "restrictBringYourOwnUserAssignedIdentityToSubscription": {
                      "value": false
                    },
                    "userAssignedIdentityResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-ama-prod-uksouth-001"
                    },
                    "effect": {
                      "value": "DeployIfNotExists"
                    }
                  },
                  "description": "Enable ChangeTracking and Inventory for virtual machine scale sets. Takes Data Collection Rule ID as parameter and asks for an option to input applicable locations and user-assigned identity for Azure Monitor Agent.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:02.1682056Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Change Tracking must be enabled for Virtual Machines Scales Sets."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-ChangeTrack",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VMSS-ChangeTrack",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.4359564Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.4359564Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring": {
                "identity": {
                  "principalId": "8fecbd63-4e2b-4964-80c7-2369c0ceadab",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enable Azure Monitor for Virtual Machine Scale Sets",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/f5bf694c-cca7-4033-b883-3a23327d5485",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "parameters": {
                    "dcrResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.Insights/dataCollectionRules/dcr-vminsights-prod-uksouth-001"
                    },
                    "bringYourOwnUserAssignedManagedIdentity": {
                      "value": true
                    },
                    "restrictBringYourOwnUserAssignedIdentityToSubscription": {
                      "value": false
                    },
                    "userAssignedIdentityResourceId": {
                      "value": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-ama-prod-uksouth-001"
                    },
                    "enableProcessesAndDependencies": {
                      "value": true
                    },
                    "scopeToSupportedImages": {
                      "value": false
                    }
                  },
                  "description": "Enable Azure Monitor for the Virtual Machine Scale Sets in the specified scope (Management group, Subscription or resource group). Takes Log Analytics workspace as parameter. Note: if your scale set upgradePolicy is set to Manual, you need to apply the extension to the all VMs in the set by calling upgrade on them. In CLI this would be az vmss update-instances.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:15:02.2078461Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Azure Monitor must be enabled for Virtual Machines Scales Sets."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VMSS-Monitoring",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:15:00.4687057Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:15:00.4687057Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enable-AUM-CheckUpdates": {
                "identity": {
                  "principalId": "0f436c9b-f53c-40d2-8825-585fdfbc3b68",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Configure periodic checking for missing system updates on azure virtual machines and Arc-enabled virtual machines.",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Deploy-AUM-CheckUpdates",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "parameters": {
                    "assessmentMode": {
                      "value": "AutomaticByPlatform"
                    },
                    "locations": {
                      "value": []
                    },
                    "tagValues": {
                      "value": {}
                    },
                    "tagOperator": {
                      "value": "Any"
                    }
                  },
                  "description": "Configure auto-assessment (every 24 hours) for OS updates. You can control the scope of assignment according to machine subscription, resource group, location or tag. Learn more about this for Windows: https://aka.ms/computevm-windowspatchassessmentmode, for Linux: https://aka.ms/computevm-linuxpatchassessmentmode.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:46.2591427Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Periodic checking of missing updates must be enabled."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enable-AUM-CheckUpdates",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enable-AUM-CheckUpdates",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.2556237Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.2556237Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-ASR": {
                "properties": {
                  "displayName": "Enforce enhanced recovery and backup policies",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Backup",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables recommended ALZ guardrails for Azure Recovery Services.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.2003276Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Azure Recovery Services (Backup and Site Recovery)."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-ASR",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-ASR",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:43.8760245Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:43.8760245Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-Encrypt-CMK0": {
                "identity": {
                  "principalId": "d6100356-2c70-4775-8bbc-ef872a4a3bf5",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Customer Managed Keys",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Customer Managed Keys.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.7467739Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Customer Managed Keys."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-Encrypt-CMK0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-Encrypt-CMK0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.9404175Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.9404175Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-APIM0": {
                "identity": {
                  "principalId": "78b7bd7f-b52e-44af-be34-5ebfb966f39f",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for API Management",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-APIM",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for API Management.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.603414Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for API Management."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-APIM0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-APIM0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:46.1637796Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:46.1637796Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-AppServices0": {
                "identity": {
                  "principalId": "28da5e9a-5edd-427a-a21b-733369063a0e",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for App Services",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-AppServices",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for App Services.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.1646095Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for App Services."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-AppServices0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-AppServices0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.5091185Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.5091185Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Automation0": {
                "identity": {
                  "principalId": "139d3d37-c90e-41d8-b2d7-27c365dae4cc",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Automation Accounts",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Automation",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Automation Accounts.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.1432614Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Automation Accounts."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Automation0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-Automation0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.8100158Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.8100158Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-CogServ0": {
                "identity": {
                  "principalId": "92b7f43b-483d-4729-805a-9b488b09e833",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Cognitive Services",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-CognitiveServices",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Cognitive Services.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.2608052Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Cognitive Services."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-CogServ0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-CogServ0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.3150697Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.3150697Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Compute0": {
                "identity": {
                  "principalId": "f8bf30dd-327e-4651-9294-714a9048e99c",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Compute",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Compute",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Compute.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.0936693Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Compute."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Compute0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-Compute0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.5091185Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.5091185Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContApps0": {
                "identity": {
                  "principalId": "87ce32b7-1b46-4e85-b389-1f7518cad9d1",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Container Apps",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ContainerApps",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Container Apps.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.3584276Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Container Apps."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContApps0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-ContApps0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.3942334Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.3942334Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContInst0": {
                "identity": {
                  "principalId": "beac8d62-7390-4d78-8fa8-ff8b642b9c08",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Container Instance",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ContainerInstance",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Container Instance.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.5121223Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Container Instance."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContInst0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-ContInst0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.4887494Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.4887494Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContReg0": {
                "identity": {
                  "principalId": "5edf12be-0f38-4248-b3a0-91feb95553ce",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Container Registry",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ContainerRegistry",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Container Registry.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.3631399Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Container Registry."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ContReg0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-ContReg0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.9829934Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.9829934Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-CosmosDb0": {
                "identity": {
                  "principalId": "d8e85172-abfd-46fd-b96d-8f8791b04f2b",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Cosmos DB",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-CosmosDb",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Cosmos DB.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.524439Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Cosmos DB."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-CosmosDb0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-CosmosDb0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.582502Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.582502Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-DataExpl0": {
                "identity": {
                  "principalId": "24325382-908a-4087-a4f3-58ff2bc586c5",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Data Explorer",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-DataExplorer",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Data Explorer.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.2527349Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Data Explorer."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-DataExpl0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-DataExpl0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.571617Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.571617Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-DataFactory0": {
                "identity": {
                  "principalId": "a80caf55-bbe8-48eb-b842-771714fc2c5e",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Data Factory",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-DataFactory",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Data Factory.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.425371Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Data Factory."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-DataFactory0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-DataFactory0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.8257076Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.8257076Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-EventGrid0": {
                "identity": {
                  "principalId": "5c9ce631-75ca-4320-ae42-6bd399114965",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Event Grid",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-EventGrid",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Event Grid.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.8174204Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Event Grid."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-EventGrid0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-EventGrid0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:46.1637796Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:46.1637796Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-EventHub0": {
                "identity": {
                  "principalId": "464a57f6-5a61-4894-9333-3497a68545f3",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Event Hub",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-EventHub",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Event Hub.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.4266877Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Event Hub."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-EventHub0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-EventHub0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.4071789Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.4071789Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-KeyVault": {
                "properties": {
                  "displayName": "Enforce recommended guardrails for Azure Key Vault",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-KeyVault",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables recommended ALZ guardrails for Azure Key Vault.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:44.42586Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-KeyVault",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-KeyVault",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:44.3281662Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:44.3281662Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-KeyVaultSup0": {
                "identity": {
                  "principalId": "c0dfa665-93f2-4348-99aa-5aca655cbb3c",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Key Vault Supplementary",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-KeyVault-Sup",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Key Vault Supplementary.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.1266109Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Key Vault Supplementary."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-KeyVaultSup0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-KeyVaultSup0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.0774482Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.0774482Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Kubernetes0": {
                "identity": {
                  "principalId": "87c21a0d-8fec-458e-a8b1-7079cc2af571",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Kubernetes",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Kubernetes",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Kubernetes.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.6348786Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Kubernetes."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Kubernetes0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-Kubernetes0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:46.2327003Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:46.2327003Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-MachLearn0": {
                "identity": {
                  "principalId": "2dd4d067-fc2a-4073-b344-6d7f7d3292ab",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Machine Learning",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-MachineLearning",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Machine Learning.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.1313705Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Machine Learning."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-MachLearn0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-MachLearn0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.1724829Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.1724829Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-OpenAI0": {
                "identity": {
                  "principalId": "29a6af95-4e07-4781-9e54-afd3a5d52542",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for OpenAI",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-OpenAI",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for OpenAI.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.5736418Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for OpenAI."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-OpenAI0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-OpenAI0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.2006745Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.2006745Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-PostgreSQL0": {
                "identity": {
                  "principalId": "eeee83a2-7687-4fec-85c6-ea3c6ed57cb5",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for PostgreSQL",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-PostgreSQL",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for PostgreSQL.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.2476842Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for PostgreSQL."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-PostgreSQL0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-PostgreSQL0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.2994449Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.2994449Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ServiceBus0": {
                "identity": {
                  "principalId": "f667d776-66a8-4feb-aa76-e82dc6da2904",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Service Bus",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-ServiceBus",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Service Bus.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.6131363Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Service Bus."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-ServiceBus0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-ServiceBus0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.7109724Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.7109724Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-SQL0": {
                "identity": {
                  "principalId": "5ef6717a-c0b3-467f-b76e-35a320972f16",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for SQL",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-SQL",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for SQL.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.6135731Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for SQL."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-SQL0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-SQL0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.21711Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.21711Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Storage0": {
                "identity": {
                  "principalId": "6cde6662-ad81-4480-a4a9-10cdf7eaa5ee",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Storage",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Storage",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Storage.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:47.3015272Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Storage."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Storage0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-Storage0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:45.1868029Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:45.1868029Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Synapse0": {
                "identity": {
                  "principalId": "89dd872e-337b-482f-a883-4620c2344104",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Synapse",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-Synapse",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Synapse.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:46.6426996Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Synapse."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-Synapse0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-Synapse0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.4883927Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.4883927Z"
                }
              },
              "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-VirtualDesk0": {
                "identity": {
                  "principalId": "74986158-fdde-4806-bd23-3ab088e87a7b",
                  "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Enforce recommended guardrails for Virtual Desktop",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-VirtualDesktop",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "description": "This initiative assignment enables additional ALZ guardrails for Virtual Desktop.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:14:45.8761368Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "Recommended guardrails must be enforced for Virtual Desktop."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-platform/providers/Microsoft.Authorization/policyAssignments/Enforce-GR-VirtualDesk0",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-GR-VirtualDesk0",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:14:44.5091185Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:14:44.5091185Z"
                }
              }
            },
            "RoleAssignments": {
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/0032c7a3-a6e1-5090-9036-500079697adb": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/0032c7a3-a6e1-5090-9036-500079697adb",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "8fecbd63-4e2b-4964-80c7-2369c0ceadab",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/14486cdd-5d9e-5eed-a649-e605df40d594": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/14486cdd-5d9e-5eed-a649-e605df40d594",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "f90fb5ec-d513-4b4c-a210-3ad38b20e3c3",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/16f671b2-21ba-5505-bec0-4ef62ba57a44": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/16f671b2-21ba-5505-bec0-4ef62ba57a44",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-AppServices0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "28da5e9a-5edd-427a-a21b-733369063a0e",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/17e40adb-9aa7-5e1f-ba52-13b5a529e167": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/17e40adb-9aa7-5e1f-ba52-13b5a529e167",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-EventGrid0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "5c9ce631-75ca-4320-ae42-6bd399114965",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/193a82cd-6872-58b2-bdb1-3741174d3631": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/193a82cd-6872-58b2-bdb1-3741174d3631",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "33704ebf-56c4-4b65-9b6a-b4b4dacccc4a",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/1ec3c510-d2df-5357-a08c-7518461b8677": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/1ec3c510-d2df-5357-a08c-7518461b8677",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-ContReg0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "5edf12be-0f38-4248-b3a0-91feb95553ce",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/1ee3ba2e-f98b-54b1-8487-b36ef2a645f5": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/1ee3ba2e-f98b-54b1-8487-b36ef2a645f5",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "14700175-8113-4146-886a-18b9a42caa22",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/24b71c5e-fa24-5402-8d7f-b40bdfc471ee": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/24b71c5e-fa24-5402-8d7f-b40bdfc471ee",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "14700175-8113-4146-886a-18b9a42caa22",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/28d2fc38-f8e8-5afd-afdb-3263324e24a3": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/28d2fc38-f8e8-5afd-afdb-3263324e24a3",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "14700175-8113-4146-886a-18b9a42caa22",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/2bbb10c3-53d6-537c-b19c-5bb2610e5961": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/2bbb10c3-53d6-537c-b19c-5bb2610e5961",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enable-AUM-CheckUpdates",
                  "SignInName": null,
                  "RoleDefinitionName": "Azure Connected Machine Resource Administrator",
                  "RoleDefinitionId": "cd570a14-e51a-42ad-bac8-bafd67325302",
                  "ObjectId": "0f436c9b-f53c-40d2-8825-585fdfbc3b68",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/2c3d6b67-720e-507f-917c-837f487fb8d2": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/2c3d6b67-720e-507f-917c-837f487fb8d2",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "de1afd48-59be-4295-a571-82667ff9e160",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/2da6524c-f465-5d5b-bf9a-bd4180031157": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/2da6524c-f465-5d5b-bf9a-bd4180031157",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Reader",
                  "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                  "ObjectId": "6494752e-1851-45ab-afee-72733fe8c22c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/3148eeeb-10c9-530c-8d29-85f4194ed068": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/3148eeeb-10c9-530c-8d29-85f4194ed068",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "f90fb5ec-d513-4b4c-a210-3ad38b20e3c3",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/37b07015-0719-5e2b-9c33-d796f8762d45": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/37b07015-0719-5e2b-9c33-d796f8762d45",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "95610fab-0c83-45d3-89f9-94d0ed18d42d",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/38d16150-1d20-5a3f-bd5e-288bb6a19d99": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/38d16150-1d20-5a3f-bd5e-288bb6a19d99",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "8fecbd63-4e2b-4964-80c7-2369c0ceadab",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/449ce56a-6e83-5bec-8620-87a883222c03": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/449ce56a-6e83-5bec-8620-87a883222c03",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "de1afd48-59be-4295-a571-82667ff9e160",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/4c5cb27a-69d5-5cfe-b13c-6e2fda9a6c01": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/4c5cb27a-69d5-5cfe-b13c-6e2fda9a6c01",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-PostgreSQL0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "eeee83a2-7687-4fec-85c6-ea3c6ed57cb5",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/52e6d580-84d5-5ad7-978b-69c5ba8b70cd": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/52e6d580-84d5-5ad7-978b-69c5ba8b70cd",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-vmHybr-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Reader",
                  "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                  "ObjectId": "d1540b7f-6d11-4083-a7b3-fba89bcd5c07",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/56ec43a3-5ec8-5dd6-aaee-1f2806156b47": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/56ec43a3-5ec8-5dd6-aaee-1f2806156b47",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-Compute0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "f8bf30dd-327e-4651-9294-714a9048e99c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/57688410-f00e-53da-a4dc-8bfe551d2c68": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/57688410-f00e-53da-a4dc-8bfe551d2c68",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "14700175-8113-4146-886a-18b9a42caa22",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/57b52310-eb90-59e6-b8f4-667786a37c08": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/57b52310-eb90-59e6-b8f4-667786a37c08",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "de1afd48-59be-4295-a571-82667ff9e160",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/591430c1-8f80-5ef9-a0ef-46c9fa9612bb": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/591430c1-8f80-5ef9-a0ef-46c9fa9612bb",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-Storage0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "6cde6662-ad81-4480-a4a9-10cdf7eaa5ee",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/5a2d1a00-71e4-5c15-b035-b1969dc45048": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/5a2d1a00-71e4-5c15-b035-b1969dc45048",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Reader",
                  "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                  "ObjectId": "473eb78e-6726-4d88-9775-feb244d55055",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/5a94406c-b5a8-5fdf-8f7b-e02748f742bb": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/5a94406c-b5a8-5fdf-8f7b-e02748f742bb",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-CogServ0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "92b7f43b-483d-4729-805a-9b488b09e833",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/5fdee374-9aa4-565e-8901-22882a081dc5": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/5fdee374-9aa4-565e-8901-22882a081dc5",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "75d7e527-24fe-4ed8-83a8-153ef38f3985",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/62b4def3-df32-5b72-8582-e614338dc93e": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/62b4def3-df32-5b72-8582-e614338dc93e",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-ContInst0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "beac8d62-7390-4d78-8fa8-ff8b642b9c08",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/6fe757a3-4e47-5b39-8209-a67244cedbd6": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/6fe757a3-4e47-5b39-8209-a67244cedbd6",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enable-AUM-CheckUpdates",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "0f436c9b-f53c-40d2-8825-585fdfbc3b68",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/701008a2-3310-5bfa-90e5-0c7edbabb7b6": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/701008a2-3310-5bfa-90e5-0c7edbabb7b6",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-ContApps0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "87ce32b7-1b46-4e85-b389-1f7518cad9d1",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/701449a9-2ffc-55d2-bf3d-339e3479cce1": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/701449a9-2ffc-55d2-bf3d-339e3479cce1",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "f90fb5ec-d513-4b4c-a210-3ad38b20e3c3",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/755541bb-e067-55a5-be2d-e7843e5264c6": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/755541bb-e067-55a5-be2d-e7843e5264c6",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Reader",
                  "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                  "ObjectId": "96b885d6-e9bd-4461-a065-6b96fe499356",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/7c254c80-bfb1-56c9-a5c9-ce93947cb9a8": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/7c254c80-bfb1-56c9-a5c9-ce93947cb9a8",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-OpenAI0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "29a6af95-4e07-4781-9e54-afd3a5d52542",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/824a27c2-0e92-598c-b432-830fcdb3bb5e": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/824a27c2-0e92-598c-b432-830fcdb3bb5e",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-DataFactory0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "a80caf55-bbe8-48eb-b842-771714fc2c5e",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/956463f8-4b52-40df-a1bc-1d448f4b2415": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/956463f8-4b52-40df-a1bc-1d448f4b2415",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "System Administrator",
                  "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "RoleDefinitionName": "Owner",
                  "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                  "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                  "ObjectType": "User",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/99921bd8-5cda-5021-a532-94100529b2c1": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/99921bd8-5cda-5021-a532-94100529b2c1",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "96b885d6-e9bd-4461-a065-6b96fe499356",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/9aaaa269-ea2e-52c1-9ffe-ea5496432dbf": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/9aaaa269-ea2e-52c1-9ffe-ea5496432dbf",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-Synapse0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "89dd872e-337b-482f-a883-4620c2344104",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/9da18f42-9669-58d3-be0c-cfc44a47a3b3": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/9da18f42-9669-58d3-be0c-cfc44a47a3b3",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Reader",
                  "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                  "ObjectId": "95610fab-0c83-45d3-89f9-94d0ed18d42d",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/a3446b40-6c33-504b-b53c-93568cdcfc3e": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/a3446b40-6c33-504b-b53c-93568cdcfc3e",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-DataExpl0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "24325382-908a-4087-a4f3-58ff2bc586c5",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/a639b78a-915a-5982-bede-e6f5d756a386": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/a639b78a-915a-5982-bede-e6f5d756a386",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-vmArc-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "fd5a46de-dd16-4227-9a55-6cc4d3122aae",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/a9e36c6c-619e-5ff0-9be3-a9a400d1162e": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/a9e36c6c-619e-5ff0-9be3-a9a400d1162e",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "8fecbd63-4e2b-4964-80c7-2369c0ceadab",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/aa2c172e-3eea-58a8-b1bf-e02558cfdd19": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/aa2c172e-3eea-58a8-b1bf-e02558cfdd19",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-Encrypt-CMK0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "d6100356-2c70-4775-8bbc-ef872a4a3bf5",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/aa5ec8b9-f28d-566b-8df6-ede07940188d": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/aa5ec8b9-f28d-566b-8df6-ede07940188d",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-CosmosDb0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "d8e85172-abfd-46fd-b96d-8f8791b04f2b",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/aa9a1d6c-ea0a-5555-8a7d-9397559a6275": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/aa9a1d6c-ea0a-5555-8a7d-9397559a6275",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-MachLearn0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "2dd4d067-fc2a-4073-b344-6d7f7d3292ab",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/ab9d47dc-0103-556b-bb9d-1246880890a7": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/ab9d47dc-0103-556b-bb9d-1246880890a7",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-ServiceBus0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "f667d776-66a8-4feb-aa76-e82dc6da2904",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/ae2a6185-0d5c-5345-837a-5b33771d0b2f": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/ae2a6185-0d5c-5345-837a-5b33771d0b2f",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-vmHybr-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "fb5947d4-6040-4813-9e74-e45ae45b14ee",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/af033f61-bc53-56a4-a44d-b188915b9985": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/af033f61-bc53-56a4-a44d-b188915b9985",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-vmArc-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Reader",
                  "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                  "ObjectId": "bff5d517-6a39-4c0c-8568-0fa3df70ce2c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/b0a554be-f137-5384-a483-b6d47fa80054": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/b0a554be-f137-5384-a483-b6d47fa80054",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "33704ebf-56c4-4b65-9b6a-b4b4dacccc4a",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/be281d82-d75e-5f69-ab7e-a470441d4ee3": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/be281d82-d75e-5f69-ab7e-a470441d4ee3",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-vmHybr-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "fb5947d4-6040-4813-9e74-e45ae45b14ee",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/c075b765-eadb-5633-a817-512110484f2f": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/c075b765-eadb-5633-a817-512110484f2f",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-APIM0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "78b7bd7f-b52e-44af-be34-5ebfb966f39f",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/c1198fbe-f5dc-51e9-ba49-261c91333a13": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/c1198fbe-f5dc-51e9-ba49-261c91333a13",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-SQL0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "5ef6717a-c0b3-467f-b76e-35a320972f16",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/c9d1dd97-4ab5-5c23-8dc5-4cc8e535ab8b": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/c9d1dd97-4ab5-5c23-8dc5-4cc8e535ab8b",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-Automation0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "139d3d37-c90e-41d8-b2d7-27c365dae4cc",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/cc86db40-f99b-5d71-9152-127fb2e6544b": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/cc86db40-f99b-5d71-9152-127fb2e6544b",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-VirtualDesk0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "74986158-fdde-4806-bd23-3ab088e87a7b",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/cefe5de5-33a7-5c44-a033-330ba81753ca": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/cefe5de5-33a7-5c44-a033-330ba81753ca",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "473eb78e-6726-4d88-9775-feb244d55055",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/cf0e1b89-243c-5938-b01c-4290108ff571": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/cf0e1b89-243c-5938-b01c-4290108ff571",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-KeyVaultSup0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "c0dfa665-93f2-4348-99aa-5aca655cbb3c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/d420b4d0-b7cf-53c2-a7ac-fef5ff44f8c0": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/d420b4d0-b7cf-53c2-a7ac-fef5ff44f8c0",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-EventHub0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "464a57f6-5a61-4894-9333-3497a68545f3",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/d4989d9f-b65e-5eae-9175-eed23c6aca2d": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/d4989d9f-b65e-5eae-9175-eed23c6aca2d",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "6494752e-1851-45ab-afee-72733fe8c22c",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/d4bfa990-e467-5cb9-bf7d-1060852cbb0f": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/d4bfa990-e467-5cb9-bf7d-1060852cbb0f",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "f90fb5ec-d513-4b4c-a210-3ad38b20e3c3",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/d5d4197f-dd26-5fa3-b64a-734731610421": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/d5d4197f-dd26-5fa3-b64a-734731610421",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "8fecbd63-4e2b-4964-80c7-2369c0ceadab",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/d8410651-3d4d-56b2-abd8-a309826359ea": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/d8410651-3d4d-56b2-abd8-a309826359ea",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "33704ebf-56c4-4b65-9b6a-b4b4dacccc4a",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/dbc7b566-7a00-51cc-95db-479d83f7db69": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/dbc7b566-7a00-51cc-95db-479d83f7db69",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-Monitoring",
                  "SignInName": null,
                  "RoleDefinitionName": "Reader",
                  "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                  "ObjectId": "75d7e527-24fe-4ed8-83a8-153ef38f3985",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/df6e0b4e-785a-5246-b055-7d35cc5b488e": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/df6e0b4e-785a-5246-b055-7d35cc5b488e",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VMSS-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Managed Identity Operator",
                  "RoleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830",
                  "ObjectId": "de1afd48-59be-4295-a571-82667ff9e160",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/e22fa3d2-89a1-5ab7-a17e-e289e6e1daa4": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/e22fa3d2-89a1-5ab7-a17e-e289e6e1daa4",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-MDFC-DefSQL-AMA",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "14700175-8113-4146-886a-18b9a42caa22",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/ee32b896-112f-55aa-9559-e87790631827": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/ee32b896-112f-55aa-9559-e87790631827",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-vmArc-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Log Analytics Contributor",
                  "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                  "ObjectId": "fd5a46de-dd16-4227-9a55-6cc4d3122aae",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/f38e57a6-de4d-57ed-9bfe-948e0a43d42a": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/f38e57a6-de4d-57ed-9bfe-948e0a43d42a",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Deploy-VM-ChangeTrack",
                  "SignInName": null,
                  "RoleDefinitionName": "Monitoring Contributor",
                  "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                  "ObjectId": "33704ebf-56c4-4b65-9b6a-b4b4dacccc4a",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/fca9bf51-166a-5427-9f79-892eb32074e8": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/fca9bf51-166a-5427-9f79-892eb32074e8",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enforce-GR-Kubernetes0",
                  "SignInName": null,
                  "RoleDefinitionName": "Contributor",
                  "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                  "ObjectId": "87c21a0d-8fec-458e-a8b1-7079cc2af571",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ],
              "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/fd6d62ea-9516-5d79-a4bb-1ba5a409ab9e": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-platform/providers/microsoft.authorization/roleassignments/fd6d62ea-9516-5d79-a4bb-1ba5a409ab9e",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-platform",
                  "DisplayName": "Enable-AUM-CheckUpdates",
                  "SignInName": null,
                  "RoleDefinitionName": "Virtual Machine Contributor",
                  "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                  "ObjectId": "0f436c9b-f53c-40d2-8825-585fdfbc3b68",
                  "ObjectType": "ServicePrincipal",
                  "PIM": "false"
                }
              ]
            },
            "DiagnosticSettings": {
              "toLa": {
                "Name": "toLa",
                "Type": "LA",
                "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                "Settings": [
                  {
                    "Category": "Administrative",
                    "Enabled": true
                  },
                  {
                    "Category": "Policy",
                    "Enabled": true
                  }
                ]
              }
            },
            "Subscriptions": {},
            "ManagementGroups": {
              "ALZ-connectivity": {
                "MgId": "ALZ-connectivity",
                "MgName": "ALZ-connectivity",
                "mgParentId": "ALZ-platform",
                "mgParentName": "ALZ-platform",
                "level": "3",
                "PolicyDefinitionsCustom": {},
                "PolicySetDefinitionsCustom": {},
                "BlueprintDefinitions": {},
                "PolicyAssignments": {},
                "RoleAssignments": {
                  "/providers/microsoft.management/managementgroups/alz-connectivity/providers/microsoft.authorization/roleassignments/801cffe9-3ec5-4c1e-a1e0-b9c936321faa": [
                    {
                      "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-connectivity/providers/microsoft.authorization/roleassignments/801cffe9-3ec5-4c1e-a1e0-b9c936321faa",
                      "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-connectivity",
                      "DisplayName": "System Administrator",
                      "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "RoleDefinitionName": "Owner",
                      "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                      "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                      "ObjectType": "User",
                      "PIM": "false"
                    }
                  ]
                },
                "DiagnosticSettings": {
                  "toLa": {
                    "Name": "toLa",
                    "Type": "LA",
                    "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                    "Settings": [
                      {
                        "Category": "Administrative",
                        "Enabled": true
                      },
                      {
                        "Category": "Policy",
                        "Enabled": true
                      }
                    ]
                  }
                },
                "Subscriptions": {},
                "ManagementGroups": {}
              },
              "ALZ-identity": {
                "MgId": "ALZ-identity",
                "MgName": "ALZ-identity",
                "mgParentId": "ALZ-platform",
                "mgParentName": "ALZ-platform",
                "level": "3",
                "PolicyDefinitionsCustom": {},
                "PolicySetDefinitionsCustom": {},
                "BlueprintDefinitions": {},
                "PolicyAssignments": {
                  "/providers/Microsoft.Management/managementGroups/ALZ-identity/providers/Microsoft.Authorization/policyAssignments/Deny-MgmtPorts-Internet": {
                    "properties": {
                      "displayName": "Management port access from the Internet should be blocked",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-MgmtPorts-From-Internet",
                      "scope": "/providers/Microsoft.Management/managementGroups/ALZ-identity",
                      "description": "This policy denies any network security rule that allows management port access from the Internet",
                      "metadata": {
                        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                        "createdOn": "2024-06-10T09:13:44.2101765Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default",
                      "nonComplianceMessages": [
                        {
                          "message": "Management port access from the Internet must be blocked."
                        }
                      ]
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ALZ-identity/providers/Microsoft.Authorization/policyAssignments/Deny-MgmtPorts-Internet",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-MgmtPorts-Internet",
                    "systemData": {
                      "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "createdByType": "User",
                      "createdAt": "2024-06-10T09:13:44.1534058Z",
                      "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "lastModifiedByType": "User",
                      "lastModifiedAt": "2024-06-10T09:13:44.1534058Z"
                    }
                  },
                  "/providers/Microsoft.Management/managementGroups/ALZ-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP": {
                    "properties": {
                      "displayName": "Deny the creation of public IP",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
                      "scope": "/providers/Microsoft.Management/managementGroups/ALZ-identity",
                      "parameters": {
                        "listOfResourceTypesNotAllowed": {
                          "value": [
                            "Microsoft.Network/publicIPAddresses"
                          ]
                        },
                        "effect": {
                          "value": "Deny"
                        }
                      },
                      "description": "This policy denies creation of Public IPs under the assigned scope.",
                      "metadata": {
                        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                        "createdOn": "2024-06-10T09:13:42.6788795Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default",
                      "nonComplianceMessages": [
                        {
                          "message": "Public IPs must not be created under this scope."
                        }
                      ]
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ALZ-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-Public-IP",
                    "systemData": {
                      "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "createdByType": "User",
                      "createdAt": "2024-06-10T09:13:42.6403467Z",
                      "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "lastModifiedByType": "User",
                      "lastModifiedAt": "2024-06-10T09:13:42.6403467Z"
                    }
                  },
                  "/providers/Microsoft.Management/managementGroups/ALZ-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg": {
                    "properties": {
                      "displayName": "Subnets should have a Network Security Group",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
                      "scope": "/providers/Microsoft.Management/managementGroups/ALZ-identity",
                      "description": "This policy denies the creation of a subnet without a Network Security Group to protect traffic across subnets.",
                      "metadata": {
                        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                        "createdOn": "2024-06-10T09:13:43.4404229Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default",
                      "nonComplianceMessages": [
                        {
                          "message": "Subnets must have a Network Security Group."
                        }
                      ]
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ALZ-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-Subnet-Without-Nsg",
                    "systemData": {
                      "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "createdByType": "User",
                      "createdAt": "2024-06-10T09:13:43.386185Z",
                      "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "lastModifiedByType": "User",
                      "lastModifiedAt": "2024-06-10T09:13:43.386185Z"
                    }
                  },
                  "/providers/Microsoft.Management/managementGroups/ALZ-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup": {
                    "identity": {
                      "principalId": "39fb1889-60b0-4d78-8037-94086b599462",
                      "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "displayName": "Configure backup on virtual machines without a given tag to a new recovery services vault with a default policy",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86",
                      "scope": "/providers/Microsoft.Management/managementGroups/ALZ-identity",
                      "parameters": {},
                      "description": "Enforce backup for all virtual machines by deploying a recovery services vault in the same location and resource group as the virtual machine. Doing this is useful when different application teams in your organization are allocated separate resource groups and need to manage their own backups and restores. You can optionally exclude virtual machines containing a specified tag to control the scope of assignment. See https://aka.ms/AzureVMAppCentricBackupExcludeTag.",
                      "metadata": {
                        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                        "createdOn": "2024-06-10T09:13:45.6381361Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default",
                      "nonComplianceMessages": [
                        {
                          "message": "Backup on virtual machines without a given tag must be configured to a new recovery services vault with a default policy."
                        }
                      ]
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ALZ-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deploy-VM-Backup",
                    "location": "uksouth",
                    "systemData": {
                      "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "createdByType": "User",
                      "createdAt": "2024-06-10T09:13:42.8146221Z",
                      "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "lastModifiedByType": "User",
                      "lastModifiedAt": "2024-06-10T09:13:42.8146221Z"
                    }
                  }
                },
                "RoleAssignments": {
                  "/providers/microsoft.management/managementgroups/alz-identity/providers/microsoft.authorization/roleassignments/4bb879fa-17a6-576a-9275-8417e215220c": [
                    {
                      "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-identity/providers/microsoft.authorization/roleassignments/4bb879fa-17a6-576a-9275-8417e215220c",
                      "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-identity",
                      "DisplayName": "Deploy-VM-Backup",
                      "SignInName": null,
                      "RoleDefinitionName": "Backup Contributor",
                      "RoleDefinitionId": "5e467623-bb1f-42f4-a55d-6e525e11384b",
                      "ObjectId": "39fb1889-60b0-4d78-8037-94086b599462",
                      "ObjectType": "ServicePrincipal",
                      "PIM": "false"
                    }
                  ],
                  "/providers/microsoft.management/managementgroups/alz-identity/providers/microsoft.authorization/roleassignments/60821882-aa34-5e65-9586-bf879110a3ae": [
                    {
                      "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-identity/providers/microsoft.authorization/roleassignments/60821882-aa34-5e65-9586-bf879110a3ae",
                      "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-identity",
                      "DisplayName": "Deploy-VM-Backup",
                      "SignInName": null,
                      "RoleDefinitionName": "Virtual Machine Contributor",
                      "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                      "ObjectId": "39fb1889-60b0-4d78-8037-94086b599462",
                      "ObjectType": "ServicePrincipal",
                      "PIM": "false"
                    }
                  ],
                  "/providers/microsoft.management/managementgroups/alz-identity/providers/microsoft.authorization/roleassignments/c68a0ae1-fcbf-4147-9d14-c14e41a0a216": [
                    {
                      "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-identity/providers/microsoft.authorization/roleassignments/c68a0ae1-fcbf-4147-9d14-c14e41a0a216",
                      "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-identity",
                      "DisplayName": "System Administrator",
                      "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "RoleDefinitionName": "Owner",
                      "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                      "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                      "ObjectType": "User",
                      "PIM": "false"
                    }
                  ]
                },
                "DiagnosticSettings": {
                  "toLa": {
                    "Name": "toLa",
                    "Type": "LA",
                    "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                    "Settings": [
                      {
                        "Category": "Administrative",
                        "Enabled": true
                      },
                      {
                        "Category": "Policy",
                        "Enabled": true
                      }
                    ]
                  }
                },
                "Subscriptions": {
                  "63769d27-a2af-4875-aef3-7c7bc18559f8": {
                    "SubscriptionName": "ME-MngEnvMCAP002741-sachana-2",
                    "SubscriptionQuotaId": "Internal_2014-09-01",
                    "SubscriptionState": "Enabled",
                    "SubscriptionTags": {},
                    "PolicyDefinitionsCustom": {},
                    "PolicySetDefinitionsCustom": {},
                    "BlueprintDefinitions": {},
                    "PolicyAssignments": {
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/DataProtectionSecurityCenter": {
                        "properties": {
                          "displayName": "ASC DataProtection (subscription: 63769d27-a2af-4875-aef3-7c7bc18559f8)",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/9cb3cc7a-b39b-4b82-bc89-e5a5d9ff7b97",
                          "scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "description": "This policy assignment was automatically created by Azure Security Center",
                          "metadata": {
                            "assignedBy": "Security Center",
                            "createdBy": "d21e721b-8618-4309-b6f3-ac0ad818ad40",
                            "createdOn": "2024-06-06T16:15:52.9021973Z",
                            "updatedBy": null,
                            "updatedOn": null
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/DataProtectionSecurityCenter",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "DataProtectionSecurityCenter",
                        "systemData": {
                          "createdBy": "8edd93e1-2103-40b4-bd70-6e34e586362d",
                          "createdByType": "Application",
                          "createdAt": "2024-06-06T16:15:52.8603079Z",
                          "lastModifiedBy": "8edd93e1-2103-40b4-bd70-6e34e586362d",
                          "lastModifiedByType": "Application",
                          "lastModifiedAt": "2024-06-06T16:15:52.8603079Z"
                        }
                      },
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning AKS Security Profile": {
                        "identity": {
                          "principalId": "441bfc6a-79ba-4d28-89d6-54990032d827",
                          "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Defender for Containers provisioning AKS Security Profile",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/64def556-fbad-4622-930e-72d1d5589bf5",
                          "scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "parameters": {},
                          "description": "This policy assignment was automatically created by Microsoft Defender for Cloud for agent installation as configured in Defender for Cloud auto provisioning.",
                          "metadata": {
                            "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "createdOn": "2023-10-31T06:39:33.481936Z",
                            "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "updatedOn": "2024-04-23T08:14:30.0505909Z"
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning AKS Security Profile",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Defender for Containers provisioning AKS Security Profile",
                        "location": "centralus",
                        "systemData": {
                          "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "createdByType": "User",
                          "createdAt": "2023-10-31T06:39:31.8440031Z",
                          "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "lastModifiedByType": "User",
                          "lastModifiedAt": "2024-04-23T08:14:28.7545962Z"
                        }
                      },
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning ARC k8s Enabled": {
                        "identity": {
                          "principalId": "d2c1678b-d4d6-46b5-ada3-377c0b225c92",
                          "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Defender for Containers provisioning ARC k8s Enabled",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/708b60a6-d253-4fe0-9114-4be4c00f012c",
                          "scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "parameters": {},
                          "description": "This policy assignment was automatically created by Microsoft Defender for Cloud for agent installation as configured in Defender for Cloud auto provisioning.",
                          "metadata": {
                            "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "createdOn": "2023-10-31T06:39:33.5539816Z",
                            "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "updatedOn": "2024-04-23T08:14:29.9713085Z"
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning ARC k8s Enabled",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Defender for Containers provisioning ARC k8s Enabled",
                        "location": "centralus",
                        "systemData": {
                          "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "createdByType": "User",
                          "createdAt": "2023-10-31T06:39:31.8440031Z",
                          "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "lastModifiedByType": "User",
                          "lastModifiedAt": "2024-04-23T08:14:28.7445934Z"
                        }
                      },
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning Azure Policy Addon for Kub": {
                        "identity": {
                          "principalId": "84b434d5-1dfa-4817-aba0-b2ef88840edd",
                          "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Defender for Containers provisioning Azure Policy Addon for Kub",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7",
                          "scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "parameters": {},
                          "description": "This policy assignment was automatically created by Microsoft Defender for Cloud for agent installation as configured in Defender for Cloud auto provisioning.",
                          "metadata": {
                            "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "createdOn": "2023-10-31T06:39:33.4757614Z",
                            "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "updatedOn": "2024-04-23T08:14:30.1955457Z"
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning Azure Policy Addon for Kub",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Defender for Containers provisioning Azure Policy Addon for Kub",
                        "location": "centralus",
                        "systemData": {
                          "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "createdByType": "User",
                          "createdAt": "2023-10-31T06:39:31.8440031Z",
                          "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "lastModifiedByType": "User",
                          "lastModifiedAt": "2024-04-23T08:14:29.0632066Z"
                        }
                      },
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning Policy extension for Arc-e": {
                        "identity": {
                          "principalId": "b080c62f-f94f-4ece-b81f-6c6be5874906",
                          "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Defender for Containers provisioning Policy extension for Arc-e",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0adc5395-9169-4b9b-8687-af838d69410a",
                          "scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "parameters": {},
                          "description": "This policy assignment was automatically created by Microsoft Defender for Cloud for agent installation as configured in Defender for Cloud auto provisioning.",
                          "metadata": {
                            "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "createdOn": "2023-10-31T06:39:33.5919572Z",
                            "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "updatedOn": "2024-04-23T08:14:30.8930203Z"
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning Policy extension for Arc-e",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Defender for Containers provisioning Policy extension for Arc-e",
                        "location": "centralus",
                        "systemData": {
                          "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "createdByType": "User",
                          "createdAt": "2023-10-31T06:39:31.859629Z",
                          "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "lastModifiedByType": "User",
                          "lastModifiedAt": "2024-04-23T08:14:29.3102091Z"
                        }
                      },
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/Defender for SQL on SQL VMs and Arc-enabled SQL Servers": {
                        "identity": {
                          "principalId": "83d1d118-df09-4e3b-8f2b-0e7fb365daaf",
                          "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393",
                          "scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "parameters": {},
                          "description": "This policy assignment was automatically created by Microsoft Defender for Cloud for agent installation as configured in Defender for Cloud auto provisioning.",
                          "metadata": {
                            "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "createdOn": "2024-04-23T08:14:30.89846Z",
                            "updatedBy": null,
                            "updatedOn": null
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                        "location": "centralus",
                        "systemData": {
                          "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "createdByType": "User",
                          "createdAt": "2024-04-23T08:14:29.0450792Z",
                          "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "lastModifiedByType": "User",
                          "lastModifiedAt": "2024-04-23T08:14:29.0450792Z"
                        }
                      },
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/OpenSourceRelationalDatabasesProtectionSecurityCenter": {
                        "properties": {
                          "displayName": "ASC OpenSourceRelationalDatabasesProtection (subscription: 63769d27-a2af-4875-aef3-7c7bc18559f8)",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/e77fc0b3-f7e9-4c58-bc13-cb753ed8e46e",
                          "scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "description": "This policy assignment was automatically created by Azure Security Center",
                          "metadata": {
                            "assignedBy": "Security Center",
                            "createdBy": "d21e721b-8618-4309-b6f3-ac0ad818ad40",
                            "createdOn": "2024-06-06T16:15:40.7766478Z",
                            "updatedBy": null,
                            "updatedOn": null
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/Microsoft.Authorization/policyAssignments/OpenSourceRelationalDatabasesProtectionSecurityCenter",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "OpenSourceRelationalDatabasesProtectionSecurityCenter",
                        "systemData": {
                          "createdBy": "8edd93e1-2103-40b4-bd70-6e34e586362d",
                          "createdByType": "Application",
                          "createdAt": "2024-06-06T16:15:40.7354613Z",
                          "lastModifiedBy": "8edd93e1-2103-40b4-bd70-6e34e586362d",
                          "lastModifiedByType": "Application",
                          "lastModifiedAt": "2024-06-06T16:15:40.7354613Z"
                        }
                      }
                    },
                    "RoleAssignments": {
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/0024da37-c6f6-4edb-8991-5590b237f0c8": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/0024da37-c6f6-4edb-8991-5590b237f0c8",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Containers/securityOperators/DefenderForContainersSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Kubernetes Agent Operator",
                          "RoleDefinitionId": "5e93ba01-8f92-4c7a-b12a-801e3df23824",
                          "ObjectId": "a75e98bf-e94b-4b24-b2b3-51833f8e93ef",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/02dbab06-f02e-4ec4-906b-7487124ad37a": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/02dbab06-f02e-4ec4-906b-7487124ad37a",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning AKS Security Profile",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "441bfc6a-79ba-4d28-89d6-54990032d827",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/0e1e6ec8-76b7-4e73-8241-93a4c83ee38f": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/0e1e6ec8-76b7-4e73-8241-93a4c83ee38f",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "CloudPosture/securityOperators/DefenderCSPMSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Defender CSPM Storage Scanner Operator",
                          "RoleDefinitionId": "8480c0f0-4509-4229-9339-7c10018cb8c4",
                          "ObjectId": "49d6f60d-0c92-4d55-a1b1-8858d682da3d",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/1b417353-bebd-4bc4-8d05-299f93c61a3b": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/1b417353-bebd-4bc4-8d05-299f93c61a3b",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "System Administrator",
                          "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "RoleDefinitionName": "Owner",
                          "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                          "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                          "ObjectType": "User",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/21ee57b5-7312-4c21-9480-7db73652ec5e": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/21ee57b5-7312-4c21-9480-7db73652ec5e",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Microsoft Demos",
                          "SignInName": null,
                          "RoleDefinitionName": "Owner",
                          "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                          "ObjectId": "7abbab28-45a5-4bc7-b759-2270e1608807",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/22fa042a-b853-40fc-83eb-56312863f5d6": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/22fa042a-b853-40fc-83eb-56312863f5d6",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "Virtual Machine Contributor",
                          "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                          "ObjectId": "83d1d118-df09-4e3b-8f2b-0e7fb365daaf",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/2de68373-1138-4494-9851-2048e22e26aa": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/2de68373-1138-4494-9851-2048e22e26aa",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "StorageAccounts/securityOperators/DefenderForStorageSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Role Based Access Control Administrator",
                          "RoleDefinitionId": "f58310d9-a9f6-439a-9e8d-f62e7b41a168",
                          "ObjectId": "64ea9be1-96d2-480a-8884-c74f75671e3d",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/54caa674-e10d-4777-225c-8f19ac6eefe1": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/54caa674-e10d-4777-225c-8f19ac6eefe1",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning Policy extension for Arc-e",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "b080c62f-f94f-4ece-b81f-6c6be5874906",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/553a2ff5-28f6-44e8-97b9-73d54db12cd8": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/553a2ff5-28f6-44e8-97b9-73d54db12cd8",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Microsoft Defender for Cloud Servers Scanner Resource Provider",
                          "SignInName": null,
                          "RoleDefinitionName": "VM Scanner Operator",
                          "RoleDefinitionId": "d24ecba3-c1f4-40fa-a7bb-4588a071e8fd",
                          "ObjectId": "e4045c2e-5d17-40c2-91de-737401c4bba9",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/613a0493-59e0-4909-0e66-1fbe929a1b23": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/613a0493-59e0-4909-0e66-1fbe929a1b23",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "Monitoring Contributor",
                          "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "ObjectId": "83d1d118-df09-4e3b-8f2b-0e7fb365daaf",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/61facc02-a834-43de-05c1-8e6fcb6992ae": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/61facc02-a834-43de-05c1-8e6fcb6992ae",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "User Access Administrator",
                          "RoleDefinitionId": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
                          "ObjectId": "83d1d118-df09-4e3b-8f2b-0e7fb365daaf",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/68775fdd-4e08-43a7-ae3c-e0b078a5dbfc": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/68775fdd-4e08-43a7-ae3c-e0b078a5dbfc",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "CloudPosture/securityOperators/DefenderCSPMSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Storage Account Contributor",
                          "RoleDefinitionId": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
                          "ObjectId": "49d6f60d-0c92-4d55-a1b1-8858d682da3d",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/69fc7442-c00d-42c7-1196-46919b1af4f1": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/69fc7442-c00d-42c7-1196-46919b1af4f1",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning ARC k8s Enabled",
                          "SignInName": null,
                          "RoleDefinitionName": "Kubernetes Extension Contributor",
                          "RoleDefinitionId": "85cb6faf-e071-4c9b-8136-154b5a04f717",
                          "ObjectId": "d2c1678b-d4d6-46b5-ada3-377c0b225c92",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/742e7841-6bc8-408f-5c61-5796922467ca": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/742e7841-6bc8-408f-5c61-5796922467ca",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning Policy extension for Arc-e",
                          "SignInName": null,
                          "RoleDefinitionName": "Azure Kubernetes Service Contributor Role",
                          "RoleDefinitionId": "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
                          "ObjectId": "b080c62f-f94f-4ece-b81f-6c6be5874906",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/7f43ca03-a188-44e6-bafc-dab540324228": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/7f43ca03-a188-44e6-bafc-dab540324228",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "MCAPSGov-AutomationApp",
                          "SignInName": null,
                          "RoleDefinitionName": "Owner",
                          "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                          "ObjectId": "b8d3339a-88d5-40e3-acd4-ba194fcbdba5",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/82358a90-1ef4-4cb2-ae51-577f18e31af4": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/82358a90-1ef4-4cb2-ae51-577f18e31af4",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "CloudPosture/securityOperators/DefenderCSPMSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Kubernetes Agentless Operator",
                          "RoleDefinitionId": "d5a2ae44-610b-4500-93be-660a0c5f5ca6",
                          "ObjectId": "49d6f60d-0c92-4d55-a1b1-8858d682da3d",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/841dc7bf-3459-482b-3b17-9e77ed7cde92": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/841dc7bf-3459-482b-3b17-9e77ed7cde92",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning AKS Security Profile",
                          "SignInName": null,
                          "RoleDefinitionName": "Azure Kubernetes Service Contributor Role",
                          "RoleDefinitionId": "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
                          "ObjectId": "441bfc6a-79ba-4d28-89d6-54990032d827",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/84510871-36a6-4c3e-e653-80fcb1533069": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/84510871-36a6-4c3e-e653-80fcb1533069",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning AKS Security Profile",
                          "SignInName": null,
                          "RoleDefinitionName": "Kubernetes Extension Contributor",
                          "RoleDefinitionId": "85cb6faf-e071-4c9b-8136-154b5a04f717",
                          "ObjectId": "441bfc6a-79ba-4d28-89d6-54990032d827",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/85bfba07-3b87-44f6-dd8a-b9b649aa196f": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/85bfba07-3b87-44f6-dd8a-b9b649aa196f",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning AKS Security Profile",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "441bfc6a-79ba-4d28-89d6-54990032d827",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/88a36ee4-28ee-4c56-67c5-1ba76a51df82": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/88a36ee4-28ee-4c56-67c5-1ba76a51df82",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "Azure Connected Machine Resource Administrator",
                          "RoleDefinitionId": "cd570a14-e51a-42ad-bac8-bafd67325302",
                          "ObjectId": "83d1d118-df09-4e3b-8f2b-0e7fb365daaf",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/99b982b6-d847-4daa-a316-c2a366a5d2bd": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/99b982b6-d847-4daa-a316-c2a366a5d2bd",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Cloud Infrastructure Entitlement Management",
                          "SignInName": null,
                          "RoleDefinitionName": "Reader",
                          "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                          "ObjectId": "ec760573-1b29-41e5-bf5e-282d3c3f19d8",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/9a69ffcf-eaa7-43dc-19df-347cde82a436": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/9a69ffcf-eaa7-43dc-19df-347cde82a436",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning Azure Policy Addon for Kub",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "84b434d5-1dfa-4817-aba0-b2ef88840edd",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/9bc3b155-d093-4695-3a84-edbf75c908f1": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/9bc3b155-d093-4695-3a84-edbf75c908f1",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning Policy extension for Arc-e",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "b080c62f-f94f-4ece-b81f-6c6be5874906",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/a3c191bf-1788-4ff6-836d-d0604f9ab9c9": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/a3c191bf-1788-4ff6-836d-d0604f9ab9c9",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning Azure Policy Addon for Kub",
                          "SignInName": null,
                          "RoleDefinitionName": "Kubernetes Extension Contributor",
                          "RoleDefinitionId": "85cb6faf-e071-4c9b-8136-154b5a04f717",
                          "ObjectId": "84b434d5-1dfa-4817-aba0-b2ef88840edd",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/a7ab3ee5-10ed-4e9d-9e07-e24bbc51d87d": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/a7ab3ee5-10ed-4e9d-9e07-e24bbc51d87d",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "StorageAccounts/securityOperators/DefenderForStorageSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Storage Account Contributor",
                          "RoleDefinitionId": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
                          "ObjectId": "64ea9be1-96d2-480a-8884-c74f75671e3d",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/a8acaa59-88fb-48c1-abf9-700c6da61c89": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/a8acaa59-88fb-48c1-abf9-700c6da61c89",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "StorageAccounts/securityOperators/DefenderForStorageSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Security Admin",
                          "RoleDefinitionId": "fb1c8493-542b-48eb-b624-b4c8fea62acd",
                          "ObjectId": "64ea9be1-96d2-480a-8884-c74f75671e3d",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/ca79a2eb-8e52-4cca-ca9b-fddae04f9f79": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/ca79a2eb-8e52-4cca-ca9b-fddae04f9f79",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "83d1d118-df09-4e3b-8f2b-0e7fb365daaf",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/cac03998-f2d3-47b2-482d-f26a138b7d48": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/cac03998-f2d3-47b2-482d-f26a138b7d48",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning Policy extension for Arc-e",
                          "SignInName": null,
                          "RoleDefinitionName": "Kubernetes Extension Contributor",
                          "RoleDefinitionId": "85cb6faf-e071-4c9b-8136-154b5a04f717",
                          "ObjectId": "b080c62f-f94f-4ece-b81f-6c6be5874906",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/cad90572-223e-4a09-358f-f3821d78ed65": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/cad90572-223e-4a09-358f-f3821d78ed65",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning Azure Policy Addon for Kub",
                          "SignInName": null,
                          "RoleDefinitionName": "Azure Kubernetes Service Contributor Role",
                          "RoleDefinitionId": "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
                          "ObjectId": "84b434d5-1dfa-4817-aba0-b2ef88840edd",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/cc07d407-bdee-4ec1-991e-8712ffcbd1b8": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/cc07d407-bdee-4ec1-991e-8712ffcbd1b8",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "CloudPosture/securityOperators/DefenderCSPMSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Role Based Access Control Administrator",
                          "RoleDefinitionId": "f58310d9-a9f6-439a-9e8d-f62e7b41a168",
                          "ObjectId": "49d6f60d-0c92-4d55-a1b1-8858d682da3d",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/cf855286-e9dc-41e6-b162-8adf50ad133c": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/cf855286-e9dc-41e6-b162-8adf50ad133c",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "StorageDataScanner",
                          "SignInName": null,
                          "RoleDefinitionName": "Storage Blob Data Reader",
                          "RoleDefinitionId": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
                          "ObjectId": "c9d03926-9e74-4ef2-ab37-b1dc9b56b3b3",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/dfc72ce5-cb6e-425a-7b01-d50de9e08973": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/dfc72ce5-cb6e-425a-7b01-d50de9e08973",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "83d1d118-df09-4e3b-8f2b-0e7fb365daaf",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/e1d7a08d-1b5f-32dd-81c1-fe1cdc95fa6e": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/e1d7a08d-1b5f-32dd-81c1-fe1cdc95fa6e",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "StorageDataScanner",
                          "SignInName": null,
                          "RoleDefinitionName": "Defender for Storage Data Scanner",
                          "RoleDefinitionId": "1e7ca9b1-60d1-4db8-a914-f2ca1ff27c40",
                          "ObjectId": "c9d03926-9e74-4ef2-ab37-b1dc9b56b3b3",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/e6fa831d-470b-4327-edc7-31114bfdf899": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/e6fa831d-470b-4327-edc7-31114bfdf899",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning Azure Policy Addon for Kub",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "84b434d5-1dfa-4817-aba0-b2ef88840edd",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/e9f52e96-c686-4207-9de3-0993e951f76b": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/e9f52e96-c686-4207-9de3-0993e951f76b",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning ARC k8s Enabled",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "d2c1678b-d4d6-46b5-ada3-377c0b225c92",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/ed4f1858-0a6a-4951-138a-7e7481d6e594": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/ed4f1858-0a6a-4951-138a-7e7481d6e594",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning ARC k8s Enabled",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "d2c1678b-d4d6-46b5-ada3-377c0b225c92",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/f0cdd8ce-92fb-4eac-b90d-de40f966cb7a": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/f0cdd8ce-92fb-4eac-b90d-de40f966cb7a",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Containers/securityOperators/DefenderForContainersSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Kubernetes Agentless Operator",
                          "RoleDefinitionId": "d5a2ae44-610b-4500-93be-660a0c5f5ca6",
                          "ObjectId": "a75e98bf-e94b-4b24-b2b3-51833f8e93ef",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/f4fb49fd-36bf-4b28-8ef2-f7b3f61e25e9": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/f4fb49fd-36bf-4b28-8ef2-f7b3f61e25e9",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "StorageAccounts/securityOperators/DefenderForStorageSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "EventGrid Contributor",
                          "RoleDefinitionId": "1e241071-0855-49ea-94dc-649edcd759de",
                          "ObjectId": "64ea9be1-96d2-480a-8884-c74f75671e3d",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/fa96fa38-05bf-4f10-ab7b-763ee8b10ba4": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/fa96fa38-05bf-4f10-ab7b-763ee8b10ba4",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "Defender for Containers provisioning ARC k8s Enabled",
                          "SignInName": null,
                          "RoleDefinitionName": "Azure Kubernetes Service Contributor Role",
                          "RoleDefinitionId": "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
                          "ObjectId": "d2c1678b-d4d6-46b5-ada3-377c0b225c92",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/ff713a13-2bf3-4103-bb5b-c8aa38c6b721": [
                        {
                          "RoleAssignmentId": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8/providers/microsoft.authorization/roleassignments/ff713a13-2bf3-4103-bb5b-c8aa38c6b721",
                          "Scope": "/subscriptions/63769d27-a2af-4875-aef3-7c7bc18559f8",
                          "DisplayName": "StorageAccounts/securityOperators/DefenderForStorageSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Defender for Storage Scanner Operator",
                          "RoleDefinitionId": "0f641de8-0b88-4198-bdef-bd8b45ceba96",
                          "ObjectId": "64ea9be1-96d2-480a-8884-c74f75671e3d",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ]
                    },
                    "BlueprintAssignments": {},
                    "DiagnosticSettings": {
                      "MCAPSGov-LogsToLAWS": {
                        "Name": "MCAPSGov-LogsToLAWS",
                        "Type": "LA",
                        "TargetId": "/subscriptions/6b76ff87-a921-49fe-a04a-92aebd1ac6fa/resourceGroups/MCAPSGov-corp-RG/providers/Microsoft.OperationalInsights/workspaces/MCAPSGov-corp-ActivityLogsWorkspace",
                        "Settings": [
                          {
                            "Category": "Administrative",
                            "Enabled": true
                          },
                          {
                            "Category": "Security",
                            "Enabled": true
                          },
                          {
                            "Category": "ServiceHealth",
                            "Enabled": false
                          },
                          {
                            "Category": "Alert",
                            "Enabled": false
                          },
                          {
                            "Category": "Recommendation",
                            "Enabled": false
                          },
                          {
                            "Category": "Policy",
                            "Enabled": false
                          },
                          {
                            "Category": "Autoscale",
                            "Enabled": false
                          },
                          {
                            "Category": "ResourceHealth",
                            "Enabled": false
                          }
                        ]
                      },
                      "subscriptionToLa": {
                        "Name": "subscriptionToLa",
                        "Type": "LA",
                        "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                        "Settings": [
                          {
                            "Category": "Administrative",
                            "Enabled": true
                          },
                          {
                            "Category": "Security",
                            "Enabled": true
                          },
                          {
                            "Category": "ServiceHealth",
                            "Enabled": true
                          },
                          {
                            "Category": "Alert",
                            "Enabled": true
                          },
                          {
                            "Category": "Recommendation",
                            "Enabled": true
                          },
                          {
                            "Category": "Policy",
                            "Enabled": true
                          },
                          {
                            "Category": "Autoscale",
                            "Enabled": true
                          },
                          {
                            "Category": "ResourceHealth",
                            "Enabled": true
                          }
                        ]
                      }
                    },
                    "ResourceGroups": {}
                  }
                },
                "ManagementGroups": {}
              },
              "ALZ-management": {
                "MgId": "ALZ-management",
                "MgName": "ALZ-management",
                "mgParentId": "ALZ-platform",
                "mgParentName": "ALZ-platform",
                "level": "3",
                "PolicyDefinitionsCustom": {},
                "PolicySetDefinitionsCustom": {},
                "BlueprintDefinitions": {},
                "PolicyAssignments": {
                  "/providers/Microsoft.Management/managementGroups/ALZ-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics": {
                    "identity": {
                      "principalId": "c909f2f5-8054-42a5-92ce-9b21bbc3701e",
                      "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "displayName": "Configure Log Analytics workspace and automation account to centralize logs and monitoring",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8e3e61b3-0b32-22d5-4edf-55f87fdb5955",
                      "scope": "/providers/Microsoft.Management/managementGroups/ALZ-management",
                      "parameters": {
                        "workspaceName": {
                          "value": "ALZ-law"
                        },
                        "automationAccountName": {
                          "value": "ALZ-aauto"
                        },
                        "workspaceRegion": {
                          "value": "uksouth"
                        },
                        "automationRegion": {
                          "value": "uksouth"
                        },
                        "rgName": {
                          "value": "ALZ-mgmt"
                        },
                        "dataRetention": {
                          "value": "30"
                        }
                      },
                      "description": "Deploy resource group containing Log Analytics workspace and linked automation account to centralize logs and monitoring. The automation account is aprerequisite for solutions like Updates and Change Tracking.",
                      "metadata": {
                        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                        "createdOn": "2024-06-10T09:13:45.9423789Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "DoNotEnforce",
                      "nonComplianceMessages": [
                        {
                          "message": "Log Analytics workspace and automation account should be configured to centralize logs and monitoring."
                        }
                      ]
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ALZ-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deploy-Log-Analytics",
                    "location": "uksouth",
                    "systemData": {
                      "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "createdByType": "User",
                      "createdAt": "2024-06-10T09:13:43.9623502Z",
                      "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "lastModifiedByType": "User",
                      "lastModifiedAt": "2024-06-10T09:13:43.9623502Z"
                    }
                  }
                },
                "RoleAssignments": {
                  "/providers/microsoft.management/managementgroups/alz-management/providers/microsoft.authorization/roleassignments/727ecf53-6fd8-47d5-8a9c-0c6e69b793a2": [
                    {
                      "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-management/providers/microsoft.authorization/roleassignments/727ecf53-6fd8-47d5-8a9c-0c6e69b793a2",
                      "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-management",
                      "DisplayName": "System Administrator",
                      "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                      "RoleDefinitionName": "Owner",
                      "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                      "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                      "ObjectType": "User",
                      "PIM": "false"
                    }
                  ],
                  "/providers/microsoft.management/managementgroups/alz-management/providers/microsoft.authorization/roleassignments/d9a5a5da-f36a-5b53-9f18-86d77a477dca": [
                    {
                      "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-management/providers/microsoft.authorization/roleassignments/d9a5a5da-f36a-5b53-9f18-86d77a477dca",
                      "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-management",
                      "DisplayName": "Deploy-Log-Analytics",
                      "SignInName": null,
                      "RoleDefinitionName": "Contributor",
                      "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                      "ObjectId": "c909f2f5-8054-42a5-92ce-9b21bbc3701e",
                      "ObjectType": "ServicePrincipal",
                      "PIM": "false"
                    }
                  ]
                },
                "DiagnosticSettings": {
                  "toLa": {
                    "Name": "toLa",
                    "Type": "LA",
                    "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                    "Settings": [
                      {
                        "Category": "Administrative",
                        "Enabled": true
                      },
                      {
                        "Category": "Policy",
                        "Enabled": true
                      }
                    ]
                  }
                },
                "Subscriptions": {
                  "456b546a-94a4-4270-a70e-ac959eaf2874": {
                    "SubscriptionName": "ME-MngEnvMCAP002741-sachana-1",
                    "SubscriptionQuotaId": "Internal_2014-09-01",
                    "SubscriptionState": "Enabled",
                    "SubscriptionTags": {},
                    "PolicyDefinitionsCustom": {},
                    "PolicySetDefinitionsCustom": {},
                    "BlueprintDefinitions": {},
                    "PolicyAssignments": {
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/DataProtectionSecurityCenter": {
                        "properties": {
                          "displayName": "ASC DataProtection (subscription: 456b546a-94a4-4270-a70e-ac959eaf2874)",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/9cb3cc7a-b39b-4b82-bc89-e5a5d9ff7b97",
                          "scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "description": "This policy assignment was automatically created by Azure Security Center",
                          "metadata": {
                            "assignedBy": "Security Center",
                            "createdBy": "d21e721b-8618-4309-b6f3-ac0ad818ad40",
                            "createdOn": "2024-06-06T16:15:22.3917417Z",
                            "updatedBy": null,
                            "updatedOn": null
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/DataProtectionSecurityCenter",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "DataProtectionSecurityCenter",
                        "systemData": {
                          "createdBy": "8edd93e1-2103-40b4-bd70-6e34e586362d",
                          "createdByType": "Application",
                          "createdAt": "2024-06-06T16:15:22.3487292Z",
                          "lastModifiedBy": "8edd93e1-2103-40b4-bd70-6e34e586362d",
                          "lastModifiedByType": "Application",
                          "lastModifiedAt": "2024-06-06T16:15:22.3487292Z"
                        }
                      },
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning AKS Security Profile": {
                        "identity": {
                          "principalId": "3299fb70-0748-4b46-bf42-9f6697f2bec6",
                          "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Defender for Containers provisioning AKS Security Profile",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/64def556-fbad-4622-930e-72d1d5589bf5",
                          "scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "parameters": {},
                          "description": "This policy assignment was automatically created by Microsoft Defender for Cloud for agent installation as configured in Defender for Cloud auto provisioning.",
                          "metadata": {
                            "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "createdOn": "2022-11-04T06:33:50.7800795Z",
                            "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "updatedOn": "2024-04-23T08:26:46.5494864Z"
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning AKS Security Profile",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Defender for Containers provisioning AKS Security Profile",
                        "location": "centralus",
                        "systemData": {
                          "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "createdByType": "User",
                          "createdAt": "2022-11-04T06:33:47.1632126Z",
                          "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "lastModifiedByType": "User",
                          "lastModifiedAt": "2024-04-23T08:26:45.2786374Z"
                        }
                      },
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning ARC k8s Enabled": {
                        "identity": {
                          "principalId": "f95e2d60-c7d8-4da7-9605-e7aa1c89d8ce",
                          "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Defender for Containers provisioning ARC k8s Enabled",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/708b60a6-d253-4fe0-9114-4be4c00f012c",
                          "scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "parameters": {},
                          "description": "This policy assignment was automatically created by Microsoft Defender for Cloud for agent installation as configured in Defender for Cloud auto provisioning.",
                          "metadata": {
                            "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "createdOn": "2022-11-04T06:33:50.5000512Z",
                            "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "updatedOn": "2024-04-23T08:26:49.3941031Z"
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning ARC k8s Enabled",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Defender for Containers provisioning ARC k8s Enabled",
                        "location": "centralus",
                        "systemData": {
                          "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "createdByType": "User",
                          "createdAt": "2022-11-04T06:33:47.1632126Z",
                          "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "lastModifiedByType": "User",
                          "lastModifiedAt": "2024-04-23T08:26:45.2188153Z"
                        }
                      },
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning Azure Policy Addon for Kub": {
                        "identity": {
                          "principalId": "06f3812c-8fba-4d66-a09b-a3ba3b15e6be",
                          "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Defender for Containers provisioning Azure Policy Addon for Kub",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7",
                          "scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "parameters": {},
                          "description": "This policy assignment was automatically created by Microsoft Defender for Cloud for agent installation as configured in Defender for Cloud auto provisioning.",
                          "metadata": {
                            "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "createdOn": "2022-11-04T06:33:50.3780844Z",
                            "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "updatedOn": "2024-04-23T08:26:46.589079Z"
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning Azure Policy Addon for Kub",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Defender for Containers provisioning Azure Policy Addon for Kub",
                        "location": "centralus",
                        "systemData": {
                          "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "createdByType": "User",
                          "createdAt": "2022-11-04T06:33:47.1632126Z",
                          "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "lastModifiedByType": "User",
                          "lastModifiedAt": "2024-04-23T08:26:45.3327406Z"
                        }
                      },
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning Policy extension for Arc-e": {
                        "identity": {
                          "principalId": "974bd8f3-e3cc-4647-b3aa-8262e35a1a58",
                          "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Defender for Containers provisioning Policy extension for Arc-e",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0adc5395-9169-4b9b-8687-af838d69410a",
                          "scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "parameters": {},
                          "description": "This policy assignment was automatically created by Microsoft Defender for Cloud for agent installation as configured in Defender for Cloud auto provisioning.",
                          "metadata": {
                            "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "createdOn": "2022-11-04T06:33:50.6218325Z",
                            "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "updatedOn": "2024-04-23T08:26:46.4250607Z"
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/Defender for Containers provisioning Policy extension for Arc-e",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Defender for Containers provisioning Policy extension for Arc-e",
                        "location": "centralus",
                        "systemData": {
                          "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "createdByType": "User",
                          "createdAt": "2022-11-04T06:33:47.1632126Z",
                          "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "lastModifiedByType": "User",
                          "lastModifiedAt": "2024-04-23T08:26:45.2210259Z"
                        }
                      },
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/Defender for SQL on SQL VMs and Arc-enabled SQL Servers": {
                        "identity": {
                          "principalId": "68ef12dd-26f3-4d8c-9f4a-03479d762f15",
                          "tenantId": "75a3a7b7-f5da-4566-ae58-893940d663b7",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/d7c3ea3a-edf3-4bd5-bd64-d5b635b05393",
                          "scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "parameters": {},
                          "description": "This policy assignment was automatically created by Microsoft Defender for Cloud for agent installation as configured in Defender for Cloud auto provisioning.",
                          "metadata": {
                            "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                            "createdOn": "2024-04-23T08:26:47.4697332Z",
                            "updatedBy": null,
                            "updatedOn": null
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                        "location": "centralus",
                        "systemData": {
                          "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "createdByType": "User",
                          "createdAt": "2024-04-23T08:26:46.0382295Z",
                          "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "lastModifiedByType": "User",
                          "lastModifiedAt": "2024-04-23T08:26:46.0382295Z"
                        }
                      },
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/OpenSourceRelationalDatabasesProtectionSecurityCenter": {
                        "properties": {
                          "displayName": "ASC OpenSourceRelationalDatabasesProtection (subscription: 456b546a-94a4-4270-a70e-ac959eaf2874)",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/e77fc0b3-f7e9-4c58-bc13-cb753ed8e46e",
                          "scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "description": "This policy assignment was automatically created by Azure Security Center",
                          "metadata": {
                            "assignedBy": "Security Center",
                            "createdBy": "d21e721b-8618-4309-b6f3-ac0ad818ad40",
                            "createdOn": "2024-06-06T16:15:29.8790869Z",
                            "updatedBy": null,
                            "updatedOn": null
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/Microsoft.Authorization/policyAssignments/OpenSourceRelationalDatabasesProtectionSecurityCenter",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "OpenSourceRelationalDatabasesProtectionSecurityCenter",
                        "systemData": {
                          "createdBy": "8edd93e1-2103-40b4-bd70-6e34e586362d",
                          "createdByType": "Application",
                          "createdAt": "2024-06-06T16:15:29.8363287Z",
                          "lastModifiedBy": "8edd93e1-2103-40b4-bd70-6e34e586362d",
                          "lastModifiedByType": "Application",
                          "lastModifiedAt": "2024-06-06T16:15:29.8363287Z"
                        }
                      }
                    },
                    "RoleAssignments": {
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/0ca9f223-b514-4516-047b-890707efd134": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/0ca9f223-b514-4516-047b-890707efd134",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for Containers provisioning AKS Security Profile",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "3299fb70-0748-4b46-bf42-9f6697f2bec6",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/2277e94f-e2a5-42f1-d3e8-3f62ea9a0564": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/2277e94f-e2a5-42f1-d3e8-3f62ea9a0564",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "68ef12dd-26f3-4d8c-9f4a-03479d762f15",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/22d622fc-7e34-449f-93f7-43831d3f0b9e": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/22d622fc-7e34-449f-93f7-43831d3f0b9e",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Containers/securityOperators/DefenderForContainersSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Kubernetes Agent Operator",
                          "RoleDefinitionId": "5e93ba01-8f92-4c7a-b12a-801e3df23824",
                          "ObjectId": "765a957a-848b-46a6-ad45-a1f231ed0b39",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/3c56608d-87fa-41f5-ac2b-04c38a15fdf7": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/3c56608d-87fa-41f5-ac2b-04c38a15fdf7",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for Containers provisioning Azure Policy Addon for Kub",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "06f3812c-8fba-4d66-a09b-a3ba3b15e6be",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/3e027bcf-a1fc-44ef-87db-57db66a1e68f": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/3e027bcf-a1fc-44ef-87db-57db66a1e68f",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "CloudPosture/securityOperators/DefenderCSPMSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Defender CSPM Storage Scanner Operator",
                          "RoleDefinitionId": "8480c0f0-4509-4229-9339-7c10018cb8c4",
                          "ObjectId": "ae74368b-edc7-4572-9fc0-4c59e24825b1",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/451173d3-7654-4c57-c227-480884dfac8a": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/451173d3-7654-4c57-c227-480884dfac8a",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for Containers provisioning Policy extension for Arc-e",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "974bd8f3-e3cc-4647-b3aa-8262e35a1a58",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/545ef2a5-6a5e-4b3f-e06a-95c1f5bde8a0": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/545ef2a5-6a5e-4b3f-e06a-95c1f5bde8a0",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "User Access Administrator",
                          "RoleDefinitionId": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
                          "ObjectId": "68ef12dd-26f3-4d8c-9f4a-03479d762f15",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/5ba83be3-36a5-458d-81f8-f5c1412d195c": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/5ba83be3-36a5-458d-81f8-f5c1412d195c",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "System Administrator",
                          "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                          "RoleDefinitionName": "Owner",
                          "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                          "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                          "ObjectType": "User",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/65db67b4-a1c6-54ed-39b5-c23288aa82c9": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/65db67b4-a1c6-54ed-39b5-c23288aa82c9",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "StorageDataScanner",
                          "SignInName": null,
                          "RoleDefinitionName": "Defender for Storage Data Scanner",
                          "RoleDefinitionId": "1e7ca9b1-60d1-4db8-a914-f2ca1ff27c40",
                          "ObjectId": "b957a285-59a4-4ecc-a2ff-0a1c1c513fd5",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/6692ac65-c6b8-44bf-deb3-f1206eb51cd9": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/6692ac65-c6b8-44bf-deb3-f1206eb51cd9",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for Containers provisioning AKS Security Profile",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "3299fb70-0748-4b46-bf42-9f6697f2bec6",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/68b1ed0f-72b1-5da7-bd73-c8588b48a299": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/68b1ed0f-72b1-5da7-bd73-c8588b48a299",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Deploy-AzSqlDb-Auditing",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "49221f93-fbcc-4900-9360-3af2db51bde5",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/6967da8a-0442-4cbd-b0a4-f17261e55c07": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/6967da8a-0442-4cbd-b0a4-f17261e55c07",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for Containers provisioning ARC k8s Enabled",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "f95e2d60-c7d8-4da7-9605-e7aa1c89d8ce",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/6f33d9c0-16d8-4d28-a3ce-13d45294ef3d": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/6f33d9c0-16d8-4d28-a3ce-13d45294ef3d",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "StorageAccounts/securityOperators/DefenderForStorageSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Security Admin",
                          "RoleDefinitionId": "fb1c8493-542b-48eb-b624-b4c8fea62acd",
                          "ObjectId": "3b7c7de9-b7bb-4060-8178-0320c5880be6",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/70741628-f888-4bd5-1ccb-b2cff5945863": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/70741628-f888-4bd5-1ccb-b2cff5945863",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "Monitoring Contributor",
                          "RoleDefinitionId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "ObjectId": "68ef12dd-26f3-4d8c-9f4a-03479d762f15",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/7ced2acc-5767-502b-8bb1-a1fe3597e4b7": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/7ced2acc-5767-502b-8bb1-a1fe3597e4b7",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Deploy-AzSqlDb-Auditing",
                          "SignInName": null,
                          "RoleDefinitionName": "SQL Security Manager",
                          "RoleDefinitionId": "056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                          "ObjectId": "49221f93-fbcc-4900-9360-3af2db51bde5",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/7e49a719-9ee5-42d6-5017-0ddbd620026d": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/7e49a719-9ee5-42d6-5017-0ddbd620026d",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "68ef12dd-26f3-4d8c-9f4a-03479d762f15",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/7fb0d2fe-be52-40bc-87d1-a3b5253d451c": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/7fb0d2fe-be52-40bc-87d1-a3b5253d451c",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "CloudPosture/securityOperators/DefenderCSPMSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Kubernetes Agentless Operator",
                          "RoleDefinitionId": "d5a2ae44-610b-4500-93be-660a0c5f5ca6",
                          "ObjectId": "ae74368b-edc7-4572-9fc0-4c59e24825b1",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/a278307d-89de-a210-8ec8-b89ee12f07f0": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/a278307d-89de-a210-8ec8-b89ee12f07f0",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Automanage API Access",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "6b76763b-56ec-4845-846b-eded32912541",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/abbd409e-7f08-4de6-bee1-5c864f8a942b": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/abbd409e-7f08-4de6-bee1-5c864f8a942b",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "CloudPosture/securityOperators/DefenderCSPMSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Storage Account Contributor",
                          "RoleDefinitionId": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
                          "ObjectId": "ae74368b-edc7-4572-9fc0-4c59e24825b1",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/acc399ff-8f38-40f9-b3d7-1911cd48b5db": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/acc399ff-8f38-40f9-b3d7-1911cd48b5db",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Microsoft Defender for Cloud Servers Scanner Resource Provider",
                          "SignInName": null,
                          "RoleDefinitionName": "VM Scanner Operator",
                          "RoleDefinitionId": "d24ecba3-c1f4-40fa-a7bb-4588a071e8fd",
                          "ObjectId": "e4045c2e-5d17-40c2-91de-737401c4bba9",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/b16dd931-2109-4583-a689-b13299bf78b6": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/b16dd931-2109-4583-a689-b13299bf78b6",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "CloudPosture/securityOperators/DefenderCSPMSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Role Based Access Control Administrator",
                          "RoleDefinitionId": "f58310d9-a9f6-439a-9e8d-f62e7b41a168",
                          "ObjectId": "ae74368b-edc7-4572-9fc0-4c59e24825b1",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/b59f7d93-4c4d-44f5-9ff0-20052aa71c6d": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/b59f7d93-4c4d-44f5-9ff0-20052aa71c6d",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Cloud Infrastructure Entitlement Management",
                          "SignInName": null,
                          "RoleDefinitionName": "Reader",
                          "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                          "ObjectId": "ec760573-1b29-41e5-bf5e-282d3c3f19d8",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/b75fc6e2-070c-4c9a-87d8-2f8bab7746ee": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/b75fc6e2-070c-4c9a-87d8-2f8bab7746ee",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "StorageAccounts/securityOperators/DefenderForStorageSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Storage Account Contributor",
                          "RoleDefinitionId": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
                          "ObjectId": "3b7c7de9-b7bb-4060-8178-0320c5880be6",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/bbb44d97-f06d-4bd6-81d1-ca2ac3d32fab": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/bbb44d97-f06d-4bd6-81d1-ca2ac3d32fab",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "StorageAccounts/securityOperators/DefenderForStorageSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Defender for Storage Scanner Operator",
                          "RoleDefinitionId": "0f641de8-0b88-4198-bdef-bd8b45ceba96",
                          "ObjectId": "3b7c7de9-b7bb-4060-8178-0320c5880be6",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/befdff91-195d-403f-9d57-3902c51f45bd": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/befdff91-195d-403f-9d57-3902c51f45bd",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "Azure Connected Machine Resource Administrator",
                          "RoleDefinitionId": "cd570a14-e51a-42ad-bac8-bafd67325302",
                          "ObjectId": "68ef12dd-26f3-4d8c-9f4a-03479d762f15",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/c402a19f-93b6-48b1-a7c3-9ee7c8975e31": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/c402a19f-93b6-48b1-a7c3-9ee7c8975e31",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for Containers provisioning Policy extension for Arc-e",
                          "SignInName": null,
                          "RoleDefinitionName": "Log Analytics Contributor",
                          "RoleDefinitionId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          "ObjectId": "974bd8f3-e3cc-4647-b3aa-8262e35a1a58",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/cffc7fdf-c0d3-4eb0-3ac3-bbb9f06bd6c8": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/cffc7fdf-c0d3-4eb0-3ac3-bbb9f06bd6c8",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for Containers provisioning ARC k8s Enabled",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "f95e2d60-c7d8-4da7-9605-e7aa1c89d8ce",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/d13f8a75-63f8-4a41-51c9-49924aba8a88": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/d13f8a75-63f8-4a41-51c9-49924aba8a88",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for Containers provisioning Azure Policy Addon for Kub",
                          "SignInName": null,
                          "RoleDefinitionName": "Contributor",
                          "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                          "ObjectId": "06f3812c-8fba-4d66-a09b-a3ba3b15e6be",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/d4aa713f-2de0-4112-976b-d157a302e9b0": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/d4aa713f-2de0-4112-976b-d157a302e9b0",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Microsoft Demos",
                          "SignInName": null,
                          "RoleDefinitionName": "Owner",
                          "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                          "ObjectId": "7abbab28-45a5-4bc7-b759-2270e1608807",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/d6c17055-81c2-4e2f-8aa2-3f06055b261a": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/d6c17055-81c2-4e2f-8aa2-3f06055b261a",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
                          "SignInName": null,
                          "RoleDefinitionName": "Virtual Machine Contributor",
                          "RoleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                          "ObjectId": "68ef12dd-26f3-4d8c-9f4a-03479d762f15",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/d94a498e-1fc1-4deb-805d-5583cadccd41": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/d94a498e-1fc1-4deb-805d-5583cadccd41",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "StorageAccounts/securityOperators/DefenderForStorageSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "EventGrid Contributor",
                          "RoleDefinitionId": "1e241071-0855-49ea-94dc-649edcd759de",
                          "ObjectId": "3b7c7de9-b7bb-4060-8178-0320c5880be6",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/e075f2db-93d8-436f-945b-bd627b90fd69": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/e075f2db-93d8-436f-945b-bd627b90fd69",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "Containers/securityOperators/DefenderForContainersSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Kubernetes Agentless Operator",
                          "RoleDefinitionId": "d5a2ae44-610b-4500-93be-660a0c5f5ca6",
                          "ObjectId": "765a957a-848b-46a6-ad45-a1f231ed0b39",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/e5b6a009-f5a5-4476-9ecc-618056776077": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/e5b6a009-f5a5-4476-9ecc-618056776077",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "StorageDataScanner",
                          "SignInName": null,
                          "RoleDefinitionName": "Storage Blob Data Reader",
                          "RoleDefinitionId": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
                          "ObjectId": "b957a285-59a4-4ecc-a2ff-0a1c1c513fd5",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/e65f8fbe-44d4-49ad-9e5b-f408717e1553": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/e65f8fbe-44d4-49ad-9e5b-f408717e1553",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "StorageAccounts/securityOperators/DefenderForStorageSecurityOperator",
                          "SignInName": null,
                          "RoleDefinitionName": "Role Based Access Control Administrator",
                          "RoleDefinitionId": "f58310d9-a9f6-439a-9e8d-f62e7b41a168",
                          "ObjectId": "3b7c7de9-b7bb-4060-8178-0320c5880be6",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ],
                      "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/f9605446-6fb3-4bb7-8190-da2dee7f94d7": [
                        {
                          "RoleAssignmentId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/providers/microsoft.authorization/roleassignments/f9605446-6fb3-4bb7-8190-da2dee7f94d7",
                          "Scope": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874",
                          "DisplayName": "MCAPSGov-AutomationApp",
                          "SignInName": null,
                          "RoleDefinitionName": "Owner",
                          "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                          "ObjectId": "b8d3339a-88d5-40e3-acd4-ba194fcbdba5",
                          "ObjectType": "ServicePrincipal",
                          "PIM": "false"
                        }
                      ]
                    },
                    "BlueprintAssignments": {},
                    "DiagnosticSettings": {
                      "MCAPSGov-LogsToLAWS": {
                        "Name": "MCAPSGov-LogsToLAWS",
                        "Type": "LA",
                        "TargetId": "/subscriptions/6b76ff87-a921-49fe-a04a-92aebd1ac6fa/resourceGroups/MCAPSGov-corp-RG/providers/Microsoft.OperationalInsights/workspaces/MCAPSGov-corp-ActivityLogsWorkspace",
                        "Settings": [
                          {
                            "Category": "Administrative",
                            "Enabled": true
                          },
                          {
                            "Category": "Security",
                            "Enabled": true
                          },
                          {
                            "Category": "ServiceHealth",
                            "Enabled": false
                          },
                          {
                            "Category": "Alert",
                            "Enabled": false
                          },
                          {
                            "Category": "Recommendation",
                            "Enabled": false
                          },
                          {
                            "Category": "Policy",
                            "Enabled": false
                          },
                          {
                            "Category": "Autoscale",
                            "Enabled": false
                          },
                          {
                            "Category": "ResourceHealth",
                            "Enabled": false
                          }
                        ]
                      },
                      "subscriptionToLa": {
                        "Name": "subscriptionToLa",
                        "Type": "LA",
                        "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                        "Settings": [
                          {
                            "Category": "Administrative",
                            "Enabled": true
                          },
                          {
                            "Category": "Security",
                            "Enabled": true
                          },
                          {
                            "Category": "ServiceHealth",
                            "Enabled": true
                          },
                          {
                            "Category": "Alert",
                            "Enabled": true
                          },
                          {
                            "Category": "Recommendation",
                            "Enabled": true
                          },
                          {
                            "Category": "Policy",
                            "Enabled": true
                          },
                          {
                            "Category": "Autoscale",
                            "Enabled": true
                          },
                          {
                            "Category": "ResourceHealth",
                            "Enabled": true
                          }
                        ]
                      }
                    },
                    "ResourceGroups": {}
                  }
                },
                "ManagementGroups": {}
              }
            }
          },
          "ALZ-sandboxes": {
            "MgId": "ALZ-sandboxes",
            "MgName": "ALZ-sandboxes",
            "mgParentId": "ALZ",
            "mgParentName": "ALZ",
            "level": "2",
            "PolicyDefinitionsCustom": {},
            "PolicySetDefinitionsCustom": {},
            "BlueprintDefinitions": {},
            "PolicyAssignments": {
              "/providers/Microsoft.Management/managementGroups/ALZ-sandboxes/providers/Microsoft.Authorization/policyAssignments/Enforce-ALZ-Sandbox": {
                "properties": {
                  "displayName": "Enforce ALZ Sandbox Guardrails",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ALZ/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ALZ-Sandbox",
                  "scope": "/providers/Microsoft.Management/managementGroups/ALZ-sandboxes",
                  "parameters": {
                    "listOfResourceTypesNotAllowed": {
                      "value": [
                        "microsoft.network/expressroutecircuits",
                        "microsoft.network/expressroutegateways",
                        "microsoft.network/expressrouteports",
                        "microsoft.network/virtualwans",
                        "microsoft.network/virtualhubs",
                        "microsoft.network/vpngateways",
                        "microsoft.network/p2svpngateways",
                        "microsoft.network/vpnsites",
                        "microsoft.network/virtualnetworkgateways"
                      ]
                    }
                  },
                  "description": "This initiative will help enforce and govern subscriptions that are placed within the Sandbox Management Group. See https://aka.ms/alz/policies for more information.",
                  "metadata": {
                    "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                    "createdOn": "2024-06-10T09:13:42.4072315Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default",
                  "nonComplianceMessages": [
                    {
                      "message": "ALZ Sandbox Guardrails must be enforced."
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ALZ-sandboxes/providers/Microsoft.Authorization/policyAssignments/Enforce-ALZ-Sandbox",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Enforce-ALZ-Sandbox",
                "location": "uksouth",
                "systemData": {
                  "createdBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "createdByType": "User",
                  "createdAt": "2024-06-10T09:13:42.3456836Z",
                  "lastModifiedBy": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "lastModifiedByType": "User",
                  "lastModifiedAt": "2024-06-10T09:13:42.3456836Z"
                }
              }
            },
            "RoleAssignments": {
              "/providers/microsoft.management/managementgroups/alz-sandboxes/providers/microsoft.authorization/roleassignments/b0b481ce-30b8-4753-a51e-5e1f718e1039": [
                {
                  "RoleAssignmentId": "/providers/microsoft.management/managementgroups/alz-sandboxes/providers/microsoft.authorization/roleassignments/b0b481ce-30b8-4753-a51e-5e1f718e1039",
                  "Scope": "/providers/Microsoft.Management/managementGroups/ALZ-sandboxes",
                  "DisplayName": "System Administrator",
                  "SignInName": "admin@MngEnvMCAP002741.onmicrosoft.com",
                  "RoleDefinitionName": "Owner",
                  "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                  "ObjectId": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
                  "ObjectType": "User",
                  "PIM": "false"
                }
              ]
            },
            "DiagnosticSettings": {
              "toLa": {
                "Name": "toLa",
                "Type": "LA",
                "TargetId": "/subscriptions/456b546a-94a4-4270-a70e-ac959eaf2874/resourceGroups/ALZ-mgmt/providers/Microsoft.OperationalInsights/workspaces/ALZ-law",
                "Settings": [
                  {
                    "Category": "Administrative",
                    "Enabled": true
                  },
                  {
                    "Category": "Policy",
                    "Enabled": true
                  }
                ]
              }
            },
            "Subscriptions": {},
            "ManagementGroups": {}
          }
        }
      }
    },
    "CustomRoleDefinitions": {
      "5ad28dc9-da0e-5597-aa32-88bc91cab40d": {
        "roleName": "[ALZ] Security-Operations",
        "type": "CustomRole",
        "description": "Security Administrator role with a horizontal view across the entire Azure estate and the Azure Key Vault purge policy.",
        "assignableScopes": [
          "/providers/Microsoft.Management/managementGroups/ALZ"
        ],
        "permissions": [
          {
            "actions": [
              "*/read",
              "*/register/action",
              "Microsoft.KeyVault/locations/deletedVaults/purge/action",
              "Microsoft.PolicyInsights/*",
              "Microsoft.Authorization/policyAssignments/*",
              "Microsoft.Authorization/policyDefinitions/*",
              "Microsoft.Authorization/policyExemptions/*",
              "Microsoft.Authorization/policySetDefinitions/*",
              "Microsoft.Insights/alertRules/*",
              "Microsoft.Resources/deployments/*",
              "Microsoft.Security/*",
              "Microsoft.Support/*"
            ],
            "notActions": [],
            "dataActions": [],
            "notDataActions": []
          }
        ],
        "createdOn": "2024-06-10T08:58:29.2201999Z",
        "updatedOn": "2024-06-10T08:58:29.2201999Z",
        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
        "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d"
      },
      "9fb4595a-8be0-559c-9113-72bf43e596c7": {
        "roleName": "[ALZ] Application-Owners",
        "type": "CustomRole",
        "description": "Contributor role granted for application/operations team at resource group level",
        "assignableScopes": [
          "/providers/Microsoft.Management/managementGroups/ALZ"
        ],
        "permissions": [
          {
            "actions": [
              "*"
            ],
            "notActions": [
              "Microsoft.Authorization/*/write",
              "Microsoft.Network/publicIPAddresses/write",
              "Microsoft.Network/virtualNetworks/write",
              "Microsoft.KeyVault/locations/deletedVaults/purge/action"
            ],
            "dataActions": [],
            "notDataActions": []
          }
        ],
        "createdOn": "2024-06-10T08:58:29.210821Z",
        "updatedOn": "2024-06-10T08:58:29.210821Z",
        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
        "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d"
      },
      "ab3890be-f0cb-52e8-8021-262d7ded3e80": {
        "roleName": "[ALZ] Network-Management",
        "type": "CustomRole",
        "description": "Platform-wide global connectivity management: virtual networks, UDRs, NSGs, NVAs, VPN, Azure ExpressRoute, and others",
        "assignableScopes": [
          "/providers/Microsoft.Management/managementGroups/ALZ"
        ],
        "permissions": [
          {
            "actions": [
              "*/read",
              "Microsoft.Network/*",
              "Microsoft.Resources/deployments/*",
              "Microsoft.Support/*"
            ],
            "notActions": [],
            "dataActions": [],
            "notDataActions": []
          }
        ],
        "createdOn": "2024-06-10T08:58:29.1874428Z",
        "updatedOn": "2024-06-10T08:58:29.1874428Z",
        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
        "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d"
      },
      "b6490871-3ac0-5c06-9b8f-2b81aedfec60": {
        "roleName": "[ALZ] Subscription-Owner",
        "type": "CustomRole",
        "description": "Delegated role for subscription owner generated from subscription Owner role",
        "assignableScopes": [
          "/providers/Microsoft.Management/managementGroups/ALZ"
        ],
        "permissions": [
          {
            "actions": [
              "*"
            ],
            "notActions": [
              "Microsoft.Authorization/*/write",
              "Microsoft.Network/vpnGateways/*",
              "Microsoft.Network/expressRouteCircuits/*",
              "Microsoft.Network/routeTables/write",
              "Microsoft.Network/vpnSites/*"
            ],
            "dataActions": [],
            "notDataActions": []
          }
        ],
        "createdOn": "2024-06-10T08:58:29.1717822Z",
        "updatedOn": "2024-06-10T08:58:29.1717822Z",
        "createdBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d",
        "updatedBy": "8b1d3458-4d8e-4350-8db4-53e9f833233d"
      }
    }
  }
}
